{"version":3,"file":"Binance.js","sourceRoot":"","sources":["../../src/Binance/Binance.ts"],"names":[],"mappings":"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","sourcesContent":["import {Rest} from \"../Rest/Rest\";\nimport {BotWebsocket} from \"../Websocket/BotWebsocket\";\nimport {IBinanceOptions} from \"./Interfaces/IBinanceOptions\";\nimport {Market} from \"../Market/Market\";\n\nexport class Binance {\n\tpublic static INTERVALS: string[] = ['1m', '3m', '15m', '30m', '1h', '2h', '4h', '6h', '8h', '12h', '1d', '3d', '1w'];\n\tpublic static candleAPILimits = {\n\t\t'1m': 1000,\n\t\t'3m': 1000,\n\t\t'5m': 1000,\n\t\t'15m': 1000,\n\t\t'30m': 1000,\n\t\t'1h': 1000,\n\t\t'2h': 744,\n\t\t'4h': 373,\n\t\t'6h': 248,\n\t\t'8h': 187,\n\t\t'12h': 187,\n\t\t'1d': 63,\n\t\t'3d': 21,\n\t\t'1w': 9,\n\t};\n\tpublic static intervalDays: any = {\n\t\t'1m': 6,\n\t\t'3m': 3,\n\t\t'5m': 8,\n\t\t'15m': 20,\n\t\t'30m': 30,\n\t\t'1h': 55,\n\t\t'2h': 100,\n\t\t'4h': 200,\n\t\t'6h': 350,\n\t\t'8h': 400,\n\t\t'12h': 500,\n\t\t'1d': 1000,\n\t\t'3d': 333,\n\t\t'1w': 56\n\t};\n\tpublic static intervalToMilliseconds: any = {\n\t\t'1m': 60000,\n\t\t'3m': 60000 * 3,\n\t\t'5m': 60000 * 5,\n\t\t'15m': 60000 * 15,\n\t\t'30m': 60000 * 30,\n\t\t'1h': 3600000,\n\t\t'2h': 3600000 * 2,\n\t\t'4h': 3600000 * 4,\n\t\t'6h': 3600000 * 6,\n\t\t'8h': 3600000 * 8,\n\t\t'12h': 3600000 * 12,\n\t\t'1d': 3600000 * 24,\n\t\t'3d': 3600000 * 24 * 3,\n\t\t'1w': 3600000 * 24 * 7\n\t};\n\tpublic static intervalToMinutes: any = {\n\t\t'1m': 1,\n\t\t'3m': 3,\n\t\t'5m': 5,\n\t\t'15m': 15,\n\t\t'30m': 30,\n\t\t'1h': 60,\n\t\t'2h': 60 * 2,\n\t\t'4h': 60 * 4,\n\t\t'6h': 60 * 6,\n\t\t'8h': 60 * 8,\n\t\t'12h': 60 * 12,\n\t\t'1d': 60 * 24,\n\t\t'3d': 60 * 24 * 3,\n\t\t'1w': 60 * 24 * 7,\n\t};\n\tpublic static minutesToInterval: any = {\n\t\t1: '1m',\n\t\t3: '3m',\n\t\t5: '5m',\n\t\t15: '15m',\n\t\t30: '30m',\n\t\t60: '1h',\n\t\t120: '2h',\n\t\t240: '4h',\n\t\t360: '6h',\n\t\t480: '8h',\n\t\t720: '12h',\n\t\t1440: '1d',\n\t\t4320: '3d',\n\t\t10080: '1w'\n\t};\n\tpublic static markets: Market[];\n\tpublic static options: IBinanceOptions;\n\tpublic rest: Rest;\n\tpublic websocket: BotWebsocket;\n\n\tpublic init() {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tBinance.markets = await this.rest.getMarkets();\n\t\t\t\tresolve(Binance.markets);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate static _getStepSizeBySymbol(symbol: string): number {\n\t\tlet stepSize: number;\n\t\tlet marketMatch: Market[];\n\t\tif (!Binance.markets || Binance.markets.length === 0) {\n\t\t\treturn null;\n\t\t}\n\t\tmarketMatch = Binance.markets.filter(market => market.symbol === symbol);\n\t\tif (marketMatch && marketMatch.length > 0) {\n\t\t\tstepSize = marketMatch[0].limits.stepSize;\n\t\t}\n\t\treturn stepSize;\n\t}\n\n\tpublic static roundStep(amount: number, symbol: string): number {\n\t\tlet precision: number = 0;\n\t\tlet stepSplit: string[];\n\t\tlet stepSize: number = this._getStepSizeBySymbol(symbol);\n\t\tif (stepSize) {\n\t\t\tstepSplit = stepSize.toString().split('.');\n\t\t\tif (amount && stepSplit.length > 1) {\n\t\t\t\tprecision = stepSplit[1].length;\n\t\t\t\treturn Number((Math.round(amount / stepSize) * stepSize).toFixed(precision));\n\t\t\t} else {\n\t\t\t\treturn Number((Math.round(amount / stepSize) * stepSize).toFixed(0));\n\t\t\t}\n\t\t} else {\n\t\t\treturn amount;\n\t\t}\n\t}\n\n\tconstructor(options: IBinanceOptions) {\n\t\tthis.rest = new Rest(options);\n\t\tthis.websocket = new BotWebsocket(options);\n\t}\n}"]}