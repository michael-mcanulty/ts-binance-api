{"version":3,"file":"CallOptions.js","sourceRoot":"","sources":["../../../../src/Rest/CallOptions.ts"],"names":[],"mappings":";;AACA,2CAAsC;AAiBtC,MAAa,WAAW;IAUhB,YAAY;QAClB,IAAI,WAAW,GAAiE,EAAE,CAAC;QACnF,WAAW,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QAC3B,WAAW,CAAC,MAAM,GAAY,IAAI,CAAC,MAAM,CAAC;QAC1C,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QACnC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC7B,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACzB,WAAW,CAAC,uBAAuB,GAAG,IAAI,CAAC,uBAAuB,CAAC;QACnE,OAAO,WAAW,CAAC;IACpB,CAAC;IAED,YAAY,OAAkB;QAC7B,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;QACvB,IAAI,CAAC,OAAO,GAAa,OAAO,CAAC,OAAO,CAAC;QACzC,IAAI,CAAC,MAAM,GAAa,OAAO,CAAC,MAAM,CAAC;QACvC,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC;QACjC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,IAAI,KAAK,CAAC;QAC1C,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,SAAS,CAAC;QAC1C,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,IAAI,SAAS,CAAC;QAClC,IAAI,CAAC,uBAAuB,GAAG,OAAO,CAAC,uBAAuB,IAAI,IAAI,CAAC;QACvE,IAAI,IAAI,CAAC,MAAM,IAAI,OAAO,CAAC,OAAO,EAAE;YACnC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,IAAI,qBAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC7D;IACF,CAAC;CACD;AAlCD,kCAkCC","sourcesContent":["import {ICallOpts} from \"./Interfaces/ICallOpts\";\r\nimport {ApiHeader} from \"./ApiHeader\";\r\nimport {TMethod} from \"./TMethod\";\r\nimport {IWithdrawHistoryReq} from \"../Withdraw/Interfaces/IWithdrawHistoryReq\";\r\nimport {IDepositHistoryReq} from \"../Deposit/Interfaces/IDepositHistoryReq\";\r\nimport {AccountInfoOptions} from \"../Account/AccountInfoOptions\";\r\nimport {IDepositAddressReq} from \"../Deposit/Interfaces/IDepositAddressReq\";\r\nimport {Signed} from \"./Signed\";\r\nimport {DataStream} from \"./DataStream\";\r\nimport {QueryOrder} from \"../Transaction/QueryOrder\";\r\nimport {NewOrder} from \"../Transaction/NewOrder\";\r\nimport {CancelOrder} from \"../Transaction/CancelOrder\";\r\nimport {OpenOrder} from \"../Transaction/OpenOrder\";\r\nimport {Headers} from \"request\";\r\nimport * as requestPromise from \"request-promise-native\";\r\nimport {ICandleRequest} from \"../ExchangeInfo/Interfaces/ICandleRequest\";\r\nimport {IGetAllOrdersOpts} from \"../Transaction/Interfaces/IGetAllOrdersOpts\";\r\n\r\nexport class CallOptions implements ICallOpts{\r\n\theaders?: Headers;\r\n\turi: string;\r\n\tjson?: boolean;\r\n\tmethod: TMethod;\r\n\tisSigned?: boolean;\r\n\tapiKey?: string;\r\n\tresolveWithFullResponse?: boolean;\r\n\tqs?: IGetAllOrdersOpts | IWithdrawHistoryReq | IDepositHistoryReq | IDepositAddressReq | QueryOrder | NewOrder | Signed | CancelOrder | OpenOrder | DataStream | AccountInfoOptions | ICandleRequest ;\r\n\r\n\tpublic toObjLiteral(): requestPromise.OptionsWithUri{\r\n\t\tlet requestOpts: requestPromise.OptionsWithUri = <requestPromise.OptionsWithUri>{};\r\n\t\trequestOpts.uri = this.uri;\r\n\t\trequestOpts.method = <string> this.method;\r\n\t\trequestOpts.headers = this.headers;\r\n\t\trequestOpts.json = this.json;\r\n\t\trequestOpts.qs = this.qs;\r\n\t\trequestOpts.resolveWithFullResponse = this.resolveWithFullResponse;\r\n\t\treturn requestOpts;\r\n\t}\r\n\r\n\tconstructor(options: ICallOpts) {\r\n\t\tthis.uri = options.uri;\r\n\t\tthis.headers = <Headers> options.headers;\r\n\t\tthis.method = <TMethod> options.method;\r\n\t\tthis.json = options.json || true;\r\n\t\tthis.isSigned = options.isSigned || false;\r\n\t\tthis.apiKey = options.apiKey || undefined;\r\n\t\tthis.qs = options.qs || undefined;\r\n\t\tthis.resolveWithFullResponse = options.resolveWithFullResponse || true;\r\n\t\tif (this.apiKey || options.headers) {\r\n\t\t\tthis.headers = options.headers || new ApiHeader(this.apiKey);\r\n\t\t}\r\n\t}\r\n}"]}