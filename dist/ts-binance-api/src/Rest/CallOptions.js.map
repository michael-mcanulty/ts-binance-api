{"version":3,"file":"CallOptions.js","sourceRoot":"","sources":["../../../../src/Rest/CallOptions.ts"],"names":[],"mappings":";;AACA,2CAAsC;AAiBtC;IAUQ,YAAY;QAClB,IAAI,WAAW,GAAiE,EAAE,CAAC;QACnF,WAAW,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QAC3B,WAAW,CAAC,MAAM,GAAY,IAAI,CAAC,MAAM,CAAC;QAC1C,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QACnC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC7B,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACzB,WAAW,CAAC,uBAAuB,GAAG,IAAI,CAAC,uBAAuB,CAAC;QACnE,MAAM,CAAC,WAAW,CAAC;IACpB,CAAC;IAED,YAAY,OAAkB;QAC7B,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;QACvB,IAAI,CAAC,OAAO,GAAa,OAAO,CAAC,OAAO,CAAC;QACzC,IAAI,CAAC,MAAM,GAAa,OAAO,CAAC,MAAM,CAAC;QACvC,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC;QACjC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,IAAI,KAAK,CAAC;QAC1C,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,SAAS,CAAC;QAC1C,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,IAAI,SAAS,CAAC;QAClC,IAAI,CAAC,uBAAuB,GAAG,OAAO,CAAC,uBAAuB,IAAI,IAAI,CAAC;QACvE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;YACpC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,IAAI,qBAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC9D,CAAC;IACF,CAAC;CACD;AAlCD,kCAkCC","sourcesContent":["import {ICallOpts} from \"./Interfaces/ICallOpts\";\nimport {ApiHeader} from \"./ApiHeader\";\nimport {TMethod} from \"./TMethod\";\nimport {IWithdrawHistoryReq} from \"../Withdraw/Interfaces/IWithdrawHistoryReq\";\nimport {IDepositHistoryReq} from \"../Deposit/Interfaces/IDepositHistoryReq\";\nimport {AccountInfoOptions} from \"../Account/AccountInfoOptions\";\nimport {IDepositAddressReq} from \"../Deposit/Interfaces/IDepositAddressReq\";\nimport {Signed} from \"./Signed\";\nimport {DataStream} from \"./DataStream\";\nimport {QueryOrder} from \"../Transaction/QueryOrder\";\nimport {NewOrder} from \"../Transaction/NewOrder\";\nimport {CancelOrder} from \"../Transaction/CancelOrder\";\nimport {OpenOrder} from \"../Transaction/OpenOrder\";\nimport {Headers} from \"request\";\nimport * as requestPromise from \"request-promise-native\";\nimport {ICandleRequest} from \"../ExchangeInfo/Interfaces/ICandleRequest\";\nimport {IGetAllOrdersOpts} from \"../Transaction/Interfaces/IGetAllOrdersOpts\";\n\nexport class CallOptions implements ICallOpts{\n\theaders?: Headers;\n\turi: string;\n\tjson?: boolean;\n\tmethod: TMethod;\n\tisSigned?: boolean;\n\tapiKey?: string;\n\tresolveWithFullResponse?: boolean;\n\tqs?: IGetAllOrdersOpts | IWithdrawHistoryReq | IDepositHistoryReq | IDepositAddressReq | QueryOrder | NewOrder | Signed | CancelOrder | OpenOrder | DataStream | AccountInfoOptions | ICandleRequest ;\n\n\tpublic toObjLiteral(): requestPromise.OptionsWithUri{\n\t\tlet requestOpts: requestPromise.OptionsWithUri = <requestPromise.OptionsWithUri>{};\n\t\trequestOpts.uri = this.uri;\n\t\trequestOpts.method = <string> this.method;\n\t\trequestOpts.headers = this.headers;\n\t\trequestOpts.json = this.json;\n\t\trequestOpts.qs = this.qs;\n\t\trequestOpts.resolveWithFullResponse = this.resolveWithFullResponse;\n\t\treturn requestOpts;\n\t}\n\n\tconstructor(options: ICallOpts) {\n\t\tthis.uri = options.uri;\n\t\tthis.headers = <Headers> options.headers;\n\t\tthis.method = <TMethod> options.method;\n\t\tthis.json = options.json || true;\n\t\tthis.isSigned = options.isSigned || false;\n\t\tthis.apiKey = options.apiKey || undefined;\n\t\tthis.qs = options.qs || undefined;\n\t\tthis.resolveWithFullResponse = options.resolveWithFullResponse || true;\n\t\tif (this.apiKey || options.headers) {\n\t\t\tthis.headers = options.headers || new ApiHeader(this.apiKey);\n\t\t}\n\t}\n}"]}