{"version":3,"file":"QueryOrder.js","sourceRoot":"","sources":["../../../../src/Transaction/QueryOrder.ts"],"names":[],"mappings":";;AACA,qDAAgD;AAIhD,gBAAwB,SAAQ,+BAAc;IAGtC,YAAY;QAClB,IAAI,IAAI,GAAgB,IAAI,CAAC;QAC7B,IAAI,KAAK,GAA6B,EAAE,CAAC;QACzC,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,CAAA,CAAC;YACtB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,UAAU,CAAC,CAAC,CAAC;gBACpD,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;YAC1B,CAAC;QACF,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACd,CAAC;IAED,YAAY,IAAqB;QAChC,IAAI,SAAS,GAAqC,EAAE,CAAC;QACrD,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QACjC,SAAS,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACvC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC/B,KAAK,CAAC,SAAS,CAAC,CAAC;QACjB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;IACjD,CAAC;CACD;AAtBD,gCAsBC","sourcesContent":["import {IQueryOrder} from \"./Interfaces/IQueryOrder\";\r\nimport {BaseQueryOrder} from \"./BaseQueryOrder\";\r\nimport {IQueryOrderOpts} from \"./Interfaces/IQueryOrderOpts\";\r\nimport {IBaseQueryOrder} from \"./Interfaces/IBaseQueryOrder\";\r\n\r\nexport class QueryOrder extends BaseQueryOrder implements IQueryOrder {\r\n\torigClientOrderId: string;\r\n\r\n\tpublic toObjLiteral(): IQueryOrder{\r\n\t\tlet self: IQueryOrder = this;\r\n\t\tlet order: IQueryOrder = <IQueryOrder>{};\r\n\t\tfor (let prop in self){\r\n\t\t\tif (self[prop] && typeof self[prop] !== \"function\") {\r\n\t\t\t\torder[prop] = self[prop];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn order;\r\n\t}\r\n\r\n\tconstructor(opts: IQueryOrderOpts) {\r\n\t\tlet baseQuery: IBaseQueryOrder = <IBaseQueryOrder>{};\r\n\t\tbaseQuery.orderId = opts.orderId;\r\n\t\tbaseQuery.recvWindow = opts.recvWindow;\r\n\t\tbaseQuery.symbol = opts.symbol;\r\n\t\tsuper(baseQuery);\r\n\t\tthis.origClientOrderId = opts.origClientOrderId;\r\n\t}\r\n}"]}