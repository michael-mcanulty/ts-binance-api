"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const crypto=require("crypto"),HttpError_1=require("../Error/HttpError"),Signed_1=require("./Signed"),ApiHeader_1=require("./ApiHeader"),CallOptions_1=require("./CallOptions"),requestPromise=require("request-promise-native");class BotHttp{constructor(t){this.options=t}async call(t){let e;try{return e=await this.binanceRequest(t)}catch(t){throw t}}async binanceRequest(t){let e,r=t.toObjLiteral();try{return e=await BotHttp.requestApi(r)}catch(t){throw t}}static async requestApi(t){let e,r;try{return 200!==(r=await requestPromise[t.method.toLowerCase()](t)).statusCode?(e=new HttpError_1.HttpError(r.statusCode,r.statusMessage),Promise.reject(e)):r.body}catch(t){throw t}}getSignature(t,e){let r;return r=crypto.createHmac("sha256",this.options.auth.secret).update(BotHttp.makeQueryString(Object.assign(t,e)).substr(1)).digest("hex")}async getTimestamp(){let t={};if(!this.options.useServerTime)return t.timestamp=Date.now(),t;try{return t.timestamp=await this.timestamp(),t}catch(t){throw t}}static makeQueryString(t){let e,r;return r=Object.keys(t).filter(e=>t[e]),e=t?`?${r.map(e=>`${encodeURIComponent(e)}=${encodeURIComponent(t[e])}`).join("&")}`:""}async ping(){let t,e={method:"GET",json:!0,isSigned:!0};e.uri=`${BotHttp.BASE}/api/v1/ping`,e.apiKey=this.options.auth.key;try{return t=new CallOptions_1.CallOptions(e),await this.call(t),!0}catch(t){throw t}}async privateCall(t){let e,r,i;try{return t.headers=new ApiHeader_1.ApiHeader(this.options.auth.key),t.isSigned?(null==typeof t.qs&&(t.qs=new Signed_1.Signed),e=await this.getTimestamp(),i=await this.getSignature(t.qs,e),t.qs.timestamp=e.timestamp,t.qs.signature=i):t&&"object"==typeof t.qs&&t.qs.timestamp&&delete t.qs.timestamp,r=await this.binanceRequest(t)}catch(t){throw t}}async time(){let t,e={};try{return e.method="GET",e.json=!0,e.isSigned=!0,e.apiKey=this.options.auth.key,e.uri=`${BotHttp.BASE}/api/v1/time`,t=new CallOptions_1.CallOptions(e),await this.call(t)}catch(t){throw t}}async timestamp(){try{return(await this.time()).serverTime}catch(t){throw t}}}BotHttp.BASE="https://api.binance.com",exports.BotHttp=BotHttp;