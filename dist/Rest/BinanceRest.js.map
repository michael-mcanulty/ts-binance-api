{
  "version": 3,
  "file": "BinanceRest.js",
  "sourceRoot": "",
  "sources": [
    "../../src/Rest/BinanceRest.ts"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "import {BBRest} from \"./BBRest\";\nimport {ICallOpts} from \"./Interfaces/ICallOpts\";\nimport {EMethod} from \"./EMethod\";\nimport {IListenKey} from \"./IListenKey\";\nimport {iBinanceOptions} from \"../Binance/Interfaces/iBinanceOptions\";\nimport {IOutboundAccountInfoRaw} from \"../Account/Interfaces/IOutboundAccountInfoRaw\";\nimport {OutboundAccountInfo} from \"../Account/OutboundAccountInfo\";\n\nexport class BinanceRest extends BBRest {\n\tpublic listenKey: IListenKey;\n\tpublic user:any;\n\tpublic userEventHandler:Function;\n\n\tpublic closeDataStream():Promise<object>{\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\tlet result: object;\n\t\t\ttry{\n\t\t\t\tlet callOpts: ICallOpts = <ICallOpts>{};\n\t\t\t\tcallOpts.method = EMethod.DELETE;\n\t\t\t\tcallOpts.noData = false;\n\t\t\t\tcallOpts.noExtra = true;\n\t\t\t\tresult = await this._call('/v1/userDataStream', this.listenKey, callOpts);\n\t\t\t\tresolve(result);\n\t\t\t}catch(err){\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic getDataStream(): Promise<IListenKey> {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\ttry{\n\t\t\t\tlet callOpts: ICallOpts = <ICallOpts>{};\n\t\t\t\tcallOpts.method = EMethod.POST;\n\t\t\t\tcallOpts.noData = true;\n\t\t\t\tthis.listenKey = <IListenKey> await this._call('/v1/userDataStream', null, callOpts);\n\t\t\t\tresolve(this.listenKey);\n\t\t\t}catch(err){\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic keepDataStream():Promise<object>{\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\tlet result: object;\n\t\t\ttry{\n\t\t\t\tlet callOpts: ICallOpts = <ICallOpts>{};\n\t\t\t\tcallOpts.method = EMethod.PUT;\n\t\t\t\tcallOpts.noData = false;\n\t\t\t\tcallOpts.noExtra = true;\n\t\t\t\tresult = await this._call('/v1/userDataStream', this.listenKey, callOpts);\n\t\t\t\tresolve(result);\n\t\t\t}catch(err){\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n\tconstructor(options:iBinanceOptions){\n\t\tsuper(options);\n\t\tthis.userEventHandler = cb => msg => {\n\t\t\tlet json = JSON.parse(msg.data);\n\t\t\tlet infoRaw: IOutboundAccountInfoRaw = json;\n\t\t\tconst { e: type, ...rest } = json;\n\t\t\tlet accountInfo:OutboundAccountInfo = new OutboundAccountInfo(infoRaw);\n\t\t\tcb(accountInfo[type] ? accountInfo[type](rest) : { type, ...rest })\n\t\t};\n\n\t}\n}"
  ]
}