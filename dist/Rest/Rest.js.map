{"version":3,"file":"Rest.js","sourceRoot":"","sources":["../../src/Rest/Rest.ts"],"names":[],"mappings":"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","sourcesContent":["import {BotHttp} from \"./BotHttp\";\r\nimport {EMethod} from \"./EMethod\";\r\nimport {IListenKey} from \"./Interfaces/IListenKey\";\r\nimport {IBinanceOptions} from \"../Binance/Interfaces/IBinanceOptions\";\r\nimport {ICandlesOptions} from \"../ExchangeInfo/Interfaces/ICandleOptions\";\r\nimport {CandleInterval} from \"../ExchangeInfo/CandleInterval\";\r\nimport {Candle} from \"../ExchangeInfo/Candle\";\r\nimport {Market} from \"../Market/Market\";\r\nimport {Binance} from \"../Binance/Binance\";\r\nimport {NewOrder} from \"../Transaction/NewOrder\";\r\nimport {ENewOrderRespType, EOrderSide, EOrderType, ETimeInForce} from \"../Transaction/Interfaces/EOrderEnums\";\r\nimport {IOrder} from \"../Transaction/Interfaces/IOrder\";\r\nimport {Order} from \"../Transaction/Order\";\r\nimport {HttpError} from \"../Error/HttpError\";\r\nimport {CancelOrder} from \"../Transaction/CancelOrder\";\r\nimport {Signed} from \"./Signed\";\r\nimport {DataStream} from \"./DataStream\";\r\nimport {CallOptions} from \"./CallOptions\";\r\nimport {ICancelOrderResponse} from \"../Transaction/Interfaces/ICancelOrderResponse\";\r\nimport {IQueryCancelOrder} from \"../Transaction/Interfaces/IQueryCancelOrder\";\r\nimport {OpenOrder} from \"../Transaction/OpenOrder\";\r\nimport {QueryOrder} from \"../Transaction/QueryOrder\";\r\nimport {IOpenOrder} from \"../Transaction/Interfaces/IOpenOrder\";\r\nimport {IQueryOrderResponse} from \"../Transaction/Interfaces/IQueryOrderResponse\";\r\nimport {AllOrders} from \"../Transaction/AllOrders\";\r\nimport {OutboundAccountInfo} from \"../Account/OutboundAccountInfo\";\r\nimport {Balance} from \"../Balances/Balance\";\r\nimport {AccountInfoOptions} from \"../Account/AccountInfoOptions\";\r\nimport {IOutboundAccountInfoRest} from \"../Account/Interfaces/IOutboundAccountInfoRest\";\r\nimport {INewOrder} from \"../Transaction/Interfaces/INewOrder\";\r\nimport {CancelOrderResponse} from \"../Transaction/CancelOrderResponse\";\r\nimport {TestOrder} from \"../Transaction/TestOrder\";\r\nimport {IExchangeInfo} from \"../ExchangeInfo/Interfaces/IExchangeInfo\";\r\nimport {ISymbol} from \"../ExchangeInfo/Interfaces/ISymbol\";\r\nimport {ICancelOrderOpts, IPrice, ITotalBalance, Price} from \"..\";\r\nimport {IDepositAddressResult} from \"../Deposit/Interfaces/IDepositAddressResult\";\r\nimport {IDepositAddressReq} from \"../Deposit/Interfaces/IDepositAddressReq\";\r\nimport {IDepositHistoryResult} from \"../Deposit/Interfaces/IDepositHistoryResult\";\r\nimport {IDepositHistoryReq} from \"../Deposit/Interfaces/IDepositHistoryReq\";\r\nimport {ISystemStatus} from \"../Binance/Interfaces/ISystemStatus\";\r\nimport {IWithdrawHistoryReq} from \"../Withdraw/Interfaces/IWithdrawHistoryReq\";\r\nimport {IWithdrawHistoryResult} from \"../Withdraw/Interfaces/IWithdrawHistoryResult\";\r\nimport {ILimitOrderOpts} from \"../Transaction/Interfaces/ILimitOrderOpts\";\r\nimport {IGetOrderOpts} from \"../Transaction/Interfaces/IGetOrderOpts\";\r\nimport {IQueryOrderOpts} from \"../Transaction/Interfaces/IQueryOrderOpts\";\r\nimport {IMarketOrderOpts} from \"../Transaction/Interfaces/IMarketOrderOpts\";\r\nimport {IGetAllOrdersOpts} from \"../Transaction/Interfaces/IGetAllOrdersOpts\";\r\n\r\nexport class Rest extends BotHttp {\r\n\tpublic static listenKey: IListenKey;\r\n\r\n\tprivate _cancelOrder(cancelOrder: CancelOrder): Promise<CancelOrderResponse> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet orderResRaw: ICancelOrderResponse;\r\n\t\t\t\tlet response: CancelOrderResponse;\r\n\t\t\t\tlet privateOrder: IQueryCancelOrder | HttpError | {};\r\n\t\t\t\tlet url: string = (Binance.options.test) ? \"/v3/order/test\" : \"/v3/order\";\r\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.DELETE, true, false, false);\r\n\t\t\t\tprivateOrder = await this.privateCall(url, callOpts, cancelOrder);\r\n\t\t\t\tif (privateOrder instanceof HttpError) {\r\n\t\t\t\t\treject(privateOrder);\r\n\t\t\t\t} else {\r\n\t\t\t\t\torderResRaw = <ICancelOrderResponse>privateOrder;\r\n\t\t\t\t\tresponse = new CancelOrderResponse(orderResRaw);\r\n\t\t\t\t\tresolve(response);\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tprivate _getCandlesInterval(symbol: string, interval: string, limit?: number): Promise<Candle[]> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet candleOpts: ICandlesOptions = <ICandlesOptions>{};\r\n\t\t\t\tcandleOpts.symbol = symbol;\r\n\t\t\t\tcandleOpts.interval = interval;\r\n\t\t\t\tcandleOpts.limit = limit;\r\n\r\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.GET);\r\n\t\t\t\tlet raw: any[][] = await this.call('/v1/klines', callOpts, candleOpts);\r\n\t\t\t\tlet candles: Candle[] = Candle.fromHttpByInterval(raw, candleOpts.symbol, candleOpts.interval);\r\n\t\t\t\tcandles.forEach((candle) => {\r\n\t\t\t\t\tcandle.quoteAsset = Rest.getQuoteAssetName(symbol);\r\n\t\t\t\t});\r\n\t\t\t\tresolve(candles);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tprivate _newOrder(order: NewOrder): Promise<Order | HttpError | TestOrder> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet orderRes: Order;\r\n\t\t\t\tlet privateOrder: IOrder | HttpError | TestOrder;\r\n\t\t\t\tlet url: string = (Binance.options.test) ? \"/v3/order/test\" : \"/v3/order\";\r\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.POST, true, false, false);\r\n\t\t\t\tprivateOrder = await this.privateCall(url, callOpts, NewOrder.toBinance(order));\r\n\t\t\t\tif (this.options.test && (Object.keys(privateOrder).length === 0 && privateOrder.constructor === Object)) {\r\n\t\t\t\t\tresolve(new TestOrder());\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (privateOrder instanceof HttpError) {\r\n\t\t\t\t\t\treject(privateOrder);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet order: IOrder = <IOrder>privateOrder;\r\n\t\t\t\t\t\torderRes = new Order(order);\r\n\t\t\t\t\t\tresolve(orderRes);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic cancelOrder(options: ICancelOrderOpts): Promise<CancelOrderResponse> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet cancelResult: ICancelOrderResponse\r\n\t\t\t\tlet result: CancelOrderResponse;\r\n\t\t\t\tlet cancelOrder: CancelOrder = new CancelOrder(options);\r\n\t\t\t\tif(cancelResult){\r\n\t\t\t\t\tcancelResult = await this._cancelOrder(cancelOrder);\r\n\t\t\t\t\tresult = new CancelOrderResponse(<ICancelOrderResponse>cancelResult);\r\n\t\t\t\t\tresolve(result);\r\n\t\t\t\t}else{\r\n\t\t\t\t\treject();\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic cancelOrdersBySymbol(options: ICancelOrderOpts): Promise<CancelOrderResponse[]> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet cancelResp: CancelOrderResponse;\r\n\t\t\t\tlet results: CancelOrderResponse[] = [];\r\n\t\t\t\tlet config: IGetOrderOpts = <IGetOrderOpts>{};\r\n\t\t\t\tconfig.symbol = options.symbol;\r\n\t\t\t\tconfig.origClientOrderId = options.origClientOrderId;\r\n\t\t\t\tconfig.orderId = options.orderId;\r\n\t\t\t\tconfig.recvWindow = options.recvWindow;\r\n\t\t\t\tlet openOrders: OpenOrder[] = await this.getOpenOrders(config);\r\n\t\t\t\tlet symbolOrders: OpenOrder[] = openOrders.filter(order => order.symbol === config.symbol);\r\n\r\n\t\t\t\tfor (let order of symbolOrders) {\r\n\t\t\t\t\tlet cOpts: ICancelOrderOpts = <ICancelOrderOpts>{};\r\n\t\t\t\t\tcOpts.orderId = order.orderId;\r\n\t\t\t\t\tcOpts.recvWindow = options.recvWindow;\r\n\t\t\t\t\tcOpts.origClientOrderId = order.clientOrderId;\r\n\t\t\t\t\tcOpts.symbol = order.symbol;\r\n\t\t\t\t\tcOpts.newClientOrderId = options.newClientOrderId;\r\n\t\t\t\t\tcancelResp = await this.cancelOrder(cOpts);\r\n\t\t\t\t\tresults.push(cancelResp);\r\n\t\t\t\t}\r\n\t\t\t\tresolve(results);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic closeDataStream(): Promise<{}> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\tlet result: object;\r\n\t\t\ttry {\r\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.DELETE, true, false, true);\r\n\t\t\t\tlet dStream: DataStream = new DataStream(Rest.listenKey);\r\n\t\t\t\tresult = await this.privateCall('/v1/userDataStream', callOpts, dStream);\r\n\t\t\t\tresolve(result);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic getAccountInfo(recvWindow?: number): Promise<OutboundAccountInfo> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet url: string = \"/v3/account\";\r\n\t\t\t\tlet opts: AccountInfoOptions = new AccountInfoOptions(recvWindow);\r\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.GET, true, false, false);\r\n\t\t\t\tlet accountInfoRest: IOutboundAccountInfoRest = await this.privateCall(url, callOpts, opts);\r\n\t\t\t\tlet info: OutboundAccountInfo = OutboundAccountInfo.fromBinanceRest(accountInfoRest);\r\n\t\t\t\tresolve(info);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic getAllOrders(options: IGetAllOrdersOpts): Promise<Order[]> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet query: AllOrders = new AllOrders(options);\r\n\t\t\t\tlet url: string = '/v3/allOrders';\r\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.GET, true, false, false);\r\n\t\t\t\tlet privateCall: IQueryOrderResponse[] = await this.privateCall(url, callOpts, query);\r\n\t\t\t\tlet results: Order[] = [];\r\n\r\n\t\t\t\tif (Array.isArray(privateCall) && privateCall.length > 0) {\r\n\t\t\t\t\tresults = privateCall.map((qCall:IQueryOrderResponse) => {\r\n\t\t\t\t\t\tlet opts: IOrder = <IOrder>{};\r\n\t\t\t\t\t\topts.cummulativeQuoteQty = qCall.cummulativeQuoteQty;\r\n\t\t\t\t\t\topts.symbol = qCall.symbol;\r\n\t\t\t\t\t\topts.side = qCall.side;\r\n\t\t\t\t\t\topts.type = qCall.type;\r\n\t\t\t\t\t\topts.price = qCall.price;\r\n\t\t\t\t\t\topts.clientOrderId = qCall.clientOrderId;\r\n\t\t\t\t\t\topts.orderId = qCall.orderId;\r\n\t\t\t\t\t\topts.executedQty = qCall.executedQty;\r\n\t\t\t\t\t\topts.origQty = qCall.origQty;\r\n\t\t\t\t\t\topts.transactTime = qCall.time;\r\n\t\t\t\t\t\topts.status = qCall.status;\r\n\t\t\t\t\t\topts.signature = qCall.signature;\r\n\t\t\t\t\t\topts.timeInForce = qCall.timeInForce;\r\n\t\t\t\t\t\topts.isWorking = qCall.isWorking;\r\n\t\t\t\t\t\treturn new Order(opts);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tresolve(results);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic getAvailableTotalBalance(quoteAsset: string, dollarBaseAsset: string = \"USDT\", primaryBaseAsset: string = \"BTC\"): Promise<ITotalBalance> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\t//get BTC qty first\r\n\t\t\t\tlet balances: Balance[] = await this.getBalances();\r\n\t\t\t\tlet prices: Price[] = await this.getPrices();\r\n\t\t\t\tif (balances.length === 0) {\r\n\t\t\t\t\treject(\"Error: Balances not working\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst QA = quoteAsset;\r\n\t\t\t\tconst USDT = dollarBaseAsset;\r\n\t\t\t\tconst FA = \"BNB\";\r\n\t\t\t\tconst BTC = primaryBaseAsset;\r\n\r\n\t\t\t\tlet balVals: ITotalBalance[] = [];\r\n\t\t\t\tlet result: ITotalBalance = <ITotalBalance>{};\r\n\r\n\t\t\t\tbalances.forEach((bal: Balance) => {\r\n\t\t\t\t\tlet avail: ITotalBalance = <ITotalBalance>{};\r\n\t\t\t\t\tlet BA: string = bal.asset;\r\n\t\t\t\t\tlet available: number = bal.available;\r\n\r\n\t\t\t\t\tlet symbol: string;\r\n\r\n\t\t\t\t\tif (BA !== BTC && BTC !== QA) {\r\n\t\t\t\t\t\tsymbol = BA + BTC;\r\n\t\t\t\t\t\tlet exchangeValue: number = Price.GetPriceValue(prices, symbol);\r\n\t\t\t\t\t\tavail.quoteAsset = quoteAsset;\r\n\t\t\t\t\t\tlet totalBTCVal: number = available * exchangeValue;\r\n\t\t\t\t\t\tavail.totalVal = totalBTCVal * Price.GetPriceValue(prices, BTC + USDT);\r\n\t\t\t\t\t\tbalVals.push(avail);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (BA === BTC && BTC !== QA) {\r\n\t\t\t\t\t\t\tsymbol = BA + QA;\r\n\t\t\t\t\t\t\tavail.quoteAsset = quoteAsset;\r\n\t\t\t\t\t\t\tavail.totalVal = available * Price.GetPriceValue(prices, BTC + USDT);\r\n\t\t\t\t\t\t\tbalVals.push(avail);\r\n\t\t\t\t\t\t} else if (BTC === QA && BA !== BTC) {\r\n\t\t\t\t\t\t\tsymbol = BA + QA;\r\n\t\t\t\t\t\t\tlet exchangeValue: number = Price.GetPriceValue(prices, symbol);\r\n\t\t\t\t\t\t\tavail.quoteAsset = quoteAsset;\r\n\t\t\t\t\t\t\tavail.totalVal = available * exchangeValue;\r\n\t\t\t\t\t\t\tbalVals.push(avail);\r\n\t\t\t\t\t\t} else if (BTC === QA && BA === BTC) {\r\n\t\t\t\t\t\t\tsymbol = BA + QA;\r\n\t\t\t\t\t\t\tavail.quoteAsset = quoteAsset;\r\n\t\t\t\t\t\t\tavail.totalVal = available;\r\n\t\t\t\t\t\t\tbalVals.push(avail);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tresult.totalVal = balVals.reduce((prev, cur) => {\r\n\t\t\t\t\treturn prev + cur.totalVal;\r\n\t\t\t\t}, 0);\r\n\t\t\t\tresult.quoteAsset = quoteAsset;\r\n\t\t\t\tresolve(result);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic getBalances(recvWindow?: number, gtZeroOnly: boolean = false): Promise<Balance[]> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet balances: Balance[];\r\n\t\t\t\tlet accountInfo: OutboundAccountInfo = await this.getAccountInfo(recvWindow);\r\n\t\t\t\tbalances = accountInfo.balances;\r\n\r\n\t\t\t\tif (gtZeroOnly) {\r\n\t\t\t\t\tbalances = accountInfo.balances.filter(bal => bal.available > 0);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbalances = accountInfo.balances;\r\n\t\t\t\t}\r\n\t\t\t\tresolve(balances);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic getCandles(symbols: string[], intervals: string[], limit?: number): Promise<CandleInterval[]> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet candleIntervals: CandleInterval[] = [];\r\n\t\t\t\tfor (let symbol of symbols) {\r\n\t\t\t\t\tfor (let interval of intervals) {\r\n\t\t\t\t\t\tlet candles: Candle[] = await this._getCandlesInterval(symbol, interval, limit);\r\n\t\t\t\t\t\tlet ci = new CandleInterval(candles);\r\n\t\t\t\t\t\tcandleIntervals.push(ci);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tresolve(candleIntervals);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tpublic getDataStream(): Promise<IListenKey> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.POST, true, true, false);\r\n\t\t\t\tlet signed = new Signed();\r\n\t\t\t\tRest.listenKey = <IListenKey> await this.privateCall('/v1/userDataStream', callOpts, signed);\r\n\t\t\t\tresolve(Rest.listenKey);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic getDepositAddress(request: IDepositAddressReq): Promise<IDepositAddressResult> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet url: string = '/wapi/v3/depositAddress.html';\r\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.GET, true, false, false);\r\n\t\t\t\tlet depositAddress: IDepositAddressResult = await this.privateCall(url, callOpts, request);\r\n\t\t\t\tresolve(depositAddress);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic getDepositHisory(request: IDepositHistoryReq): Promise<IDepositHistoryResult> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet url: string = '/wapi/v3/depositHistory.html';\r\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.GET, true, false, false);\r\n\t\t\t\tlet depositHistory: IDepositHistoryResult = await this.privateCall(url, callOpts, request);\r\n\t\t\t\tresolve(depositHistory);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic getExchangeInfo(): Promise<IExchangeInfo> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.GET, true, true, false, this.options.auth.key);\r\n\t\t\t\tlet info: IExchangeInfo = await this.call('/v1/exchangeInfo', callOpts);\r\n\t\t\t\tresolve(info);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tpublic getMarkets(quoteAsset?: string): Promise<Market[]> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet info: IExchangeInfo = await this.getExchangeInfo();\r\n\t\t\t\tlet symbols: ISymbol[] = info.symbols;\r\n\t\t\t\tlet markets: Market[] = symbols.map(symbol => {\r\n\t\t\t\t\treturn new Market(symbol.symbol, symbol.baseAsset, symbol.quoteAsset, Market.GetLimitsFromBinanceSymbol(symbol));\r\n\t\t\t\t});\r\n\t\t\t\tBinance.markets = markets;\r\n\t\t\t\tresolve(markets);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic getOpenOrders(options: IGetOrderOpts): Promise<OpenOrder[]> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet opts: IQueryOrderOpts = <IQueryOrderOpts>{};\r\n\t\t\t\tlet url: string = \"/v3/openOrders\";\r\n\t\t\t\tlet query: QueryOrder;\r\n\t\t\t\tlet callOpts: CallOptions;\r\n\t\t\t\tlet privateCall: IOpenOrder[];\r\n\t\t\t\tlet openOrders: OpenOrder[];\r\n\r\n\t\t\t\topts.symbol = options.symbol;\r\n\t\t\t\topts.recvWindow = options.recvWindow;\r\n\t\t\t\topts.orderId = options.orderId;\r\n\t\t\t\topts.origClientOrderId = options.origClientOrderId;\r\n\t\t\t\tquery = new QueryOrder(opts);\r\n\t\t\t\tcallOpts = new CallOptions(EMethod.GET, true, false, false);\r\n\t\t\t\tprivateCall = await this.privateCall(url, callOpts, query);\r\n\t\t\t\topenOrders = [];\r\n\t\t\t\tif (Array.isArray(privateCall) && privateCall.length > 0) {\r\n\t\t\t\t\topenOrders = privateCall.map((o: IOpenOrder) => {\r\n\t\t\t\t\t\treturn new OpenOrder(o);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tresolve(openOrders);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tresolve();\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic getOrder(options: IGetOrderOpts): Promise<Order> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet query: QueryOrder;\r\n\t\t\t\tlet url: string = '/v3/order';\r\n\t\t\t\tlet callOpts: CallOptions;\r\n\t\t\t\tlet privateCall: IQueryOrderResponse;\r\n\t\t\t\tlet result: Order;\r\n\t\t\t\tlet opts: IQueryOrderOpts = <IQueryOrderOpts>{};\r\n\t\t\t\topts.symbol = options.symbol;\r\n\t\t\t\topts.recvWindow = options.recvWindow;\r\n\t\t\t\topts.orderId = options.orderId;\r\n\t\t\t\topts.origClientOrderId = options.origClientOrderId;\r\n\r\n\t\t\t\tquery = new QueryOrder(opts);\r\n\t\t\t\tcallOpts = new CallOptions(EMethod.GET, true, false, false);\r\n\t\t\t\tprivateCall = await this.privateCall(url, callOpts, query);\r\n\r\n\t\t\t\tif (privateCall && privateCall.hasOwnProperty(\"symbol\")) {\r\n\t\t\t\t\tlet nOrder: IOrder = <IOrder>{};\r\n\t\t\t\t\tnOrder.symbol = opts.symbol;\r\n\t\t\t\t\tnOrder.side = privateCall.side;\r\n\t\t\t\t\tnOrder.price = privateCall.price;\r\n\t\t\t\t\tnOrder.type = privateCall.type;\r\n\t\t\t\t\tnOrder.timeInForce = privateCall.timeInForce;\r\n\t\t\t\t\tnOrder.origQty = privateCall.origQty;\r\n\t\t\t\t\tnOrder.executedQty = privateCall.executedQty;\r\n\t\t\t\t\tnOrder.timestamp = privateCall.time;\r\n\t\t\t\t\tnOrder.status = privateCall.status;\r\n\t\t\t\t\tnOrder.orderId = opts.orderId;\r\n\t\t\t\t\tnOrder.clientOrderId = privateCall.clientOrderId;\r\n\t\t\t\t\tnOrder.cummulativeQuoteQty = privateCall.cummulativeQuoteQty;\r\n\t\t\t\t\tnOrder.status = privateCall.status;\r\n\t\t\t\t\tnOrder.signature = privateCall.signature;\r\n\t\t\t\t\tnOrder.transactTime = privateCall.time;\r\n\t\t\t\t\tnOrder.isWorking = privateCall.isWorking;\r\n\t\t\t\t\tresult = new Order(nOrder);\r\n\t\t\t\t\tresolve(result);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tresolve();\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic getPrices(): Promise<Price[]> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.GET, true, true, false, this.options.auth.key);\r\n\t\t\tlet url: string = '/v1/ticker/allPrices';\r\n\r\n\t\t\ttry {\r\n\t\t\t\tlet rawPrices: IPrice[] = await this.call(url, callOpts);\r\n\t\t\t\tif (Array.isArray(rawPrices) && rawPrices.length > 0) {\r\n\t\t\t\t\tlet prices = Price.toPrices(rawPrices);\r\n\t\t\t\t\tresolve(prices);\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic static getQuoteAssetName(symbol: string): string {\r\n\t\tlet qa: string;\r\n\t\tlet marketFilter: Market[] = Binance.markets.filter(market => market.symbol === symbol);\r\n\t\tlet market: Market;\r\n\t\tif (marketFilter && marketFilter.length > 0) {\r\n\t\t\tmarket = marketFilter[0];\r\n\t\t\tqa = market.quoteAsset;\r\n\t\t}\r\n\t\treturn qa;\r\n\t}\r\n\r\n\tpublic getStatus(): Promise<ISystemStatus> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet opts: CallOptions = new CallOptions(EMethod.GET, true, true, false, this.options.auth.key);\r\n\t\t\t\tlet status: ISystemStatus = await this.call('/wapi/v3/systemStatus.html', opts);\r\n\t\t\t\tresolve(status);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(`Error retrieving the system status. Message: ${err}`);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic getWithdrawHisory(request: IWithdrawHistoryReq): Promise<IWithdrawHistoryResult> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet url: string = '/wapi/v3/withdrawHistory.html';\r\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.GET, true, false, false);\r\n\t\t\t\tlet withdrawHistory: IWithdrawHistoryResult = await this.privateCall(url, callOpts, request);\r\n\t\t\t\tresolve(withdrawHistory);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic keepDataStream(): Promise<{}> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\tlet result: object;\r\n\t\t\ttry {\r\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.PUT, true, false, true);\r\n\t\t\t\tlet dStream: DataStream = new DataStream(Rest.listenKey);\r\n\t\t\t\tresult = await this.privateCall('/v1/userDataStream', callOpts, dStream);\r\n\t\t\t\tresolve(result);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic limitBuy(options: ILimitOrderOpts): Promise<Order | TestOrder> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet order: NewOrder;\r\n\t\t\t\tlet orderRes:  Order | {};\r\n\t\t\t\tlet nOrder: INewOrder = <INewOrder>{};\r\n\r\n\t\t\t\tconst TYPE: EOrderType = EOrderType.LIMIT;\r\n\t\t\t\tconst SIDE: EOrderSide = EOrderSide.BUY;\r\n\t\t\t\tconst RESPONSE_TYPE: ENewOrderRespType = ENewOrderRespType.FULL;\r\n\r\n\t\t\t\tnOrder.recvWindow = options.recvWindow;\r\n\t\t\t\tnOrder.type = EOrderType[TYPE];\r\n\t\t\t\tnOrder.side = EOrderSide[SIDE];\r\n\t\t\t\tnOrder.quantity = options.quantity;\r\n\t\t\t\tnOrder.stopPrice = options.stopPrice;\r\n\t\t\t\tnOrder.icebergQty =options.iceburgQty;\r\n\t\t\t\tnOrder.newClientOrderId = options.newClientOrderId;\r\n\t\t\t\tnOrder.newOrderRespType = ENewOrderRespType[options.newOrderRespType] || ENewOrderRespType[RESPONSE_TYPE];\r\n\r\n\t\t\t\torder = new NewOrder(nOrder);\r\n\t\t\t\torderRes = await this._newOrder(order);\r\n\t\t\t\tresolve(orderRes);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic limitSell(options: ILimitOrderOpts): Promise<Order | TestOrder> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet order: NewOrder;\r\n\t\t\t\tlet orderRes:  Order | {};\r\n\t\t\t\tlet nOrder: INewOrder = <INewOrder>{};\r\n\t\t\t\tconst TYPE: EOrderType = EOrderType.LIMIT;\r\n\t\t\t\tconst SIDE: EOrderSide = EOrderSide.SELL;\r\n\t\t\t\tconst RESPONSE_TYPE: ENewOrderRespType = ENewOrderRespType.FULL;\r\n\r\n\t\t\t\tnOrder.recvWindow = options.recvWindow;\r\n\t\t\t\tnOrder.type = EOrderType[TYPE];\r\n\t\t\t\tnOrder.side = EOrderSide[SIDE];\r\n\t\t\t\tnOrder.quantity = options.quantity;\r\n\t\t\t\tnOrder.stopPrice = options.stopPrice;\r\n\t\t\t\tnOrder.icebergQty =options.iceburgQty;\r\n\t\t\t\tnOrder.newClientOrderId = options.newClientOrderId;\r\n\t\t\t\tnOrder.newOrderRespType = ENewOrderRespType[options.newOrderRespType] || ENewOrderRespType[RESPONSE_TYPE];\r\n\r\n\t\t\t\torder = new NewOrder(nOrder);\r\n\t\t\t\torderRes = await this._newOrder(order);\r\n\t\t\t\tresolve(orderRes);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err)\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic marketBuy(options: IMarketOrderOpts): Promise<Order | TestOrder> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet order: NewOrder;\r\n\t\t\t\tlet orderRes:  Order | {};\r\n\t\t\t\tlet nOrder: INewOrder = <INewOrder>{};\r\n\r\n\t\t\t\tconst TYPE: EOrderType = EOrderType.MARKET;\r\n\t\t\t\tconst SIDE: EOrderSide = EOrderSide.BUY;\r\n\t\t\t\tconst RESPONSE_TYPE: ENewOrderRespType = ENewOrderRespType.FULL;\r\n\r\n\t\t\t\tnOrder.recvWindow = options.recvWindow;\r\n\t\t\t\tnOrder.type = EOrderType[TYPE];\r\n\t\t\t\tnOrder.side = EOrderSide[SIDE];\r\n\t\t\t\tnOrder.quantity = options.quantity;\r\n\t\t\t\tnOrder.icebergQty = options.iceburgQty;\r\n\t\t\t\tnOrder.newClientOrderId = options.newClientOrderId;\r\n\t\t\t\tnOrder.newOrderRespType = ENewOrderRespType[options.newOrderRespType] || ENewOrderRespType[RESPONSE_TYPE];\r\n\r\n\t\t\t\torder = new NewOrder(nOrder);\r\n\t\t\t\torderRes = await this._newOrder(order);\r\n\t\t\t\tresolve(orderRes);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic marketSell(options: IMarketOrderOpts): Promise<Order | TestOrder> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet order: NewOrder;\r\n\t\t\t\tlet orderRes:  Order | {};\r\n\t\t\t\tlet nOrder: INewOrder = <INewOrder>{};\r\n\r\n\t\t\t\tconst TYPE: EOrderType = EOrderType.MARKET;\r\n\t\t\t\tconst SIDE: EOrderSide = EOrderSide.SELL;\r\n\t\t\t\tconst RESPONSE_TYPE: ENewOrderRespType = ENewOrderRespType.FULL;\r\n\r\n\t\t\t\tnOrder.recvWindow = options.recvWindow;\r\n\t\t\t\tnOrder.type = EOrderType[TYPE];\r\n\t\t\t\tnOrder.side = EOrderSide[SIDE];\r\n\t\t\t\tnOrder.quantity = options.quantity;\r\n\t\t\t\tnOrder.icebergQty = options.iceburgQty;\r\n\t\t\t\tnOrder.newClientOrderId = options.newClientOrderId;\r\n\t\t\t\tnOrder.newOrderRespType = ENewOrderRespType[options.newOrderRespType] || ENewOrderRespType[RESPONSE_TYPE];\r\n\r\n\t\t\t\torder = new NewOrder(nOrder);\r\n\t\t\t\torderRes = await this._newOrder(order);\r\n\t\t\t\tresolve(orderRes);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err)\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tconstructor(options: IBinanceOptions) {\r\n\t\tsuper(options);\r\n\t}\r\n}"]}