{
  "version": 3,
  "file": "Rest.js",
  "sourceRoot": "",
  "sources": [
    "../../src/Rest/Rest.ts"
  ],
  "names": [],
  "mappings": ";;;;;;;;;;AAAA,uCAAkC;AAClC,uCAAkC;AAIlC,mEAA8D;AAC9D,mDAA8C;AAE9C,6CAAwC;AAExC,gDAA2C;AAC3C,oCAA6B;AAC7B,sDAAiD;AACjD,uEAA8G;AAE9G,gDAA2C;AAC3C,kDAA6C;AAC7C,sEAAiE;AACjE,qCAAgC;AAChC,6CAAwC;AACxC,+CAA0C;AAG1C,wDAAmD;AACnD,0DAAqD;AAGrD,kEAA6D;AAE7D,UAAkB,SAAQ,iBAAO;IAGxB,YAAY,CAAC,WAA6B;QACjD,MAAM,CAAC,IAAI,OAAO,CAAC,CAAO,OAAO,EAAE,MAAM,EAAE,EAAE;YAC5C,IAAI,CAAC;gBACJ,IAAI,QAA4B,CAAC;gBACjC,IAAI,YAAgD,CAAC;gBACrD,IAAI,GAAG,GAAW,CAAC,iBAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,WAAW,CAAC;gBAC1E,IAAI,QAAQ,GAAgB,IAAI,yBAAW,CAAC,iBAAO,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;gBAChF,YAAY,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;gBAClE,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,YAAY,CAAC,WAAW,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC;oBAC1G,OAAO,CAAK,YAAY,CAAC,CAAC;gBAC3B,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACP,EAAE,CAAC,CAAC,YAAY,YAAY,qBAAS,CAAC,CAAC,CAAC;wBACvC,MAAM,CAAC,YAAY,CAAC,CAAC;oBACtB,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACP,QAAQ,GAAuB,YAAY,CAAC;wBAC5C,OAAO,CAAC,QAAQ,CAAC,CAAC;oBACnB,CAAC;gBACF,CAAC;YACF,CAAC;YAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC,GAAG,CAAC,CAAC;YACb,CAAC;QACF,CAAC,CAAA,CAAC,CAAC;IACJ,CAAC;IAEO,mBAAmB,CAAC,MAAc,EAAE,QAAgB,EAAE,KAAc;QAC3E,MAAM,CAAC,IAAI,OAAO,CAAC,CAAO,OAAO,EAAE,MAAM,EAAE,EAAE;YAC5C,IAAI,CAAC;gBACJ,IAAI,UAAU,GAAqC,EAAE,CAAC;gBACtD,UAAU,CAAC,MAAM,GAAG,MAAM,CAAC;gBAC3B,UAAU,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBAC/B,UAAU,CAAC,KAAK,GAAG,KAAK,CAAC;gBAEzB,IAAI,QAAQ,GAAgB,IAAI,yBAAW,CAAC,iBAAO,CAAC,GAAG,CAAC,CAAC;gBACzD,IAAI,GAAG,GAAY,MAAM,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;gBACvE,IAAI,OAAO,GAAa,eAAM,CAAC,kBAAkB,CAAC,GAAG,EAAE,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC;gBAC/F,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;oBAC1B,MAAM,CAAC,UAAU,GAAG,WAAG,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;gBAChE,CAAC,CAAC,CAAC;gBACH,OAAO,CAAC,OAAO,CAAC,CAAC;YAClB,CAAC;YAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC,GAAG,CAAC,CAAC;YACb,CAAC;QACF,CAAC,CAAA,CAAC,CAAC;IACJ,CAAC;IAAA,CAAC;IAEM,SAAS,CAAC,KAAe;QAChC,MAAM,CAAC,IAAI,OAAO,CAAC,CAAO,OAAO,EAAE,MAAM,EAAE,EAAE;YAC5C,IAAI,CAAC;gBACJ,IAAI,QAAe,CAAC;gBACpB,IAAI,YAAqC,CAAC;gBAC1C,IAAI,GAAG,GAAW,CAAC,iBAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,WAAW,CAAC;gBAC1E,IAAI,QAAQ,GAAgB,IAAI,yBAAW,CAAC,iBAAO,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;gBAC9E,YAAY,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;gBAC5D,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,YAAY,CAAC,WAAW,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC;oBAC1G,OAAO,CAAK,YAAY,CAAC,CAAC;gBAC3B,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACP,EAAE,CAAC,CAAC,YAAY,YAAY,qBAAS,CAAC,CAAC,CAAC;wBACvC,MAAM,CAAC,YAAY,CAAC,CAAC;oBACtB,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACP,IAAI,KAAK,GAAmB,YAAY,CAAC;wBACzC,QAAQ,GAAG,IAAI,aAAK,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,WAAW,EAC5E,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,WAAW,EAAE,KAAK,CAAC,IAAI,EACzE,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;wBAC1C,OAAO,CAAC,QAAQ,CAAC,CAAC;oBACnB,CAAC;gBACF,CAAC;YACF,CAAC;YAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC,GAAG,CAAC,CAAC;YACb,CAAC;QACF,CAAC,CAAA,CAAC,CAAC;IACJ,CAAC;IAEM,WAAW,CAAC,MAAc,EAAE,OAAe;QACjD,MAAM,CAAC,IAAI,OAAO,CAAC,CAAO,OAAO,EAAE,MAAM,EAAE,EAAE;YAC5C,IAAI,CAAC;gBACJ,IAAI,WAAW,GAAqB,IAAI,mCAAgB,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;gBAC1E,EAAE,CAAC,CAAC,WAAW,IAAI,WAAW,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACzD,qBAAS,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;gBACpC,CAAC;gBACD,IAAI,YAAY,GAA4B,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;gBAC3E,OAAO,CAAC,YAAY,CAAC,CAAC;YACvB,CAAC;YAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC,GAAG,CAAC,CAAC;YACb,CAAC;QACF,CAAC,CAAA,CAAC,CAAC;IACJ,CAAC;IAEM,oBAAoB,CAAC,MAAc;QACzC,MAAM,CAAC,IAAI,OAAO,CAAC,CAAO,OAAO,EAAE,MAAM,EAAE,EAAE;YAC5C,IAAI,CAAC;gBACJ,IAAI,WAAW,GAAqB,IAAI,mCAAgB,CAAC,MAAM,CAAC,CAAC;gBACjE,EAAE,CAAC,CAAC,WAAW,IAAI,WAAW,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACzD,qBAAS,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;gBACxC,CAAC;gBACD,IAAI,YAAY,GAA8B,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;gBAC7E,OAAO,CAAC,YAAY,CAAC,CAAC;YACvB,CAAC;YAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC,GAAG,CAAC,CAAC;YACb,CAAC;QACF,CAAC,CAAA,CAAC,CAAC;IACJ,CAAC;IAEM,eAAe;QACrB,MAAM,CAAC,IAAI,OAAO,CAAC,CAAO,OAAO,EAAE,MAAM,EAAE,EAAE;YAC5C,IAAI,MAAc,CAAC;YACnB,IAAI,CAAC;gBACJ,IAAI,QAAQ,GAAgB,IAAI,yBAAW,CAAC,iBAAO,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;gBAC/E,IAAI,OAAO,GAAe,IAAI,uBAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBACzD,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;gBACzE,OAAO,CAAC,MAAM,CAAC,CAAC;YACjB,CAAC;YAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC,GAAG,CAAC,CAAC;YACb,CAAC;QACF,CAAC,CAAA,CAAC,CAAC;IACJ,CAAC;IAEM,UAAU,CAAC,OAAiB,EAAE,SAAmB,EAAE,KAAc;QACvE,MAAM,CAAC,IAAI,OAAO,CAAC,CAAO,OAAO,EAAE,MAAM,EAAE,EAAE;YAC5C,IAAI,CAAC;gBACJ,IAAI,eAAe,GAAqB,EAAE,CAAC;gBAC3C,GAAG,CAAC,CAAC,IAAI,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC;oBAC5B,GAAG,CAAC,CAAC,IAAI,QAAQ,IAAI,SAAS,CAAC,CAAC,CAAC;wBAChC,IAAI,OAAO,GAAa,MAAM,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;wBAChF,IAAI,EAAE,GAAG,IAAI,+BAAc,CAAC,OAAO,CAAC,CAAC;wBACrC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;oBAC1B,CAAC;gBACF,CAAC;gBACD,OAAO,CAAC,eAAe,CAAC,CAAC;YAC1B,CAAC;YAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC,GAAG,CAAC,CAAC;YACb,CAAC;QACF,CAAC,CAAA,CAAC,CAAC;IACJ,CAAC;IAAA,CAAC;IAEK,UAAU,CAAC,UAAmB;QACpC,MAAM,CAAC,IAAI,OAAO,CAAC,CAAO,OAAO,EAAE,MAAM,EAAE,EAAE;YAC5C,IAAI,CAAC;gBACJ,IAAI,IAAI,GAAkB,MAAM,IAAI,CAAC,eAAe,EAAE,CAAC;gBACvD,IAAI,OAAO,GAAc,IAAI,CAAC,OAAO,CAAC;gBACtC,IAAI,OAAO,GAAa,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;oBAC5C,MAAM,CAAC,IAAI,eAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,UAAU,EAAE,eAAM,CAAC,0BAA0B,CAAC,MAAM,CAAC,CAAC,CAAC;gBAClH,CAAC,CAAC,CAAC;gBACH,iBAAO,CAAC,OAAO,GAAG,OAAO,CAAC;gBAC1B,OAAO,CAAC,OAAO,CAAC,CAAC;YAClB,CAAC;YAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC,GAAG,CAAC,CAAC;YACb,CAAC;QACF,CAAC,CAAA,CAAC,CAAC;IACJ,CAAC;IAEM,aAAa;QACnB,MAAM,CAAC,IAAI,OAAO,CAAC,CAAO,OAAO,EAAE,MAAM,EAAE,EAAE;YAC5C,IAAI,CAAC;gBACJ,IAAI,QAAQ,GAAgB,IAAI,yBAAW,CAAC,iBAAO,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;gBAC7E,IAAI,MAAM,GAAG,IAAI,eAAM,EAAE,CAAC;gBAC1B,IAAI,CAAC,SAAS,IAAgB,MAAM,IAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAA,CAAC;gBAC7F,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACzB,CAAC;YAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC,GAAG,CAAC,CAAC;YACb,CAAC;QACF,CAAC,CAAA,CAAC,CAAC;IACJ,CAAC;IAEM,eAAe;QACrB,MAAM,CAAC,IAAI,OAAO,CAAC,CAAO,OAAO,EAAE,MAAM,EAAE,EAAE;YAC5C,IAAI,CAAC;gBACJ,IAAI,QAAQ,GAAgB,IAAI,yBAAW,CAAC,iBAAO,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACnG,IAAI,IAAI,GAAkB,MAAM,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,QAAQ,CAAC,CAAC;gBACxE,OAAO,CAAC,IAAI,CAAC,CAAC;YACf,CAAC;YAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC,GAAG,CAAC,CAAC;YACb,CAAC;QACF,CAAC,CAAA,CAAC,CAAC;IACJ,CAAC;IAAA,CAAC;IAEK,aAAa,CAAC,MAAc,EAAE,OAAe,EAAE,UAAmB,EAAE,iBAA0B;QACpG,MAAM,CAAC,IAAI,OAAO,CAAC,CAAO,OAAO,EAAE,MAAM,EAAE,EAAE;YAC5C,IAAI,CAAC;gBACJ,IAAI,GAAG,GAAW,gBAAgB,CAAC;gBACnC,IAAI,KAAK,GAAe,IAAI,uBAAU,CAAC,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,iBAAiB,CAAC,CAAC;gBACvF,IAAI,QAAQ,GAAgB,IAAI,yBAAW,CAAC,iBAAO,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;gBAC7E,IAAI,WAAW,GAAiB,MAAM,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;gBAC7E,IAAI,UAAU,GAAgB,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;oBACjD,MAAM,CAAC,IAAI,qBAAS,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;gBACxL,CAAC,CAAC,CAAC;gBACH,OAAO,CAAC,UAAU,CAAC,CAAC;gBACpB,OAAO,EAAE,CAAC;YACX,CAAC;YAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC,GAAG,CAAC,CAAC;YACb,CAAC;QACF,CAAC,CAAA,CAAC,CAAC;IACJ,CAAC;IAEM,iBAAiB,CAAC,MAAc;QACtC,IAAI,EAAU,CAAC;QACf,IAAI,YAAY,GAAa,iBAAO,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,KAAK,MAAM,CAAC,CAAC;QACxF,IAAI,MAAc,CAAC;QACnB,EAAE,CAAC,CAAC,YAAY,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC7C,MAAM,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;YACzB,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC;QACxB,CAAC;QACD,MAAM,CAAC,EAAE,CAAC;IACX,CAAC;IAEM,QAAQ,CAAC,MAAc,EAAE,OAAe,EAAE,UAAmB,EAAE,iBAA0B;QAC/F,MAAM,CAAC,IAAI,OAAO,CAAC,CAAO,OAAO,EAAE,MAAM,EAAE,EAAE;YAC5C,IAAI,CAAC;gBACJ,IAAI,KAAK,GAAe,IAAI,uBAAU,CAAC,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,iBAAiB,CAAC,CAAC;gBACvF,IAAI,GAAG,GAAW,WAAW,CAAC;gBAC9B,IAAI,QAAQ,GAAgB,IAAI,yBAAW,CAAC,iBAAO,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;gBAC7E,IAAI,WAAW,GAAsB,MAAM,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;gBAClF,IAAI,MAAa,CAAC;gBAClB,EAAE,CAAC,CAAC,WAAW,IAAI,WAAW,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACzD,MAAM,GAAG,IAAI,aAAK,CAAC,WAAW,CAAC,MAAM,EAAE,WAAW,CAAC,KAAK,EAAE,WAAW,CAAC,IAAI,EAAE,WAAW,CAAC,WAAW,EAAE,WAAW,CAAC,OAAO,EAAE,WAAW,CAAC,OAAO,EAAE,WAAW,CAAC,MAAM,EAAE,WAAW,CAAC,WAAW,EAAE,WAAW,CAAC,IAAI,EAAE,WAAW,CAAC,aAAa,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC;gBAC5P,CAAC;gBACD,OAAO,CAAC,MAAM,CAAC,CAAC;YACjB,CAAC;YAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC,GAAG,CAAC,CAAC;YACb,CAAC;QACF,CAAC,CAAA,CAAC,CAAC;IACJ,CAAC;IAEM,YAAY,CAAC,MAAc,EAAE,QAAgB,GAAG,EAAE,OAAgB,EAAE,UAAmB;QAC7F,MAAM,CAAC,IAAI,OAAO,CAAC,CAAO,OAAO,EAAE,MAAM,EAAE,EAAE;YAC5C,IAAI,CAAC;gBACJ,IAAI,KAAK,GAAmB,IAAI,+BAAc,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;gBACnF,IAAI,GAAG,GAAW,eAAe,CAAC;gBAClC,IAAI,QAAQ,GAAgB,IAAI,yBAAW,CAAC,iBAAO,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;gBAC7E,IAAI,WAAW,GAAwB,MAAM,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;gBACpF,IAAI,OAAgB,CAAC;gBACrB,EAAE,CAAC,CAAC,WAAW,IAAI,WAAW,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACzD,OAAO,GAAG,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;wBACjC,MAAM,CAAC,IAAI,aAAK,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,WAAW,EAAE,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,WAAW,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;oBACxL,CAAC,CAAC,CAAA;gBACH,CAAC;gBACD,OAAO,CAAC,OAAO,CAAC,CAAC;YAClB,CAAC;YAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC,GAAG,CAAC,CAAC;YACb,CAAC;QACF,CAAC,CAAA,CAAC,CAAC;IACJ,CAAC;IAEM,cAAc;QACpB,MAAM,CAAC,IAAI,OAAO,CAAC,CAAO,OAAO,EAAE,MAAM,EAAE,EAAE;YAC5C,IAAI,MAAc,CAAC;YACnB,IAAI,CAAC;gBACJ,IAAI,QAAQ,GAAgB,IAAI,yBAAW,CAAC,iBAAO,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAA;gBAC3E,IAAI,OAAO,GAAe,IAAI,uBAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBACzD,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;gBACzE,OAAO,CAAC,MAAM,CAAC,CAAC;YACjB,CAAC;YAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC,GAAG,CAAC,CAAC;YACb,CAAC;QACF,CAAC,CAAA,CAAC,CAAC;IACJ,CAAC;IAEM,QAAQ,CAAC,MAAc,EAAE,QAAgB,EAAE,KAAa,EAAE,UAAmB,EAAE,UAAmB,EAAE,WAA0B,EAAE,SAAkB,EAAE,gBAAyB,EAAE,gBAAoC;QACzN,MAAM,CAAC,IAAI,OAAO,CAAC,CAAO,OAAO,EAAE,MAAM,EAAE,EAAE;YAC5C,IAAI,CAAC;gBACJ,IAAI,IAAI,GAAe,wBAAU,CAAC,KAAK,CAAC;gBACxC,IAAI,IAAI,GAAe,wBAAU,CAAC,GAAG,CAAC;gBACtC,IAAI,KAAK,GAAa,IAAI,mBAAQ,CAAC,MAAM,EAAE,QAAQ,EAAE,wBAAU,CAAC,IAAI,CAAC,EAAE,wBAAU,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,QAAQ,EAAE,EAAE,UAAU,CAAC,QAAQ,EAAE,EAAE,0BAAY,CAAC,WAAW,CAAC,EAAE,SAAS,CAAC,QAAQ,EAAE,EAAE,UAAU,EAAE,gBAAgB,EAAE,+BAAiB,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBACtP,IAAI,QAAQ,GAAe,MAAM,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;gBACvD,OAAO,CAAC,QAAQ,CAAC,CAAA;YAClB,CAAC;YAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC,GAAG,CAAC,CAAC;YACb,CAAC;QACF,CAAC,CAAA,CAAC,CAAC;IACJ,CAAC;IAEM,SAAS,CAAC,MAAc,EAAE,QAAgB,EAAE,KAAa,EAAE,UAAmB,EAAE,UAAmB,EAAE,WAA0B,EAAE,SAAkB,EAAE,gBAAyB,EAAE,gBAAoC;QAC1N,MAAM,CAAC,IAAI,OAAO,CAAC,CAAO,OAAO,EAAE,MAAM,EAAE,EAAE;YAC5C,IAAI,CAAC;gBACJ,IAAI,IAAI,GAAe,wBAAU,CAAC,KAAK,CAAC;gBACxC,IAAI,IAAI,GAAe,wBAAU,CAAC,IAAI,CAAC;gBACvC,IAAI,KAAK,GAAa,IAAI,mBAAQ,CAAC,MAAM,EAAE,QAAQ,EAAE,wBAAU,CAAC,IAAI,CAAC,EAAE,wBAAU,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,QAAQ,EAAE,EAAE,UAAU,CAAC,QAAQ,EAAE,EAAE,0BAAY,CAAC,WAAW,CAAC,EAAE,SAAS,CAAC,QAAQ,EAAE,EAAE,UAAU,EAAE,gBAAgB,EAAE,+BAAiB,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBACtP,IAAI,QAAQ,GAAe,MAAM,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;gBACvD,OAAO,CAAC,QAAQ,CAAC,CAAC;YACnB,CAAC;YAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC,GAAG,CAAC,CAAA;YACZ,CAAC;QACF,CAAC,CAAA,CAAC,CAAC;IACJ,CAAC;IAEM,SAAS,CAAC,MAAc,EAAE,QAAgB,EAAE,UAAmB;QACrE,MAAM,CAAC,IAAI,OAAO,CAAC,CAAO,OAAO,EAAE,MAAM,EAAE,EAAE;YAC5C,IAAI,CAAC;gBACJ,IAAI,IAAI,GAAe,wBAAU,CAAC,MAAM,CAAC;gBACzC,IAAI,IAAI,GAAe,wBAAU,CAAC,GAAG,CAAC;gBACtC,IAAI,KAAK,GAAa,IAAI,mBAAQ,CAAC,MAAM,EAAE,QAAQ,EAAE,wBAAU,CAAC,IAAI,CAAC,EAAE,wBAAU,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;gBACzI,IAAI,QAAQ,GAAe,MAAM,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;gBACvD,OAAO,CAAC,QAAQ,CAAC,CAAA;YAClB,CAAC;YAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC,GAAG,CAAC,CAAC;YACb,CAAC;QACF,CAAC,CAAA,CAAC,CAAC;IACJ,CAAC;IAEM,UAAU,CAAC,MAAc,EAAE,QAAgB,EAAE,UAAmB;QACtE,MAAM,CAAC,IAAI,OAAO,CAAC,CAAO,OAAO,EAAE,MAAM,EAAE,EAAE;YAC5C,IAAI,CAAC;gBACJ,IAAI,IAAI,GAAe,wBAAU,CAAC,MAAM,CAAC;gBACzC,IAAI,IAAI,GAAe,wBAAU,CAAC,IAAI,CAAC;gBACvC,IAAI,KAAK,GAAa,IAAI,mBAAQ,CAAC,MAAM,EAAE,QAAQ,EAAE,wBAAU,CAAC,IAAI,CAAC,EAAE,wBAAU,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;gBACzI,IAAI,QAAQ,GAAe,MAAM,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;gBACvD,OAAO,CAAC,QAAQ,CAAC,CAAC;YACnB,CAAC;YAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC,GAAG,CAAC,CAAA;YACZ,CAAC;QACF,CAAC,CAAA,CAAC,CAAC;IACJ,CAAC;IAED,YAAY,OAAwB;QACnC,KAAK,CAAC,OAAO,CAAC,CAAC;IAChB,CAAC;CACD;AA9TD,oBA8TC",
  "sourcesContent": [
    "import {BotHttp} from \"./BotHttp\";\nimport {EMethod} from \"./EMethod\";\nimport {IListenKey} from \"./IListenKey\";\nimport {IBinanceOptions} from \"../Binance/Interfaces/IBinanceOptions\";\nimport {ICandlesOptions} from \"../ExchangeInfo/Interfaces/ICandleOptions\";\nimport {CandleInterval} from \"../ExchangeInfo/CandleInterval\";\nimport {Candle} from \"../ExchangeInfo/Candle\";\nimport {IExchangeInfo} from \"./Interfaces/IExchangeInfo\";\nimport {Market} from \"../Market/Market\";\nimport {ISymbol} from \"ExchangeInfo/Interfaces/ISymbol\";\nimport {Binance} from \"../Binance/Binance\";\nimport {Bot} from \"../Index\";\nimport {NewOrder} from \"../Transaction/NewOrder\";\nimport {ENewOrderRespType, EOrderSide, EOrderType, ETimeInForce} from \"../Transaction/Interfaces/EOrderEnums\";\nimport {IOrder} from \"../Transaction/Interfaces/IOrder\";\nimport {Order} from \"../Transaction/Order\";\nimport {HttpError} from \"../Error/HttpError\";\nimport {QueryCancelOrder} from \"../Transaction/QueryCancelOrder\";\nimport {Signed} from \"./Signed\";\nimport {DataStream} from \"./DataStream\";\nimport {CallOptions} from \"./CallOptions\";\nimport {ICancelOrderResult} from \"../Transaction/Interfaces/ICancelOrderResult\";\nimport {IQueryCancelOrder} from \"../Transaction/Interfaces/IQueryCancelOrder\";\nimport {OpenOrder} from \"../Transaction/OpenOrder\";\nimport {QueryOrder} from \"../Transaction/QueryOrder\";\nimport {IOpenOrder} from \"../Transaction/Interfaces/IOpenOrder\";\nimport {IQueryOrderResult} from \"../Transaction/Interfaces/IQueryOrderResult\";\nimport {QueryAllOrders} from \"../Transaction/QueryAllOrders\";\n\nexport class Rest extends BotHttp {\n\tpublic static listenKey: IListenKey;\n\n\tprivate _cancelOrder(cancelOrder: QueryCancelOrder): Promise<ICancelOrderResult | {}> {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tlet orderRes: ICancelOrderResult;\n\t\t\t\tlet privateOrder: IQueryCancelOrder | HttpError | {};\n\t\t\t\tlet url: string = (Binance.options.test) ? \"/v3/order/test\" : \"/v3/order\";\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.DELETE, true, false, false);\n\t\t\t\tprivateOrder = await this.privateCall(url, callOpts, cancelOrder);\n\t\t\t\tif (this.options.test && (Object.keys(privateOrder).length === 0 && privateOrder.constructor === Object)) {\n\t\t\t\t\tresolve(<{}>privateOrder);\n\t\t\t\t} else {\n\t\t\t\t\tif (privateOrder instanceof HttpError) {\n\t\t\t\t\t\treject(privateOrder);\n\t\t\t\t\t} else {\n\t\t\t\t\t\torderRes = <ICancelOrderResult>privateOrder;\n\t\t\t\t\t\tresolve(orderRes);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _getCandlesInterval(symbol: string, interval: string, limit?: number): Promise<Candle[]> {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tlet candleOpts: ICandlesOptions = <ICandlesOptions>{};\n\t\t\t\tcandleOpts.symbol = symbol;\n\t\t\t\tcandleOpts.interval = interval;\n\t\t\t\tcandleOpts.limit = limit;\n\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.GET);\n\t\t\t\tlet raw: any[][] = await this.call('/v1/klines', callOpts, candleOpts);\n\t\t\t\tlet candles: Candle[] = Candle.fromHttpByInterval(raw, candleOpts.symbol, candleOpts.interval);\n\t\t\t\tcandles.forEach((candle) => {\n\t\t\t\t\tcandle.quoteAsset = Bot.binance.rest.getQuoteAssetName(symbol);\n\t\t\t\t});\n\t\t\t\tresolve(candles);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t};\n\n\tprivate _newOrder(order: NewOrder): Promise<Order | HttpError | {}> {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tlet orderRes: Order;\n\t\t\t\tlet privateOrder: IOrder | {} | HttpError;\n\t\t\t\tlet url: string = (Binance.options.test) ? \"/v3/order/test\" : \"/v3/order\";\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.POST, true, false, false);\n\t\t\t\tprivateOrder = await this.privateCall(url, callOpts, order);\n\t\t\t\tif (this.options.test && (Object.keys(privateOrder).length === 0 && privateOrder.constructor === Object)) {\n\t\t\t\t\tresolve(<{}>privateOrder);\n\t\t\t\t} else {\n\t\t\t\t\tif (privateOrder instanceof HttpError) {\n\t\t\t\t\t\treject(privateOrder);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet order: IOrder = <IOrder>privateOrder;\n\t\t\t\t\t\torderRes = new Order(order.symbol, order.price, order.side, order.executedQty,\n\t\t\t\t\t\t\torder.orderId, order.origQty, order.status, order.timeInForce, order.type,\n\t\t\t\t\t\t\torder.clientOrderId, order.transactTime);\n\t\t\t\t\t\tresolve(orderRes);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic cancelOrder(symbol: string, orderId: number): Promise<ICancelOrderResult | {}> {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tlet cancelOrder: QueryCancelOrder = new QueryCancelOrder(symbol, orderId);\n\t\t\t\tif (cancelOrder && cancelOrder.hasOwnProperty(\"symbol\")) {\n\t\t\t\t\tOpenOrder.cancelOrderById(orderId);\n\t\t\t\t}\n\t\t\t\tlet cancelResult: ICancelOrderResult | {} = this._cancelOrder(cancelOrder);\n\t\t\t\tresolve(cancelResult);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic cancelOrdersBySymbol(symbol: string) {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tlet cancelOrder: QueryCancelOrder = new QueryCancelOrder(symbol);\n\t\t\t\tif (cancelOrder && cancelOrder.hasOwnProperty(\"symbol\")) {\n\t\t\t\t\tOpenOrder.cancelOrdersBySymbol(symbol);\n\t\t\t\t}\n\t\t\t\tlet cancelResult: ICancelOrderResult[] | {} = this._cancelOrder(cancelOrder);\n\t\t\t\tresolve(cancelResult);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic closeDataStream(): Promise<{}> {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\tlet result: object;\n\t\t\ttry {\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.DELETE, true, false, true);\n\t\t\t\tlet dStream: DataStream = new DataStream(Rest.listenKey);\n\t\t\t\tresult = await this.privateCall('/v1/userDataStream', callOpts, dStream);\n\t\t\t\tresolve(result);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic getCandles(symbols: string[], intervals: string[], limit?: number): Promise<CandleInterval[]> {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tlet candleIntervals: CandleInterval[] = [];\n\t\t\t\tfor (let symbol of symbols) {\n\t\t\t\t\tfor (let interval of intervals) {\n\t\t\t\t\t\tlet candles: Candle[] = await this._getCandlesInterval(symbol, interval, limit);\n\t\t\t\t\t\tlet ci = new CandleInterval(candles);\n\t\t\t\t\t\tcandleIntervals.push(ci);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tresolve(candleIntervals);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t};\n\n\tpublic getMarkets(quoteAsset?: string): Promise<Market[]> {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tlet info: IExchangeInfo = await this.getExchangeInfo();\n\t\t\t\tlet symbols: ISymbol[] = info.symbols;\n\t\t\t\tlet markets: Market[] = symbols.map(symbol => {\n\t\t\t\t\treturn new Market(symbol.symbol, symbol.baseAsset, symbol.quoteAsset, Market.GetLimitsFromBinanceSymbol(symbol));\n\t\t\t\t});\n\t\t\t\tBinance.markets = markets;\n\t\t\t\tresolve(markets);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic getDataStream(): Promise<IListenKey> {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.POST, true, true, false);\n\t\t\t\tlet signed = new Signed();\n\t\t\t\tRest.listenKey = <IListenKey> await this.privateCall('/v1/userDataStream', callOpts, signed);\n\t\t\t\tresolve(Rest.listenKey);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic getExchangeInfo(): Promise<IExchangeInfo> {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.GET, true, true, false, this.options.auth.key);\n\t\t\t\tlet info: IExchangeInfo = await this.call('/v1/exchangeInfo', callOpts);\n\t\t\t\tresolve(info);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t};\n\n\tpublic getOpenOrders(symbol: string, orderId: number, recvWindow?: number, origClientOrderId?: string): Promise<OpenOrder[]> {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tlet url: string = \"/v3/openOrders\";\n\t\t\t\tlet nOpen: QueryOrder = new QueryOrder(symbol, orderId, recvWindow, origClientOrderId);\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.GET, true, false, false);\n\t\t\t\tlet iOpenOrders: IOpenOrder[] = await this.privateCall(url, callOpts, nOpen);\n\t\t\t\tlet openOrders: OpenOrder[] = iOpenOrders.map(o => {\n\t\t\t\t\treturn new OpenOrder(o.clientOrderId, o.executedQty, o.orderId, o.origQty, o.price, o.side, o.status, o.symbol, o.timeInForce, o.type, o.icebergQty, o.isWorking, o.stopPrice, o.time);\n\t\t\t\t});\n\t\t\t\tresolve(openOrders);\n\t\t\t\tresolve();\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic getQuoteAssetName(symbol: string): string {\n\t\tlet qa: string;\n\t\tlet marketFilter: Market[] = Binance.markets.filter(market => market.symbol === symbol);\n\t\tlet market: Market;\n\t\tif (marketFilter && marketFilter.length > 0) {\n\t\t\tmarket = marketFilter[0];\n\t\t\tqa = market.quoteAsset;\n\t\t}\n\t\treturn qa;\n\t}\n\n\tpublic getOrder(symbol: string, orderId: number, recvWindow?: number, origClientOrderId?: string): Promise<Order> {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tlet query: QueryOrder = new QueryOrder(symbol, orderId, recvWindow, origClientOrderId);\n\t\t\t\tlet url: string = '/v3/order';\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.GET, true, false, false);\n\t\t\t\tlet privateCall: IQueryOrderResult = await this.privateCall(url, callOpts, query);\n\t\t\t\tlet result: Order;\n\t\t\t\tif (privateCall && privateCall.hasOwnProperty(\"symbol\")) {\n\t\t\t\t\tresult = new Order(privateCall.symbol, privateCall.price, privateCall.side, privateCall.executedQty, privateCall.orderId, privateCall.origQty, privateCall.status, privateCall.timeInForce, privateCall.type, privateCall.clientOrderId, privateCall.time);\n\t\t\t\t}\n\t\t\t\tresolve(result);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic getAllOrders(symbol: string, limit: number = 500, orderId?: number, recvWindow?: number): Promise<Order[]> {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tlet query: QueryAllOrders = new QueryAllOrders(symbol, orderId, limit, recvWindow);\n\t\t\t\tlet url: string = '/v3/allOrders';\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.GET, true, false, false);\n\t\t\t\tlet privateCall: IQueryOrderResult[] = await this.privateCall(url, callOpts, query);\n\t\t\t\tlet results: Order[];\n\t\t\t\tif (privateCall && privateCall.hasOwnProperty(\"symbol\")) {\n\t\t\t\t\tresults = privateCall.map(pCall => {\n\t\t\t\t\t\treturn new Order(pCall.symbol, pCall.price, pCall.side, pCall.executedQty, pCall.orderId, pCall.origQty, pCall.status, pCall.timeInForce, pCall.type, pCall.clientOrderId, pCall.time);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tresolve(results);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic keepDataStream(): Promise<{}> {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\tlet result: object;\n\t\t\ttry {\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.PUT, true, false, true)\n\t\t\t\tlet dStream: DataStream = new DataStream(Rest.listenKey);\n\t\t\t\tresult = await this.privateCall('/v1/userDataStream', callOpts, dStream);\n\t\t\t\tresolve(result);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic limitBuy(symbol: string, quantity: number, price: number, recvWindow?: number, iceburgQty?: number, timeInForce?: ETimeInForce, stopPrice?: number, newClientOrderId?: string, newOrderRespType?: ENewOrderRespType) {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tlet type: EOrderType = EOrderType.LIMIT;\n\t\t\t\tlet side: EOrderSide = EOrderSide.BUY;\n\t\t\t\tlet order: NewOrder = new NewOrder(symbol, quantity, EOrderSide[side], EOrderType[type], price.toString(), iceburgQty.toString(), ETimeInForce[timeInForce], stopPrice.toString(), recvWindow, newClientOrderId, ENewOrderRespType[newOrderRespType]);\n\t\t\t\tlet orderRes: Order | {} = await this._newOrder(order);\n\t\t\t\tresolve(orderRes)\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic limitSell(symbol: string, quantity: number, price: number, recvWindow?: number, iceburgQty?: number, timeInForce?: ETimeInForce, stopPrice?: number, newClientOrderId?: string, newOrderRespType?: ENewOrderRespType) {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tlet type: EOrderType = EOrderType.LIMIT;\n\t\t\t\tlet side: EOrderSide = EOrderSide.SELL;\n\t\t\t\tlet order: NewOrder = new NewOrder(symbol, quantity, EOrderSide[side], EOrderType[type], price.toString(), iceburgQty.toString(), ETimeInForce[timeInForce], stopPrice.toString(), recvWindow, newClientOrderId, ENewOrderRespType[newOrderRespType]);\n\t\t\t\tlet orderRes: Order | {} = await this._newOrder(order);\n\t\t\t\tresolve(orderRes);\n\t\t\t} catch (err) {\n\t\t\t\treject(err)\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic marketBuy(symbol: string, quantity: number, recvWindow?: number): Promise<Order | {}> {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tlet type: EOrderType = EOrderType.MARKET;\n\t\t\t\tlet side: EOrderSide = EOrderSide.BUY;\n\t\t\t\tlet order: NewOrder = new NewOrder(symbol, quantity, EOrderSide[side], EOrderType[type], null, null, null, null, recvWindow, null, null);\n\t\t\t\tlet orderRes: Order | {} = await this._newOrder(order);\n\t\t\t\tresolve(orderRes)\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic marketSell(symbol: string, quantity: number, recvWindow?: number): Promise<NewOrder | {}> {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tlet type: EOrderType = EOrderType.MARKET;\n\t\t\t\tlet side: EOrderSide = EOrderSide.SELL;\n\t\t\t\tlet order: NewOrder = new NewOrder(symbol, quantity, EOrderSide[side], EOrderType[type], null, null, null, null, recvWindow, null, null);\n\t\t\t\tlet orderRes: Order | {} = await this._newOrder(order);\n\t\t\t\tresolve(orderRes);\n\t\t\t} catch (err) {\n\t\t\t\treject(err)\n\t\t\t}\n\t\t});\n\t}\n\n\tconstructor(options: IBinanceOptions) {\n\t\tsuper(options);\n\t}\n}"
  ]
}