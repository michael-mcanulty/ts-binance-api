{"version":3,"file":"Rest.js","sourceRoot":"","sources":["../../src/Rest/Rest.ts"],"names":[],"mappings":"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","sourcesContent":["import {BotHttp} from \"./BotHttp\";\r\nimport {EMethod} from \"./EMethod\";\r\nimport {IListenKey} from \"./Interfaces/IListenKey\";\r\nimport {IBinanceOptions} from \"../Binance/Interfaces/IBinanceOptions\";\r\nimport {ICandlesOptions} from \"../ExchangeInfo/Interfaces/ICandleOptions\";\r\nimport {CandleInterval} from \"../ExchangeInfo/CandleInterval\";\r\nimport {Candle} from \"../ExchangeInfo/Candle\";\r\nimport {Market} from \"../Market/Market\";\r\nimport {ISymbol} from \"ExchangeInfo/Interfaces/ISymbol\";\r\nimport {Binance} from \"../Binance/Binance\";\r\nimport {Bot} from \"../Bot\";\r\nimport {NewOrder} from \"../Transaction/NewOrder\";\r\nimport {ENewOrderRespType, EOrderSide, EOrderType, ETimeInForce} from \"../Transaction/Interfaces/EOrderEnums\";\r\nimport {IOrder} from \"../Transaction/Interfaces/IOrder\";\r\nimport {Order} from \"../Transaction/Order\";\r\nimport {HttpError} from \"../Error/HttpError\";\r\nimport {CancelOrder} from \"../Transaction/CancelOrder\";\r\nimport {Signed} from \"./Signed\";\r\nimport {DataStream} from \"./DataStream\";\r\nimport {CallOptions} from \"./CallOptions\";\r\nimport {ICancelOrderResponse} from \"../Transaction/Interfaces/ICancelOrderResponse\";\r\nimport {IQueryCancelOrder} from \"../Transaction/Interfaces/IQueryCancelOrder\";\r\nimport {OpenOrder} from \"../Transaction/OpenOrder\";\r\nimport {QueryOrder} from \"../Transaction/QueryOrder\";\r\nimport {IOpenOrder} from \"../Transaction/Interfaces/IOpenOrder\";\r\nimport {IQueryOrderResponse} from \"../Transaction/Interfaces/IQueryOrderResponse\";\r\nimport {AllOrders} from \"../Transaction/AllOrders\";\r\nimport {OutboundAccountInfo} from \"../Account/OutboundAccountInfo\";\r\nimport {Balance} from \"../Balances/Balance\";\r\nimport {AccountInfoOptions} from \"../Account/AccountInfoOptions\";\r\nimport {IOutboundAccountInfoRest} from \"../Account/Interfaces/IOutboundAccountInfoRest\";\r\nimport {INewOrder} from \"../Transaction/Interfaces/INewOrder\";\r\nimport {CancelOrderResponse} from \"../Transaction/CancelOrderResponse\";\r\nimport {TestOrder} from \"../Transaction/TestOrder\";\r\nimport {IExchangeInfo} from \"../ExchangeInfo/Interfaces/IExchangeInfo\";\r\n\r\nexport class Rest extends BotHttp {\r\n\tpublic static listenKey: IListenKey;\r\n\r\n\tprivate _cancelOrder(cancelOrder: CancelOrder): Promise<CancelOrderResponse> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet orderResRaw: ICancelOrderResponse;\r\n\t\t\t\tlet response: CancelOrderResponse;\r\n\t\t\t\tlet privateOrder: IQueryCancelOrder | HttpError | {};\r\n\t\t\t\tlet url: string = (Binance.options.test) ? \"/v3/order/test\" : \"/v3/order\";\r\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.DELETE, true, false, false);\r\n\t\t\t\tprivateOrder = await this.privateCall(url, callOpts, cancelOrder);\r\n\t\t\t\tif (privateOrder instanceof HttpError) {\r\n\t\t\t\t\treject(privateOrder);\r\n\t\t\t\t} else {\r\n\t\t\t\t\torderResRaw = <ICancelOrderResponse>privateOrder;\r\n\t\t\t\t\tresponse = new CancelOrderResponse(orderResRaw);\r\n\t\t\t\t\tresolve(response);\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tprivate _getCandlesInterval(symbol: string, interval: string, limit?: number): Promise<Candle[]> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet candleOpts: ICandlesOptions = <ICandlesOptions>{};\r\n\t\t\t\tcandleOpts.symbol = symbol;\r\n\t\t\t\tcandleOpts.interval = interval;\r\n\t\t\t\tcandleOpts.limit = limit;\r\n\r\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.GET);\r\n\t\t\t\tlet raw: any[][] = await this.call('/v1/klines', callOpts, candleOpts);\r\n\t\t\t\tlet candles: Candle[] = Candle.fromHttpByInterval(raw, candleOpts.symbol, candleOpts.interval);\r\n\t\t\t\tcandles.forEach((candle) => {\r\n\t\t\t\t\tcandle.quoteAsset = Bot.binance.rest.getQuoteAssetName(symbol);\r\n\t\t\t\t});\r\n\t\t\t\tresolve(candles);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tprivate _newOrder(order: NewOrder): Promise<Order | HttpError | TestOrder> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet orderRes: Order;\r\n\t\t\t\tlet privateOrder: INewOrder | HttpError | TestOrder;\r\n\t\t\t\tlet url: string = (Binance.options.test) ? \"/v3/order/test\" : \"/v3/order\";\r\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.POST, true, false, false);\r\n\t\t\t\tprivateOrder = await this.privateCall(url, callOpts, NewOrder.toBinance(order));\r\n\t\t\t\tif (this.options.test && (Object.keys(privateOrder).length === 0 && privateOrder.constructor === Object)) {\r\n\t\t\t\t\tresolve(new TestOrder());\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (privateOrder instanceof HttpError) {\r\n\t\t\t\t\t\treject(privateOrder);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet order: IOrder = <IOrder>privateOrder;\r\n\t\t\t\t\t\torderRes = new Order(order.symbol, order.price, order.side, order.executedQty,\r\n\t\t\t\t\t\t\torder.orderId, order.origQty, order.status, order.timeInForce, order.type,\r\n\t\t\t\t\t\t\torder.clientOrderId, order.transactTime);\r\n\t\t\t\t\t\tresolve(orderRes);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic cancelOrder(symbol: string, orderId: number): Promise<CancelOrderResponse> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet result: CancelOrderResponse;\r\n\t\t\t\tlet cancelOrder: CancelOrder = new CancelOrder(symbol, orderId);\r\n\t\t\t\tlet cancelResult: ICancelOrderResponse = await this._cancelOrder(cancelOrder);\r\n\t\t\t\tresult = new CancelOrderResponse(<ICancelOrderResponse>cancelResult);\r\n\t\t\t\tresolve(result);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic cancelOrdersBySymbol(symbol: string): Promise<CancelOrderResponse[]> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet results: CancelOrderResponse[] = [];\r\n\t\t\t\tlet openOrders: OpenOrder[] = await this.getOpenOrders(symbol);\r\n\t\t\t\tlet symbolOrders: OpenOrder[] = openOrders.filter(order => order.symbol === symbol);\r\n\r\n\t\t\t\tfor (let order of symbolOrders) {\r\n\t\t\t\t\tlet cancelResp: CancelOrderResponse = await this.cancelOrder(order.symbol, order.orderId);\r\n\t\t\t\t\tresults.push(cancelResp);\r\n\t\t\t\t}\r\n\t\t\t\tresolve(results);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic closeDataStream(): Promise<{}> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\tlet result: object;\r\n\t\t\ttry {\r\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.DELETE, true, false, true);\r\n\t\t\t\tlet dStream: DataStream = new DataStream(Rest.listenKey);\r\n\t\t\t\tresult = await this.privateCall('/v1/userDataStream', callOpts, dStream);\r\n\t\t\t\tresolve(result);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic getAccountInfo(recvWindow?: number): Promise<OutboundAccountInfo> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet url: string = \"/v3/account\";\r\n\t\t\t\tlet opts: AccountInfoOptions = new AccountInfoOptions(recvWindow);\r\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.GET, true, false, false);\r\n\t\t\t\tlet accountInfoRest: IOutboundAccountInfoRest = await this.privateCall(url, callOpts, opts);\r\n\t\t\t\tlet info: OutboundAccountInfo = OutboundAccountInfo.fromBinanceRest(accountInfoRest);\r\n\t\t\t\tresolve(info);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic getAllOrders(symbol: string, limit: number = 500, orderId?: number, recvWindow?: number): Promise<Order[]> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet query: AllOrders = new AllOrders(symbol, orderId, limit, recvWindow);\r\n\t\t\t\tlet url: string = '/v3/allOrders';\r\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.GET, true, false, false);\r\n\t\t\t\tlet privateCall: IQueryOrderResponse[] = await this.privateCall(url, callOpts, query);\r\n\t\t\t\tlet results: Order[] = [];\r\n\r\n\t\t\t\tif (Array.isArray(privateCall) && privateCall.length > 0) {\r\n\t\t\t\t\tresults = privateCall.map(pCall => {\r\n\t\t\t\t\t\treturn new Order(pCall.symbol, pCall.price, pCall.side, pCall.executedQty, pCall.orderId, pCall.origQty, pCall.status, pCall.timeInForce, pCall.type, pCall.clientOrderId, pCall.time);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tresolve(results);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic getBalances(recvWindow?: number, gtZeroOnly: boolean = false): Promise<Balance[]> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet balances: Balance[];\r\n\t\t\t\tlet accountInfo: OutboundAccountInfo = await this.getAccountInfo(recvWindow);\r\n\t\t\t\tbalances = accountInfo.balances;\r\n\r\n\t\t\t\tif (gtZeroOnly) {\r\n\t\t\t\t\tbalances = accountInfo.balances.filter(bal => bal.available > 0);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbalances = accountInfo.balances;\r\n\t\t\t\t}\r\n\t\t\t\tresolve(balances);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic getCandles(symbols: string[], intervals: string[], limit?: number): Promise<CandleInterval[]> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet candleIntervals: CandleInterval[] = [];\r\n\t\t\t\tfor (let symbol of symbols) {\r\n\t\t\t\t\tfor (let interval of intervals) {\r\n\t\t\t\t\t\tlet candles: Candle[] = await this._getCandlesInterval(symbol, interval, limit);\r\n\t\t\t\t\t\tlet ci = new CandleInterval(candles);\r\n\t\t\t\t\t\tcandleIntervals.push(ci);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tresolve(candleIntervals);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tpublic getDataStream(): Promise<IListenKey> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.POST, true, true, false);\r\n\t\t\t\tlet signed = new Signed();\r\n\t\t\t\tRest.listenKey = <IListenKey> await this.privateCall('/v1/userDataStream', callOpts, signed);\r\n\t\t\t\tresolve(Rest.listenKey);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic getExchangeInfo(): Promise<IExchangeInfo> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.GET, true, true, false, this.options.auth.key);\r\n\t\t\t\tlet info: IExchangeInfo = await this.call('/v1/exchangeInfo', callOpts);\r\n\t\t\t\tresolve(info);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tpublic getMarkets(quoteAsset?: string): Promise<Market[]> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet info: IExchangeInfo = await this.getExchangeInfo();\r\n\t\t\t\tlet symbols: ISymbol[] = info.symbols;\r\n\t\t\t\tlet markets: Market[] = symbols.map(symbol => {\r\n\t\t\t\t\treturn new Market(symbol.symbol, symbol.baseAsset, symbol.quoteAsset, Market.GetLimitsFromBinanceSymbol(symbol));\r\n\t\t\t\t});\r\n\t\t\t\tBinance.markets = markets;\r\n\t\t\t\tresolve(markets);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic getOpenOrders(symbol: string, orderId?: number, recvWindow?: number, origClientOrderId?: string): Promise<OpenOrder[]> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet url: string = \"/v3/openOrders\";\r\n\t\t\t\tlet nOpen: QueryOrder = new QueryOrder(symbol, orderId, recvWindow, origClientOrderId);\r\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.GET, true, false, false);\r\n\t\t\t\tlet privateCall: IOpenOrder[] = await this.privateCall(url, callOpts, nOpen);\r\n\t\t\t\tlet openOrders: OpenOrder[] = [];\r\n\t\t\t\tif (Array.isArray(privateCall) && privateCall.length > 0) {\r\n\t\t\t\t\topenOrders = privateCall.map(o => {\r\n\t\t\t\t\t\treturn new OpenOrder(o.clientOrderId, o.executedQty, o.orderId, o.origQty, o.price, o.side, o.status, o.symbol, o.timeInForce, o.type, o.icebergQty, o.isWorking, o.stopPrice, o.time);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tresolve(openOrders);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic getOrder(symbol: string, orderId: number, recvWindow?: number, origClientOrderId?: string): Promise<Order> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet query: QueryOrder = new QueryOrder(symbol, orderId, recvWindow, origClientOrderId);\r\n\t\t\t\tlet url: string = '/v3/order';\r\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.GET, true, false, false);\r\n\t\t\t\tlet privateCall: IQueryOrderResponse = await this.privateCall(url, callOpts, query);\r\n\t\t\t\tlet result: Order;\r\n\t\t\t\tif (privateCall && privateCall.hasOwnProperty(\"symbol\")) {\r\n\t\t\t\t\tresult = new Order(privateCall.symbol, privateCall.price, privateCall.side, privateCall.executedQty, privateCall.orderId, privateCall.origQty, privateCall.status, privateCall.timeInForce, privateCall.type, privateCall.clientOrderId, privateCall.time);\r\n\t\t\t\t}\r\n\t\t\t\tresolve(result);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic getQuoteAssetName(symbol: string): string {\r\n\t\tlet qa: string;\r\n\t\tlet marketFilter: Market[] = Binance.markets.filter(market => market.symbol === symbol);\r\n\t\tlet market: Market;\r\n\t\tif (marketFilter && marketFilter.length > 0) {\r\n\t\t\tmarket = marketFilter[0];\r\n\t\t\tqa = market.quoteAsset;\r\n\t\t}\r\n\t\treturn qa;\r\n\t}\r\n\r\n\tpublic keepDataStream(): Promise<{}> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\tlet result: object;\r\n\t\t\ttry {\r\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.PUT, true, false, true);\r\n\t\t\t\tlet dStream: DataStream = new DataStream(Rest.listenKey);\r\n\t\t\t\tresult = await this.privateCall('/v1/userDataStream', callOpts, dStream);\r\n\t\t\t\tresolve(result);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic limitBuy(symbol: string, quantity: number, price: number, recvWindow?: number, iceburgQty?: number, timeInForce?: ETimeInForce, stopPrice?: number, newClientOrderId?: string, newOrderRespType?: ENewOrderRespType): Promise<Order | TestOrder> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet type: EOrderType = EOrderType.LIMIT;\r\n\t\t\t\tlet side: EOrderSide = EOrderSide.BUY;\r\n\t\t\t\tlet order: NewOrder = new NewOrder(symbol, quantity, side, type, price, iceburgQty, timeInForce, stopPrice, recvWindow, newClientOrderId, newOrderRespType);\r\n\t\t\t\tlet orderRes: Order | TestOrder = await this._newOrder(order);\r\n\t\t\t\tresolve(orderRes);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic limitSell(symbol: string, quantity: number, price: number, recvWindow?: number, iceburgQty?: number, timeInForce?: ETimeInForce, stopPrice?: number, newClientOrderId?: string, newOrderRespType?: ENewOrderRespType): Promise<Order | TestOrder> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet type: EOrderType = EOrderType.LIMIT;\r\n\t\t\t\tlet side: EOrderSide = EOrderSide.SELL;\r\n\t\t\t\tlet order: NewOrder = new NewOrder(symbol, quantity, side, type, price, iceburgQty, timeInForce, stopPrice, recvWindow, newClientOrderId, newOrderRespType);\r\n\t\t\t\tlet orderRes: Order | {} = await this._newOrder(order);\r\n\t\t\t\tresolve(orderRes);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err)\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic marketBuy(symbol: string, quantity: number, recvWindow?: number): Promise<Order | TestOrder> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet type: EOrderType = EOrderType.MARKET;\r\n\t\t\t\tlet side: EOrderSide = EOrderSide.BUY;\r\n\t\t\t\tlet order: NewOrder = new NewOrder(symbol, quantity, side, type, null, null, null, null, recvWindow, null, null);\r\n\t\t\t\tlet orderRes: Order | {} = await this._newOrder(order);\r\n\t\t\t\tresolve(orderRes)\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic marketSell(symbol: string, quantity: number, recvWindow?: number): Promise<Order | TestOrder> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet type: EOrderType = EOrderType.MARKET;\r\n\t\t\t\tlet side: EOrderSide = EOrderSide.SELL;\r\n\t\t\t\tlet order: NewOrder = new NewOrder(symbol, quantity, side, type, null, null, null, null, recvWindow, null, null);\r\n\t\t\t\tlet orderRes: Order | {} = await this._newOrder(order);\r\n\t\t\t\tresolve(orderRes);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err)\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tconstructor(options: IBinanceOptions) {\r\n\t\tsuper(options);\r\n\t}\r\n}"]}