{
  "version": 3,
  "file": "Rest.js",
  "sourceRoot": "",
  "sources": [
    "../../src/Rest/Rest.ts"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "import {BotHttp} from \"./BotHttp\";\r\nimport {EMethod} from \"./EMethod\";\r\nimport {IListenKey} from \"./IListenKey\";\r\nimport {IBinanceOptions} from \"../Binance/Interfaces/IBinanceOptions\";\r\nimport {ICandlesOptions} from \"../ExchangeInfo/Interfaces/ICandleOptions\";\r\nimport {CandleInterval} from \"../ExchangeInfo/CandleInterval\";\r\nimport {Candle} from \"../ExchangeInfo/Candle\";\r\nimport {IExchangeInfo} from \"./Interfaces/IExchangeInfo\";\r\nimport {Market} from \"../Market/Market\";\r\nimport {ISymbol} from \"ExchangeInfo/Interfaces/ISymbol\";\r\nimport {Binance} from \"../Binance/Binance\";\r\nimport {Bot} from \"../Index\";\r\nimport {NewOrder} from \"../Transaction/NewOrder\";\r\nimport {EOrderSide, EOrderType} from \"../Transaction/Interfaces/EOrderEnums\";\r\nimport {IOrder} from \"../Transaction/Interfaces/IOrder\";\r\nimport {Order} from \"../Transaction/Order\";\r\nimport {HttpError} from \"../Error/HttpError\";\r\nimport {NewCancelOrder} from \"../Transaction/NewCancelOrder\";\r\nimport {Signed} from \"./Signed\";\r\nimport {DataStream} from \"./DataStream\";\r\nimport {CallOptions} from \"./CallOptions\";\r\nimport {ICancelOrderResult} from \"../Transaction/Interfaces/ICancelOrderResult\";\r\nimport {INewCancelOrder} from \"../Transaction/Interfaces/INewCancelOrder\";\r\nimport {OpenOrder} from \"../Transaction/OpenOrder\";\r\nimport {NewOpenOrder} from \"../Transaction/NewOpenOrder\";\r\nimport {IOpenOrder} from \"../Transaction/Interfaces/IOpenOrder\";\r\n\r\nexport class Rest extends BotHttp {\r\n\tpublic static listenKey: IListenKey;\r\n\r\n\tprivate _cancelOrder(cancelOrder: NewCancelOrder): Promise<ICancelOrderResult | {}> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet orderRes: ICancelOrderResult;\r\n\t\t\t\tlet privateOrder: INewCancelOrder | HttpError | {};\r\n\t\t\t\tlet url: string = (Binance.options.test) ? \"/v3/order/test\" : \"/v3/order\";\r\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.DELETE, true, false, false);\r\n\t\t\t\tprivateOrder = await this.privateCall(url, callOpts, cancelOrder);\r\n\t\t\t\tif (this.options.test && (Object.keys(privateOrder).length === 0 && privateOrder.constructor === Object)) {\r\n\t\t\t\t\tresolve(<{}>privateOrder);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (privateOrder instanceof HttpError) {\r\n\t\t\t\t\t\treject(privateOrder);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\torderRes = <ICancelOrderResult>privateOrder;\r\n\t\t\t\t\t\tresolve(orderRes);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tprivate _getCandlesInterval(symbol: string, interval: string, limit?: number): Promise<Candle[]> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet candleOpts: ICandlesOptions = <ICandlesOptions>{};\r\n\t\t\t\tcandleOpts.symbol = symbol;\r\n\t\t\t\tcandleOpts.interval = interval;\r\n\t\t\t\tcandleOpts.limit = limit;\r\n\r\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.GET);\r\n\t\t\t\tlet raw: any[][] = await this.call('/v1/klines', callOpts, candleOpts);\r\n\t\t\t\tlet candles: Candle[] = Candle.fromHttpByInterval(raw, candleOpts.symbol, candleOpts.interval);\r\n\t\t\t\tcandles.forEach((candle) => {\r\n\t\t\t\t\tcandle.quoteAsset = Bot.binance.rest.getQuoteAssetName(symbol);\r\n\t\t\t\t});\r\n\t\t\t\tresolve(candles);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tprivate _newOrder(order: NewOrder): Promise<Order | HttpError | {}> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet orderRes: Order;\r\n\t\t\t\tlet privateOrder: IOrder | {} | HttpError;\r\n\t\t\t\tlet url: string = (Binance.options.test) ? \"/v3/order/test\" : \"/v3/order\";\r\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.POST, true, false, false);\r\n\t\t\t\tprivateOrder = await this.privateCall(url, callOpts, order);\r\n\t\t\t\tif (this.options.test && (Object.keys(privateOrder).length === 0 && privateOrder.constructor === Object)) {\r\n\t\t\t\t\tresolve(<{}>privateOrder);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (privateOrder instanceof HttpError) {\r\n\t\t\t\t\t\treject(privateOrder);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\torderRes = new Order(<IOrder>privateOrder);\r\n\t\t\t\t\t\tresolve(orderRes);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic cancelOrder(symbol: string, orderId: number): Promise<ICancelOrderResult | {}> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet cancelOrder: NewCancelOrder = new NewCancelOrder(symbol, orderId);\r\n\t\t\t\tif (cancelOrder && cancelOrder.hasOwnProperty(\"symbol\")) {\r\n\t\t\t\t\tOpenOrder.cancelOrderById(orderId);\r\n\t\t\t\t}\r\n\t\t\t\tlet cancelResult: ICancelOrderResult | {} = this._cancelOrder(cancelOrder);\r\n\t\t\t\tresolve(cancelResult);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic cancelOrdersBySymbol(symbol: string) {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet cancelOrder: NewCancelOrder = new NewCancelOrder(symbol);\r\n\t\t\t\tif (cancelOrder && cancelOrder.hasOwnProperty(\"symbol\")) {\r\n\t\t\t\t\tOpenOrder.cancelOrdersBySymbol(symbol);\r\n\t\t\t\t}\r\n\t\t\t\tlet cancelResult: ICancelOrderResult[] | {} = this._cancelOrder(cancelOrder);\r\n\t\t\t\tresolve(cancelResult);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic closeDataStream(): Promise<{}> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\tlet result: object;\r\n\t\t\ttry {\r\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.DELETE, true, false, true);\r\n\t\t\t\tlet dStream: DataStream = new DataStream(Rest.listenKey);\r\n\t\t\t\tresult = await this.privateCall('/v1/userDataStream', callOpts, dStream);\r\n\t\t\t\tresolve(result);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic getCandles(symbols: string[], intervals: string[], limit?: number): Promise<CandleInterval[]> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet candleIntervals: CandleInterval[] = [];\r\n\t\t\t\tfor (let symbol of symbols) {\r\n\t\t\t\t\tfor (let interval of intervals) {\r\n\t\t\t\t\t\tlet candles: Candle[] = await this._getCandlesInterval(symbol, interval, limit);\r\n\t\t\t\t\t\tlet ci = new CandleInterval(candles);\r\n\t\t\t\t\t\tcandleIntervals.push(ci);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tresolve(candleIntervals);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tpublic getMarkets(quoteAsset?: string): Promise<Market[]> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet info: IExchangeInfo = await this.getExchangeInfo();\r\n\t\t\t\tlet symbols: ISymbol[] = info.symbols;\r\n\t\t\t\tlet markets: Market[] = symbols.map(symbol => {\r\n\t\t\t\t\treturn new Market(symbol.symbol, symbol.baseAsset, symbol.quoteAsset, Market.GetLimitsFromBinanceSymbol(symbol));\r\n\t\t\t\t});\r\n\t\t\t\tBinance.markets = markets;\r\n\t\t\t\tresolve(markets);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic getDataStream(): Promise<IListenKey> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.POST, true, true, false);\r\n\t\t\t\tlet signed = new Signed();\r\n\t\t\t\tRest.listenKey = <IListenKey> await this.privateCall('/v1/userDataStream', callOpts, signed);\r\n\t\t\t\tresolve(Rest.listenKey);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic getExchangeInfo(): Promise<IExchangeInfo> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.GET, true, true, false, this.options.auth.key);\r\n\t\t\t\tlet info: IExchangeInfo = await this.call('/v1/exchangeInfo', callOpts);\r\n\t\t\t\tresolve(info);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tpublic getOpenOrders(symbol: string, orderId: number, recvWindow?: number, origClientOrderId?: string): Promise<OpenOrder[]> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\r\n\t\t\t\tlet url: string = \"/v3/openOrders\";\r\n\t\t\t\tlet nOpen: NewOpenOrder = new NewOpenOrder(symbol, orderId, recvWindow, origClientOrderId);\r\n\t\t\t\tlet privateOpenOrder: IOpenOrder = await this.privateCall(url, callOpts, nOpen);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic getQuoteAssetName(symbol: string): string {\r\n\t\tlet qa: string;\r\n\t\tlet marketFilter: Market[] = Binance.markets.filter(market => market.symbol === symbol);\r\n\t\tlet market: Market;\r\n\t\tif (marketFilter && marketFilter.length > 0) {\r\n\t\t\tmarket = marketFilter[0];\r\n\t\t\tqa = market.quoteAsset;\r\n\t\t}\r\n\t\treturn qa;\r\n\t}\r\n\r\n\tpublic getOrder(symbol: string, orderId: number, recvWindow?: number, origClientOrderId?: string): Promise<OpenOrder> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet nOpen: NewOpenOrder = new NewOpenOrder(symbol, orderId, recvWindow, origClientOrderId);\r\n\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic keepDataStream(): Promise<{}> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\tlet result: object;\r\n\t\t\ttry {\r\n\t\t\t\tlet callOpts: CallOptions = new CallOptions(EMethod.PUT, true, false, true)\r\n\t\t\t\tlet dStream: DataStream = new DataStream(Rest.listenKey);\r\n\t\t\t\tresult = await this.privateCall('/v1/userDataStream', callOpts, dStream);\r\n\t\t\t\tresolve(result);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic limitBuy(symbol: string, price: number, quantity: number) {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet type: EOrderType = EOrderType.LIMIT;\r\n\t\t\t\tlet side: EOrderSide = EOrderSide.BUY;\r\n\t\t\t\tlet order: NewOrder = new NewOrder(quantity, side, symbol, type, price);\r\n\t\t\t\tlet orderRes: Order | {} = await this._newOrder(order);\r\n\t\t\t\tresolve(orderRes)\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic limitSell(symbol: string, price: number, quantity?: number) {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet type: EOrderType = EOrderType.LIMIT;\r\n\t\t\t\tlet side: EOrderSide = EOrderSide.SELL;\r\n\t\t\t\tlet newOrder: NewOrder | {} = new NewOrder(quantity, side, symbol, type, price);\r\n\t\t\t\tresolve(newOrder);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err)\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic marketBuy(symbol: string, quantity: number): Promise<Order | {}> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet type: EOrderType = EOrderType.MARKET;\r\n\t\t\t\tlet side: EOrderSide = EOrderSide.BUY;\r\n\t\t\t\tlet order: NewOrder = new NewOrder(quantity, side, symbol, type);\r\n\t\t\t\tlet orderRes: Order | {} = await this._newOrder(order);\r\n\t\t\t\tresolve(orderRes)\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic marketSell(symbol: string, quantity: number): Promise<NewOrder | {}> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet type: EOrderType = EOrderType.MARKET;\r\n\t\t\t\tlet side: EOrderSide = EOrderSide.SELL;\r\n\t\t\t\tlet order: NewOrder = new NewOrder(quantity, side, symbol, type);\r\n\t\t\t\tlet orderRes: Order | {} = await this._newOrder(order);\r\n\t\t\t\tresolve(orderRes);\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err)\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tconstructor(options: IBinanceOptions) {\r\n\t\tsuper(options);\r\n\t}\r\n}"
  ]
}