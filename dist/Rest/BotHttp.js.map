{"version":3,"file":"BotHttp.js","sourceRoot":"","sources":["../../src/Rest/BotHttp.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Fetch from 'isomorphic-fetch'\r\nimport * as crypto from 'crypto'\r\nimport {HttpError} from \"../Error/HttpError\";\r\nimport {IServerTime} from \"./Interfaces/IServerTime\";\r\nimport {IBinanceOptions} from \"../Binance/Interfaces/IBinanceOptions\";\r\nimport {ITimestamp} from \"./Interfaces/ITimestamp\";\r\nimport {Signed} from \"./Signed\";\r\nimport {ApiHeader} from \"./ApiHeader\";\r\nimport {CallOptions} from \"./CallOptions\";\r\nimport {IBinanceApiAuth} from \"../Account/Interfaces/IBinanceApiAuth\";\r\nimport {ICallOpts} from '../Rest/Interfaces/ICallOpts';\r\nimport {RequestAPI, RequiredUriUrl, Response, ResponseAsJSON} from \"request\";\r\nimport {TMethod} from \"./TMethod\";\r\nimport * as requestPromise from \"request-promise-native\";\r\n\r\nexport class BotHttp {\r\n\tpublic static BASE: string = 'https://api.binance.com';\r\n\tpublic auth: IBinanceApiAuth;\r\n\tpublic static fetch: Function = Fetch;\r\n\tpublic options: IBinanceOptions;\r\n\r\n\tstatic buildUrl(options: CallOptions): string {\r\n\t\treturn `${BotHttp.BASE}${options.uri.includes('/wapi') ? '' : '/api'}${options.uri}${(options.qs instanceof Object) ? '' : BotHttp.makeQueryString(options.qs)}`;\r\n\t}\r\n\r\n\tpublic async call(callOptions: CallOptions): Promise<any> {\r\n\t\tlet result: any;\r\n\t\ttry {\r\n\t\t\tresult = await this.requestAsync(callOptions);\r\n\t\t\treturn result;\r\n\t\t} catch (err) {\r\n\t\t\tthrow err;\r\n\t\t}\r\n\t}\r\n\t//TODO: CallOpts rename to something like requestOpts. Extend request or add properties to callOpts like 'form'.\r\n\tpublic async requestAsync(callOptions: CallOptions):Promise<ResponseAsJSON | HttpError>{\r\n\t\tlet json: ResponseAsJSON;\r\n\t\tlet error: HttpError;\r\n\t\tlet newHeaders: object;\r\n\t\tlet requestApi: RequestAPI<requestPromise.RequestPromise, requestPromise.RequestPromiseOptions, RequiredUriUrl>;\r\n\t\tlet method: TMethod = <TMethod> callOptions.method;\r\n\r\n\t\tlet requestOpts: requestPromise.OptionsWithUri = <requestPromise.OptionsWithUri>{};\r\n\t\trequestOpts.uri = callOptions.uri;\r\n\t\trequestOpts.method = callOptions.method;\r\n\t\trequestOpts.headers = callOptions.headers;\r\n\t\trequestOpts.json = callOptions.json;\r\n\r\n\t\trequestApi = requestPromise[method.toLowerCase()];\r\n\t\tlet res: Response = await requestApi(requestOpts);\r\n\t\tjson = await res.toJSON();\r\n\t\tif (res.statusCode !== 200) {\r\n\t\t\terror = new HttpError(res.statusCode, res.statusMessage);\r\n\t\t\treturn Promise.reject(error);\r\n\t\t}else {\r\n\t\t\treturn <ResponseAsJSON>json;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate getSignature(payload: any, timestamp: ITimestamp): string {\r\n\t\tlet signature: string;\r\n\t\tsignature = crypto.createHmac('sha256', this.options.auth.secret).update(BotHttp.makeQueryString(Object.assign(payload, timestamp)).substr(1)).digest('hex');\r\n\t\treturn signature;\r\n\t}\r\n\r\n\tprivate async getTimestamp(): Promise<ITimestamp> {\r\n\t\tlet time: ITimestamp = <ITimestamp>{};\r\n\t\tif (this.options.useServerTime) {\r\n\t\t\ttry {\r\n\t\t\t\ttime.timestamp = await this.timestamp();\r\n\t\t\t\treturn time;\r\n\t\t\t} catch (err) {\r\n\t\t\t\tthrow err;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\ttime.timestamp = Date.now();\r\n\t\t\treturn time;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static makeQueryString(params: any): string {\r\n\t\tlet result: string;\r\n\t\tlet keys: string[];\r\n\t\tkeys = Object.keys(params).filter(k => params[k]);\r\n\t\tif (!params) {\r\n\t\t\tresult = \"\";\r\n\t\t} else {\r\n\t\t\tresult = `?${keys.map(k => `${encodeURIComponent(k)}=${encodeURIComponent(params[k])}`).join('&')}`;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic async ping(): Promise<boolean> {\r\n\t\tlet config: CallOptions;\r\n\t\tlet options: ICallOpts = <ICallOpts>{};\r\n\t\toptions.method = \"GET\";\r\n\t\toptions.json = true;\r\n\t\toptions.isSigned = true;\r\n\t\toptions.uri = '/v1/ping';\r\n\t\toptions.apiKey = this.options.auth.key;\r\n\r\n\t\ttry {\r\n\t\t\tconfig = new CallOptions(options);\r\n\t\t\tawait this.call(config);\r\n\t\t\treturn true;\r\n\t\t} catch (err) {\r\n\t\t\tthrow err;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic async privateCall(options: CallOptions): Promise<any> {\r\n\t\tlet tStamp: ITimestamp;\r\n\t\tlet result: any;\r\n\t\tlet signature: string;\r\n\r\n\t\ttry {\r\n\t\t\ttStamp = await this.getTimestamp();\r\n\t\t\toptions.headers = new ApiHeader(this.options.auth.key);\r\n\t\t\tsignature = await this.getSignature(options.qs, tStamp);\r\n\r\n\t\t\tif (options.isSigned) {\r\n\t\t\t\tif(typeof options.qs == undefined){\r\n\t\t\t\t\toptions.qs = new Signed();\r\n\t\t\t\t}\r\n\t\t\t\toptions.qs['timestamp'] = tStamp.timestamp;\r\n\t\t\t\toptions.qs['signature'] = signature;\r\n\t\t\t} else {\r\n\t\t\t\tdelete options.qs['timestamp'];\r\n\t\t\t}\r\n\t\t\tresult = await this.requestAsync(options);\r\n\t\t\treturn result;\r\n\t\t} catch (err) {\r\n\t\t\tthrow err;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate async time(): Promise<IServerTime> {\r\n\t\tlet opts: CallOptions;\r\n\t\tlet options: ICallOpts = <ICallOpts>{};\r\n\r\n\t\ttry {\r\n\t\t\toptions.method = \"GET\";\r\n\t\t\toptions.json = true;\r\n\t\t\toptions.isSigned = true;\r\n\t\t\toptions.apiKey = this.options.auth.key;\r\n\t\t\toptions.uri = '/v1/time';\r\n\r\n\t\t\topts = new CallOptions(options);\r\n\t\t\treturn <IServerTime> await this.call(opts);\r\n\t\t} catch (err) {\r\n\t\t\tthrow err;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic async timestamp(): Promise<number> {\r\n\t\ttry {\r\n\t\t\tlet time: IServerTime = await this.time();\r\n\t\t\treturn time.serverTime;\r\n\t\t} catch (err) {\r\n\t\t\tthrow err;\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor(options: IBinanceOptions) {\r\n\t\tthis.options = options;\r\n\t}\r\n}\r\n"]}