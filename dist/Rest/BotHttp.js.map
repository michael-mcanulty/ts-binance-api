{"version":3,"file":"BotHttp.js","sourceRoot":"","sources":["../../src/Rest/BotHttp.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Fetch from 'isomorphic-fetch'\r\nimport * as crypto from 'crypto'\r\nimport {HttpError} from \"../Error/HttpError\";\r\nimport {IServerTime} from \"./Interfaces/IServerTime\";\r\nimport {IBinanceOptions} from \"../Binance/Interfaces/IBinanceOptions\";\r\nimport {ITimestamp} from \"./Interfaces/ITimestamp\";\r\nimport {Signed} from \"./Signed\";\r\nimport {NewOrder} from \"../Transaction/NewOrder\";\r\nimport {CancelOrder} from \"../Transaction/CancelOrder\";\r\nimport {OpenOrder} from \"../Transaction/OpenOrder\";\r\nimport {DataStream} from \"./DataStream\";\r\nimport {ApiHeader} from \"./ApiHeader\";\r\nimport {CallOptions} from \"./CallOptions\";\r\nimport {QueryOrder} from \"../Transaction/QueryOrder\";\r\nimport {AccountInfoOptions} from \"../Account/AccountInfoOptions\";\r\nimport {IBinanceApiAuth} from \"../Account/Interfaces/IBinanceApiAuth\";\r\nimport {IDepositAddressReq} from \"../Deposit/Interfaces/IDepositAddressReq\";\r\nimport {IDepositHistoryReq} from '../Deposit/Interfaces/IDepositHistoryReq';\r\nimport {IWithdrawHistoryReq} from \"../Withdraw/Interfaces/IWithdrawHistoryReq\";\r\nimport {ICallOpts} from '../Rest/Interfaces/ICallOpts';\r\n\r\nexport class BotHttp {\r\n\tpublic static BASE: string = 'https://api.binance.com';\r\n\tpublic auth: IBinanceApiAuth;\r\n\tpublic static fetch: Function = Fetch;\r\n\tpublic options: IBinanceOptions;\r\n\r\n\tstatic buildUrl(path: string, noData: boolean, data: object): string {\r\n\t\treturn `${BotHttp.BASE}${path.includes('/wapi') ? '' : '/api'}${path}${noData ? '' : BotHttp.makeQueryString(data)}`;\r\n\t}\r\n\r\n\tpublic async call(path: string, callOptions: CallOptions, payload?: any): Promise<any> {\r\n\t\tlet result: any;\r\n\t\ttry {\r\n\t\t\tresult = await this.fetch(path, callOptions, payload);\r\n\t\t\treturn result;\r\n\t\t} catch (err) {\r\n\t\t\tthrow err;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic async fetch(path: string, callOptions: CallOptions, payload: any): Promise<Response | HttpError> {\r\n\t\ttry {\r\n\t\t\tlet url: string = BotHttp.buildUrl(path, callOptions.noData, payload);\r\n\t\t\tlet res: Response = await BotHttp.fetch(url, callOptions);\r\n\t\t\tlet json = await res.json();\r\n\r\n\t\t\tif (res.ok === false) {\r\n\t\t\t\tlet error: HttpError = new HttpError(parseInt(res.status.toString()), res.statusText);\r\n\t\t\t\treturn Promise.reject(error);\r\n\t\t\t} else {\r\n\t\t\t\treturn <Response>json;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tthrow err;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate getSignature(payload: any, timestamp: ITimestamp): string {\r\n\t\tlet signature: string;\r\n\t\tsignature = crypto.createHmac('sha256', this.options.auth.secret).update(BotHttp.makeQueryString(Object.assign(payload, timestamp)).substr(1)).digest('hex');\r\n\t\treturn signature;\r\n\t}\r\n\r\n\tprivate async getTimestamp(): Promise<ITimestamp> {\r\n\t\tlet time: ITimestamp = <ITimestamp>{};\r\n\t\tif (this.options.useServerTime) {\r\n\t\t\ttry {\r\n\t\t\t\ttime.timestamp = await this.timestamp();\r\n\t\t\t\treturn time;\r\n\t\t\t} catch (err) {\r\n\t\t\t\tthrow err;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\ttime.timestamp = Date.now();\r\n\t\t\treturn time;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static makeQueryString(params: any): string {\r\n\t\tlet result: string;\r\n\t\tlet keys: string[];\r\n\t\tkeys = Object.keys(params).filter(k => params[k]);\r\n\t\tif (!params) {\r\n\t\t\tresult = \"\";\r\n\t\t} else {\r\n\t\t\tresult = `?${keys.map(k => `${encodeURIComponent(k)}=${encodeURIComponent(params[k])}`).join('&')}`;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic async ping(): Promise<boolean> {\r\n\t\ttry {\r\n\t\t\tlet options: ICallOpts = <ICallOpts>{};\r\n\t\t\toptions.method = \"GET\";\r\n\t\t\toptions.json = true;\r\n\t\t\toptions.noExtra = false;\r\n\t\t\toptions.noData = true;\r\n\r\n\t\t\tlet config: CallOptions = new CallOptions(options, this.options.auth.key);\r\n\t\t\tawait this.call('/v1/ping', config);\r\n\t\t\treturn true;\r\n\t\t} catch (err) {\r\n\t\t\tthrow err;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic async privateCall(path: string, callOptions: CallOptions, payload?: IWithdrawHistoryReq | IDepositHistoryReq | IDepositAddressReq | QueryOrder | NewOrder | Signed | CancelOrder | OpenOrder | DataStream | AccountInfoOptions): Promise<any> {\r\n\t\tlet result: any;\r\n\t\tlet signature: string;\r\n\t\tif (!payload) {\r\n\t\t\tpayload = new Signed();\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tlet tStamp: ITimestamp = await this.getTimestamp();\r\n\t\t\tcallOptions.headers = new ApiHeader(this.options.auth.key);\r\n\t\t\tsignature = await this.getSignature(payload, tStamp);\r\n\r\n\t\t\tif (!callOptions.noExtra) {\r\n\t\t\t\tpayload.timestamp = tStamp.timestamp;\r\n\t\t\t\tpayload.signature = signature;\r\n\t\t\t} else {\r\n\t\t\t\tdelete payload.timestamp;\r\n\t\t\t}\r\n\t\t\tresult = await this.fetch(path, callOptions, payload);\r\n\t\t\treturn result;\r\n\t\t} catch (err) {\r\n\t\t\tthrow err;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate async time(): Promise<IServerTime> {\r\n\t\ttry {\r\n\t\t\tlet server: IServerTime;\r\n\t\t\tlet options: ICallOpts = <ICallOpts>{};\r\n\t\t\toptions.method = \"GET\";\r\n\t\t\toptions.json = true;\r\n\t\t\toptions.noExtra = false;\r\n\t\t\toptions.noData = true;\r\n\t\t\tlet opts: CallOptions = new CallOptions(options, this.options.auth.key);\r\n\t\t\tserver = await this.call('/v1/time', opts);\r\n\t\t\treturn server;\r\n\t\t} catch (err) {\r\n\t\t\tthrow new Error(`Error in server time sync. Message: ${err}`);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic async timestamp(): Promise<number> {\r\n\t\ttry {\r\n\t\t\tlet time: IServerTime = await this.time();\r\n\t\t\treturn time.serverTime;\r\n\t\t} catch (err) {\r\n\t\t\tthrow new Error(`Error in server time sync. Message: ${err}`);\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor(options: IBinanceOptions) {\r\n\t\tthis.options = options;\r\n\t}\r\n}\r\n"]}