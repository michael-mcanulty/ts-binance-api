{"version":3,"file":"Market.js","sourceRoot":"","sources":["../../src/Market/Market.ts"],"names":[],"mappings":"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","sourcesContent":["import {IMarket} from \"./interfaces/IMarket\";\r\nimport {Logger} from \"../Logger/Logger\";\r\nimport {ILimits} from \"../ExchangeInfo/Interfaces/ILimits\";\r\nimport {ISymbol} from \"../ExchangeInfo/Interfaces/ISymbol\";\r\nimport {IPriceFilter} from \"../ExchangeInfo/Interfaces/IPriceFilter\";\r\nimport {ILotSize} from \"../ExchangeInfo/Interfaces/ILotSize\";\r\nimport {IMinNotional} from \"../ExchangeInfo/Interfaces/IMinNotional\";\r\nimport {ILimitsBinance} from \"../ExchangeInfo/Interfaces/ILimitsBinance\";\r\n\r\nexport class Market {\r\n\t_id?: string;\r\n\tbaseAsset: string;\r\n\tdate?: Date;\r\n\tlimits: ILimits;\r\n\tquoteAsset: string;\r\n\tsymbol: string;\r\n\r\n\tpublic static fromDBFormat(imarkets: IMarket[]) {\r\n\t\tif (imarkets && imarkets.length > 0) {\r\n\t\t\tlet markets: Market[] = [];\r\n\t\t\timarkets.forEach(im => {\r\n\t\t\t\tlet market = new Market(im.symbol, im.baseAsset, im.quoteAsset, im.limits, im._id, im.date);\r\n\t\t\t\tmarkets.push(market);\r\n\t\t\t});\r\n\t\t\treturn markets;\r\n\t\t} else {\r\n\t\t\tLogger.error(\"Error retrieving the market\");\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static toDBFormat(markets: Market[]) {\r\n\t\tif (markets && markets.length > 0) {\r\n\t\t\tlet imarkets: IMarket[] = [];\r\n\t\t\tmarkets.forEach(m => {\r\n\t\t\t\tlet market = <IMarket>{};\r\n\t\t\t\tmarket._id = m._id;\r\n\t\t\t\tmarket.symbol = m.symbol;\r\n\t\t\t\tmarket.date = m.date;\r\n\t\t\t\tmarket.baseAsset = m.baseAsset;\r\n\t\t\t\tmarket.quoteAsset = m.quoteAsset;\r\n\t\t\t\tmarket.limits = m.limits;\r\n\t\t\t\timarkets.push(market);\r\n\t\t\t});\r\n\t\t\treturn imarkets;\r\n\t\t} else {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static GetLimitsFromBinanceSymbol(symbol: ISymbol): ILimits {\r\n\t\tlet binFilters: (IPriceFilter | ILotSize | IMinNotional)[] = symbol.filters;\r\n\t\tlet mergedObj: ILimitsBinance = Object.assign.apply(Object, binFilters);\r\n\t\tlet limits: ILimits = <ILimits>{};\r\n\t\tlimits.maxPrice = parseFloat(mergedObj.maxPrice);\r\n\t\tlimits.minPrice = parseFloat(mergedObj.minPrice);\r\n\t\tlimits.maxQty = parseFloat(mergedObj.maxQty);\r\n\t\tlimits.minQty = parseFloat(mergedObj.minQty);\r\n\t\tlimits.minNotional = parseFloat(mergedObj.minNotional);\r\n\t\tlimits.stepSize = parseFloat(mergedObj.stepSize);\r\n\t\treturn limits;\r\n\t}\r\n\r\n\tconstructor(symbol: string, baseAsset: string, quoteAsset: string, limits: ILimits, id?: string, date?: Date) {\r\n\t\tthis.symbol = symbol;\r\n\t\tthis.baseAsset = baseAsset;\r\n\t\tthis.quoteAsset = quoteAsset;\r\n\t\tthis.limits = limits;\r\n\t\tif (id) this._id = id;\r\n\t\tif (date) {\r\n\t\t\tthis.date = date;\r\n\t\t} else {\r\n\t\t\tthis.date = new Date();\r\n\t\t}\r\n\t}\r\n}"]}