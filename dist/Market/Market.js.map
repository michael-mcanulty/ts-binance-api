{"version":3,"file":"Market.js","sourceRoot":"","sources":["../../src/Market/Market.ts"],"names":[],"mappings":";;AAOA;IAMQ,MAAM,CAAC,0BAA0B,CAAC,MAAe;QACvD,IAAI,UAAU,GAA+C,MAAM,CAAC,OAAO,CAAC;QAC5E,IAAI,SAAS,GAAmB,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;QACxE,IAAI,MAAM,GAAqB,EAAE,CAAC;QAClC,MAAM,CAAC,QAAQ,GAAG,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QACjD,MAAM,CAAC,QAAQ,GAAG,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QACjD,MAAM,CAAC,MAAM,GAAG,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAC7C,MAAM,CAAC,MAAM,GAAG,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAC7C,MAAM,CAAC,WAAW,GAAG,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QACvD,MAAM,CAAC,QAAQ,GAAG,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QACjD,MAAM,CAAC,MAAM,CAAC;IACf,CAAC;IAED,YAAY,MAAc,EAAE,SAAiB,EAAE,UAAkB,EAAE,MAAe;QACjF,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACtB,CAAC;CACD;AAzBD,wBAyBC","sourcesContent":["import {ILimits} from \"../ExchangeInfo/Interfaces/ILimits\";\nimport {ISymbol} from \"../ExchangeInfo/Interfaces/ISymbol\";\nimport {IPriceFilter} from \"../ExchangeInfo/Interfaces/IPriceFilter\";\nimport {ILotSize} from \"../ExchangeInfo/Interfaces/ILotSize\";\nimport {IMinNotional} from \"../ExchangeInfo/Interfaces/IMinNotional\";\nimport {ILimitsBinance} from \"../ExchangeInfo/Interfaces/ILimitsBinance\";\n\nexport class Market {\n\tbaseAsset: string;\n\tlimits: ILimits;\n\tquoteAsset: string;\n\tsymbol: string;\n\n\tpublic static GetLimitsFromBinanceSymbol(symbol: ISymbol): ILimits {\n\t\tlet binFilters: (IPriceFilter | ILotSize | IMinNotional)[] = symbol.filters;\n\t\tlet mergedObj: ILimitsBinance = Object.assign.apply(Object, binFilters);\n\t\tlet limits: ILimits = <ILimits>{};\n\t\tlimits.maxPrice = parseFloat(mergedObj.maxPrice);\n\t\tlimits.minPrice = parseFloat(mergedObj.minPrice);\n\t\tlimits.maxQty = parseFloat(mergedObj.maxQty);\n\t\tlimits.minQty = parseFloat(mergedObj.minQty);\n\t\tlimits.minNotional = parseFloat(mergedObj.minNotional);\n\t\tlimits.stepSize = parseFloat(mergedObj.stepSize);\n\t\treturn limits;\n\t}\n\n\tconstructor(symbol: string, baseAsset: string, quoteAsset: string, limits: ILimits) {\n\t\tthis.symbol = symbol;\n\t\tthis.baseAsset = baseAsset;\n\t\tthis.quoteAsset = quoteAsset;\n\t\tthis.limits = limits;\n\t}\n}"]}