{"version":3,"file":"Candle.js","sourceRoot":"","sources":["../../src/ExchangeInfo/Candle.ts"],"names":[],"mappings":";;AAAA,6CAAwC;AAExC,yCAAwC;AAExC;IAWC,MAAM,CAAC,cAAc,CAAC,OAAgB,EAAE,MAAc,EAAE,QAAgB;QACvE,IAAI,WAAW,GAAiB,uBAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC7D,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAA,EAAE,CAAA,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC;IACzD,CAAC;IAED,MAAM,CAAC,aAAa,CAAC,WAAoC;QACxD,IAAI,YAAY,GAAiB,IAAI,uBAAY,CAAC,WAAW,CAAC,CAAC;QAC/D,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;IACvC,CAAC;IAED,YAAY,UAAsB,EAAE,MAAe,EAAE,QAAiB;QACrE,IAAI,CAAC,QAAQ,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAC9C,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACxC,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACxC,IAAI,CAAC,GAAG,GAAG,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACtC,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC1C,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAC5C,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QAChD,EAAE,CAAC,CAAC,MAAM,IAAI,QAAQ,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC1B,CAAC;IACF,CAAC;CACD;AAlCD,wBAkCC","sourcesContent":["import {RestCandle} from \"./RestCandle\";\nimport {IStreamRawKlineResponse} from \"../ExchangeInfo/Interfaces/ICandleBinance\";\nimport {WSCandleResp} from \"./WSCandle\";\n\nexport class Candle {\n\tclose: number;\n\topenTime: Date;\n\thigh: number;\n\tinterval?: string;\n\tlow: number;\n\topen: number;\n\tsymbol?: string;\n\tvolume: number;\n\tcloseTime: Date;\n\n\tstatic fromRestStream(rawData: any[][], symbol: string, interval: string): Candle[] {\n\t\tlet restCandles: RestCandle[] = RestCandle.fromRest(rawData);\n\t\treturn restCandles.map(r=>r.toCandle(symbol, interval));\n\t}\n\n\tstatic fromWebsocket(klineStream: IStreamRawKlineResponse): Candle{\n\t\tlet wsCandleResp: WSCandleResp = new WSCandleResp(klineStream);\n\t\treturn wsCandleResp.candle.toCandle();\n\t}\n\n\tconstructor(restCandle: RestCandle, symbol?: string, interval?: string) {\n\t\tthis.openTime = new Date(restCandle.openTime);\n\t\tthis.open = parseFloat(restCandle.open);\n\t\tthis.high = parseFloat(restCandle.high);\n\t\tthis.low = parseFloat(restCandle.low);\n\t\tthis.close = parseFloat(restCandle.close);\n\t\tthis.volume = parseFloat(restCandle.volume);\n\t\tthis.closeTime = new Date(restCandle.closeTime);\n\t\tif (symbol || interval) {\n\t\t\tthis.symbol = symbol;\n\t\t\tthis.interval = interval;\n\t\t}\n\t}\n}\n"]}