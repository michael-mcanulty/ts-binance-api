{"version":3,"file":"BBLogger.js","sourceRoot":"","sources":["../../src/Logger/BBLogger.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from \"fs\";\r\nimport * as path from \"path\";\r\n\r\nexport class BBLogger {\r\n\tpublic static lineLimit: number= 100;\r\n\tprivate static _INSTANCE: BBLogger;\r\n\tprivate static _base: string = path.dirname(process.cwd());\r\n\tprivate static _dirBase: string = `${BBLogger._base}/${BBLogger._getAppName()}/logs`;\r\n\tprivate static _getFilename(name: string){\r\n\t\treturn `${BBLogger._dirBase}/${name}.txt`;\r\n\t}\r\n\tpublic static get Instance() {\r\n\t\treturn this._INSTANCE || (this._INSTANCE = new this());\r\n\t}\r\n\r\n\tprivate static _getAppName(): string {\r\n\t\tlet appName: string = \"\";\r\n\t\tlet pathArr: string[] = process.cwd().split(path.sep);\r\n\t\tlet idxContains: number = BBLogger.indexContains(pathArr, \"bb-\");\r\n\t\tif (idxContains >= 0) {\r\n\t\t\tappName = pathArr[idxContains];\r\n\t\t}\r\n\t\treturn appName;\r\n\t}\r\n\r\n\tprivate static _getMsg(msg: string): string {\r\n\t\treturn `${BBLogger.utcToPST(new Date()).toISOString()} at ${BBLogger._getAppName()} \\n ${msg} \\r\\n`;\r\n\t}\r\n\r\n\tprivate static limitedLines(filename: string): Promise<void>{\r\n\t\treturn new Promise((resolve, reject)=> {\r\n\t\t\ttry {\r\n\t\t\t\tfs.readFile(filename, 'utf8', (err, data)=>{\r\n\t\t\t\t\tlet lines: string[] = data.split('\\n');\r\n\t\t\t\t\tif(lines.length > BBLogger.lineLimit){\r\n\t\t\t\t\t\tlet diff: number = BBLogger.lineLimit - lines.length;\r\n\t\t\t\t\t\tfs.writeFile(filename, lines.slice(diff, lines.length -1).join('\\n'), err=>{\r\n\t\t\t\t\t\t\tif (err){\r\n\t\t\t\t\t\t\t\tthrow err;\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t}\r\n\r\n\tprivate static _writeToFile(filename: string, msg: string): Promise<void>{\r\n\t\treturn new Promise(async (resolve, reject)=>{\r\n\t\t\ttry{\r\n\t\t\t\tawait BBLogger.limitedLines(filename);\r\n\t\t\t\tfs.appendFile(filename, BBLogger._getMsg(msg), err=>{\r\n\t\t\t\t\tif (err){\r\n\t\t\t\t\t\tthrow err;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}catch(err){\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tpublic static info(msg: string): Promise<void>{\r\n\t\treturn new Promise(async (resolve, reject)=> {\r\n\t\t\ttry{\r\n\t\t\t\tlet name: string = BBLogger.info.name;\r\n\t\t\t\tlet filename: string = BBLogger._getFilename(name);\r\n\t\t\t\tawait BBLogger._writeToFile(filename, BBLogger._getMsg(msg));\r\n\t\t\t\tresolve();\r\n\t\t\t}catch(err){\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic static indexContains(arr: string[], strContains: string): number {\r\n\t\tlet idx: number = -1;\r\n\t\tlet hasSome: boolean = arr.some((item: string, index: number) => {\r\n\t\t\tidx = index;\r\n\t\t\treturn (item.indexOf(strContains) >= 0);\r\n\t\t});\r\n\t\treturn idx;\r\n\t}\r\n\r\n\tpublic static error(msg: string): Promise<void>{\r\n\t\treturn new Promise(async (resolve, reject)=> {\r\n\t\t\ttry{\r\n\t\t\t\tlet name: string = BBLogger.error.name;\r\n\t\t\t\tlet filename: string = BBLogger._getFilename(name);\r\n\t\t\t\tawait BBLogger._writeToFile(filename, BBLogger._getMsg(msg));\r\n\t\t\t\tresolve();\r\n\t\t\t}catch(err){\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tprivate static utcToPST(date?: Date) {\r\n\t\tlet _date: Date = (date) ? date : new Date();\r\n\t\treturn new Date(_date.getTime() - new Date().getTimezoneOffset() * 60000);\r\n\t}\r\n\r\n\tpublic static warning(msg: string): Promise<void>{\r\n\t\treturn new Promise(async (resolve, reject)=> {\r\n\t\t\ttry{\r\n\t\t\t\tlet name: string = BBLogger.warning.name;\r\n\t\t\t\tlet filename: string = BBLogger._getFilename(name);\r\n\t\t\t\tawait BBLogger._writeToFile(filename, BBLogger._getMsg(msg));\r\n\t\t\t\tresolve();\r\n\t\t\t}catch(err){\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tprivate constructor() {\r\n\t}\r\n}"]}