{
  "version": 3,
  "file": "Balance.js",
  "sourceRoot": "",
  "sources": [
    "../../src/Transaction/Balance.ts"
  ],
  "names": [],
  "mappings": ";;AAEA;IAMC,YAAY,KAAa,EAAE,SAAiB,EAAE,OAAe,EAAE,IAAW;QACzE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACV,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAClB,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QACxB,CAAC;QACD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC;IACpC,CAAC;CACD;AAhBD,0BAgBC",
  "sourcesContent": [
    "import {IOutboundAccountInfo} from \"../Account/Interfaces/IOutboundAccountInfo\";\n\nexport class Balance {\n\tasset: string;\n\tavailable: number;\n\tdate: Date;\n\tonOrder: number;\n\n\tconstructor(asset: string, available: string, onOrder: string, date?: Date) {\n\t\tif (date) {\n\t\t\tthis.date = date;\n\t\t} else {\n\t\t\tthis.date = new Date();\n\t\t}\n\t\tthis.asset = asset;\n\t\tthis.available = parseFloat(available);\n\t\tthis.onOrder = parseFloat(onOrder);\n\t}\n}"
  ]
}