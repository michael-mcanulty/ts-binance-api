{"version":3,"file":"OpenOrder.js","sourceRoot":"","sources":["../../src/Transaction/OpenOrder.ts"],"names":[],"mappings":"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","sourcesContent":["import {BaseOrder} from \"./BaseOrder\";\r\nimport {IOpenOrder} from \"./Interfaces/IOpenOrder\";\r\nimport {EOrderSide, EOrderStatus, EOrderType, ETimeInForce} from \"./Interfaces/EOrderEnums\";\r\nimport {IBaseOrder} from \"../Transaction/Interfaces/IBaseOrder\";\r\nimport {INewOrder} from \"./Interfaces/INewOrder\";\r\nimport {NewOrder} from \"./NewOrder\";\r\n\r\nexport class OpenOrder extends BaseOrder {\r\n\tclientOrderId: string;\r\n\texecutedQty: number;\r\n\ticebergQty: number;\r\n\tisWorking: boolean;\r\n\torderId: number;\r\n\torigQty: number;\r\n\tstatus: string;\r\n\tstopPrice: number;\r\n\ttime: number;\r\n\r\n\tpublic toObjLiteral(): IOpenOrder{\r\n\t\tlet self: OpenOrder = this;\r\n\t\tlet order: IOpenOrder = <IOpenOrder>{};\r\n\t\tfor (let prop in self){\r\n\t\t\tif (self[prop] && typeof self[prop] !== \"function\") {\r\n\t\t\t\torder[prop] = self[prop];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn order;\r\n\t}\r\n\r\n\tpublic toBinance(): IOpenOrder {\r\n\t\tlet self: OpenOrder = this;\r\n\t\tlet binance: IOpenOrder = <IOpenOrder>{};\r\n\t\tbinance.clientOrderId = self.clientOrderId;\r\n\t\tbinance.executedQty = (self.executedQty) ? self.executedQty.toString() : undefined;\r\n\t\tbinance.icebergQty = (self.icebergQty) ? self.icebergQty.toString() : undefined;\r\n\t\tbinance.isWorking = self.isWorking;\r\n\t\tbinance.orderId = self.orderId;\r\n\t\tbinance.origQty = (self.origQty) ? self.origQty.toString() : undefined;\r\n\t\tbinance.price = (self.price) ? self.price.toString() : undefined;\r\n\t\tbinance.side = EOrderSide[self.side];\r\n\t\tbinance.status = EOrderStatus[self.status];\r\n\t\tbinance.stopPrice = (self.stopPrice) ? self.stopPrice.toString() : undefined;\r\n\t\tbinance.symbol = self.symbol;\r\n\t\tbinance.timeInForce = ETimeInForce[self.timeInForce];\r\n\t\tbinance.time = self.time;\r\n\t\tbinance.type = EOrderType[self.type];\r\n\t\treturn binance;\r\n\t}\r\n\r\n\tconstructor(openOrder: IOpenOrder) {\r\n\t\tlet base: IBaseOrder = <IBaseOrder>{};\r\n\t\tbase.cummulativeQuoteQty = openOrder.cummulativeQuoteQty;\r\n\t\tbase.type = openOrder.type;\r\n\t\tbase.price = openOrder.price;\r\n\t\tbase.side = openOrder.side;\r\n\t\tbase.symbol = openOrder.symbol;\r\n\t\tbase.timeInForce = openOrder.timeInForce;\r\n\t\tsuper(base);\r\n\t\tthis.clientOrderId = openOrder.clientOrderId;\r\n\t\tthis.executedQty = parseFloat(openOrder.executedQty);\r\n\t\tthis.orderId = openOrder.orderId;\r\n\t\tthis.status = status;\r\n\t\tthis.icebergQty = parseFloat(openOrder.icebergQty);\r\n\t\tthis.isWorking = openOrder.isWorking;\r\n\t\tthis.stopPrice = parseFloat(openOrder.stopPrice);\r\n\t\tthis.symbol = openOrder.symbol;\r\n\t\tthis.time = openOrder.time;\r\n\t}\r\n}\r\n"]}