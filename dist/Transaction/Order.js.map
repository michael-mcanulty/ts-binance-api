{"version":3,"file":"Order.js","sourceRoot":"","sources":["../../src/Transaction/Order.ts"],"names":[],"mappings":";;AACA,2CAAsC;AAGtC,WAAmB,SAAQ,qBAAS;IAcnC,MAAM,CAAC,SAAS,CAAC,KAAY;QAC5B,IAAI,MAAM,GAAmB,EAAE,CAAC;QAChC,MAAM,CAAC,aAAa,GAAG,KAAK,CAAC,aAAa,CAAC;QAC3C,MAAM,CAAC,WAAW,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;QACpF,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;QAC/B,MAAM,CAAC,OAAO,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;QACxE,MAAM,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;QAClE,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QACzB,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAC7B,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAC7B,MAAM,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;QACvC,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QACzB,MAAM,CAAC,MAAM,CAAC;IACf,CAAC;IAED,YAAY,KAAa;QACxB,KAAK,CAAC,KAAK,CAAC,CAAC;QACb,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QACjD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACzC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAC3B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,aAAa,CAAC;QACzC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC;IACxC,CAAC;CACD;AAtCD,sBAsCC","sourcesContent":["import {IOrder} from \"./Interfaces/IOrder\";\r\nimport {BaseOrder} from \"./BaseOrder\";\r\nimport {Fill} from \"./Fill\";\r\n\r\nexport class Order extends BaseOrder {\r\n\tclientOrderId: string;\r\n\texecutedQty: number;\r\n\torderId: number;\r\n\torigQty: number;\r\n\tstatus: string;\r\n\ttransactTime: number;\r\n\tprice: string;\r\n\tside: string;\r\n\tsymbol: string;\r\n\ttimeInForce: string;\r\n\ttype: string;\r\n\tfills?: Fill[];\r\n\r\n\tstatic toBinance(order: Order): IOrder {\r\n\t\tlet nOrder: IOrder = <IOrder>{};\r\n\t\tnOrder.clientOrderId = order.clientOrderId;\r\n\t\tnOrder.executedQty = (order.executedQty) ? order.executedQty.toString() : undefined;\r\n\t\tnOrder.orderId = order.orderId;\r\n\t\tnOrder.origQty = (order.origQty) ? order.origQty.toString() : undefined;\r\n\t\tnOrder.price = (order.price) ? order.price.toString() : undefined;\r\n\t\tnOrder.side = order.side;\r\n\t\tnOrder.status = order.status;\r\n\t\tnOrder.symbol = order.symbol;\r\n\t\tnOrder.timeInForce = order.timeInForce;\r\n\t\tnOrder.type = order.type;\r\n\t\treturn nOrder;\r\n\t}\r\n\r\n\tconstructor(order: IOrder) {\r\n\t\tsuper(order);\r\n\t\tthis.executedQty = parseFloat(order.executedQty);\r\n\t\tthis.orderId = order.orderId;\r\n\t\tthis.origQty = parseFloat(order.origQty);\r\n\t\tthis.status = order.status;\r\n\t\tthis.clientOrderId = order.clientOrderId;\r\n\t\tthis.transactTime = order.transactTime;\r\n\t}\r\n}"]}