{
  "version": 3,
  "file": "NewOrder.js",
  "sourceRoot": "",
  "sources": [
    "../../src/Transaction/NewOrder.ts"
  ],
  "names": [],
  "mappings": ";;AAAA,0DAAiG;AACjG,2CAAsC;AAGtC,cAAsB,SAAQ,qBAAS;IAStC,MAAM,CAAC,aAAa,CAAC,QAAmB;QACvC,IAAI,OAAO,GAAyB,EAAE,CAAC;QACvC,OAAO,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;QACzC,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;QAC/B,OAAO,CAAC,IAAI,GAAG,wBAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACzC,OAAO,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;QACvC,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;QACjC,OAAO,CAAC,WAAW,GAAG,0BAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QACzD,OAAO,CAAC,IAAI,GAAG,wBAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACzC,MAAM,CAAC,OAAO,CAAC;IAChB,CAAC;IAED,YAAY,MAAc,EAAE,QAAgB,EAAE,IAAY,EAAE,IAAY,EAAE,KAAc,EAClF,UAAmB,EAAE,WAAoB,EAAE,SAAkB,EAAE,UAAmB,EAAE,gBAAyB,EAAE,gBAAyB;QAC7I,KAAK,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,gBAAgB,GAAG,+BAAiB,CAAC,gBAAgB,CAAC,IAAI,+BAAiB,CAAC,+BAAiB,CAAC,MAAM,CAAC,CAAC;QAC3G,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;QACzC,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC;QACvC,IAAI,CAAC,UAAU,GAAG,UAAU,IAAI,IAAI,CAAC;IACtC,CAAC;CACD;AA/BD,4BA+BC",
  "sourcesContent": [
    "import {ENewOrderRespType, EOrderSide, EOrderType, ETimeInForce} from \"./Interfaces/EOrderEnums\";\nimport {BaseOrder} from \"./BaseOrder\";\nimport {INewOrder} from \"./Interfaces/INewOrder\";\n\nexport class NewOrder extends BaseOrder {\n\n\ticebergQty?: number;\n\tnewClientOrderId?: string;\n\tnewOrderRespType?: string;\n\tquantity: number;\n\trecvWindow?: number;\n\tstopPrice?: number;\n\n\tstatic binanceFormat(newOrder: INewOrder): INewOrder {\n\t\tlet binance: INewOrder = <INewOrder>{};\n\t\tbinance.icebergQty = newOrder.icebergQty;\n\t\tbinance.price = newOrder.price;\n\t\tbinance.side = EOrderSide[newOrder.side];\n\t\tbinance.stopPrice = newOrder.stopPrice;\n\t\tbinance.symbol = newOrder.symbol;\n\t\tbinance.timeInForce = ETimeInForce[newOrder.timeInForce];\n\t\tbinance.type = EOrderType[newOrder.type];\n\t\treturn binance;\n\t}\n\n\tconstructor(symbol: string, quantity: number, side: string, type: string, price?: string,\n\t\t\t\t\t\t\ticebergQty?: string, timeInForce?: string, stopPrice?: string, recvWindow?: number, newClientOrderId?: string, newOrderRespType?: string) {\n\t\tsuper(price, side, symbol, type);\n\t\tthis.quantity = quantity;\n\t\tthis.icebergQty = parseFloat(icebergQty);\n\t\tthis.newOrderRespType = ENewOrderRespType[newOrderRespType] || ENewOrderRespType[ENewOrderRespType.RESULT];\n\t\tthis.newClientOrderId = newClientOrderId;\n\t\tthis.stopPrice = parseFloat(stopPrice);\n\t\tthis.recvWindow = recvWindow || 5000;\n\t}\n}"
  ]
}