"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const BaseOrder_1=require("./BaseOrder");class OpenOrder extends BaseOrder_1.BaseOrder{toObjLiteral(){let t=this,e={};for(let i in t)t[i]&&"function"!=typeof t[i]&&(e[i]=t[i]);return e}toBinance(){let t={};return t.clientOrderId=this.clientOrderId,t.executedQty=this.executedQty?this.executedQty.toString():void 0,t.icebergQty=this.icebergQty?this.icebergQty.toString():void 0,t.isWorking=this.isWorking,t.orderId=this.orderId,t.origQty=this.origQty?this.origQty.toString():void 0,t.price=this.price?this.price.toString():void 0,t.side=this.side,t.status=this.status,t.stopPrice=this.stopPrice?this.stopPrice.toString():void 0,t.symbol=this.symbol,t.timeInForce=this.timeInForce,t.time=this.time,t.type=this.type,t}constructor(t){let e={};e.cummulativeQuoteQty=t.cummulativeQuoteQty,e.type=t.type,e.price=t.price,e.side=t.side,e.symbol=t.symbol,e.timeInForce=t.timeInForce,super(e),this.clientOrderId=t.clientOrderId,this.executedQty=parseFloat(t.executedQty),this.orderId=t.orderId,this.status=t.status,this.icebergQty=parseFloat(t.icebergQty),this.isWorking=t.isWorking,this.stopPrice=parseFloat(t.stopPrice),this.symbol=t.symbol,this.time=t.time}}exports.OpenOrder=OpenOrder;