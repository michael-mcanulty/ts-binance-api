{"version":3,"file":"FullOrderResponse.js","sourceRoot":"","sources":["../../src/Transaction/FullOrderResponse.ts"],"names":[],"mappings":";;AACA,0DAA4F;AAE5F,2CAAsC;AAGtC,uBAA+B,SAAQ,qBAAS;IAc/C,MAAM,CAAC,SAAS,CAAC,KAAwB;QACxC,IAAI,OAAO,GAAmB,EAAE,CAAC;QACjC,OAAO,CAAC,aAAa,GAAG,KAAK,CAAC,aAAa,CAAC;QAC5C,OAAO,CAAC,WAAW,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;QACrF,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;QAChC,OAAO,CAAC,OAAO,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;QACzE,OAAO,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;QACnE,OAAO,CAAC,IAAI,GAAG,wBAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACtC,OAAO,CAAC,MAAM,GAAG,0BAAY,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAC5C,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAC9B,OAAO,CAAC,WAAW,GAAG,0BAAY,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QACtD,OAAO,CAAC,IAAI,GAAG,wBAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACtC,MAAM,CAAC,OAAO,CAAC;IAChB,CAAC;IAED,YAAY,MAAc,EAAE,KAAa,EAAE,IAAY,EAAE,WAAmB,EAAE,OAAe,EACvF,OAAe,EAAE,MAAc,EAAE,WAAmB,EAAE,IAAY,EAAE,aAAqB,EAAE,YAAoB;QACpH,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,KAAK,CAAC,EAAE,WAAW,CAAC,CAAC;QAC1D,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC,CAAC;QAC3C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC;QACnC,IAAI,CAAC,MAAM,GAAG,0BAAY,CAAC,MAAM,CAAC,CAAC;QACnC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IAClC,CAAC;CACD;AAvCD,8CAuCC","sourcesContent":["\nimport {EOrderSide, EOrderStatus, EOrderType, ETimeInForce} from \"./Interfaces/EOrderEnums\";\nimport {IOrder} from \"./Interfaces/IOrder\";\nimport {BaseOrder} from \"./BaseOrder\";\nimport {Fill} from \"./Fill\";\n\nexport class FullOrderResponse extends BaseOrder {\n\tclientOrderId: string;\n\texecutedQty: number;\n\torderId: number;\n\torigQty: number;\n\tstatus: string;\n\ttransactTime: number;\n\tprice: number;\n\tside: string;\n\tsymbol: string;\n\ttimeInForce: string;\n\ttype: string;\n\tfills?: Fill[];\n\n\tstatic toBinance(order: FullOrderResponse): IOrder {\n\t\tlet binance: IOrder = <IOrder>{};\n\t\tbinance.clientOrderId = order.clientOrderId;\n\t\tbinance.executedQty = (order.executedQty) ? order.executedQty.toString() : undefined;\n\t\tbinance.orderId = order.orderId;\n\t\tbinance.origQty = (order.origQty) ? order.origQty.toString() : undefined;\n\t\tbinance.price = (order.price) ? order.price.toString() : undefined;\n\t\tbinance.side = EOrderSide[order.side];\n\t\tbinance.status = EOrderStatus[order.status];\n\t\tbinance.symbol = order.symbol;\n\t\tbinance.timeInForce = ETimeInForce[order.timeInForce];\n\t\tbinance.type = EOrderType[order.type];\n\t\treturn binance;\n\t}\n\n\tconstructor(symbol: string, price: string, side: string, executedQty: string, orderId: number,\n\t\t\t\t\t\t\torigQty: string, status: string, timeInForce: string, type: string, clientOrderId: string, transactTime: number) {\n\t\tsuper(side, symbol, type, parseFloat(price), timeInForce);\n\t\tthis.executedQty = parseFloat(executedQty);\n\t\tthis.orderId = orderId;\n\t\tthis.origQty = parseFloat(origQty);\n\t\tthis.status = EOrderStatus[status];\n\t\tthis.clientOrderId = clientOrderId;\n\t\tthis.transactTime = transactTime;\n\t}\n}"]}