{"version":3,"file":"Walk.js","sourceRoot":"","sources":["../../src/Minify/Walk.ts"],"names":[],"mappings":"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","sourcesContent":["import {IOptions} from \"./Interfaces/IOptions\";\r\nimport * as fs from \"fs\";\r\nimport {Stats} from \"fs\";\r\nimport * as path from \"path\";\r\nimport * as MatcherCollection from 'matcher-collection';\r\nimport * as ensurePosix from 'ensure-posix-path';\r\nimport {Options} from \"./Options\";\r\nimport {Entry} from \"./Entry\";\r\n\r\n\r\nexport class Walk {\r\n\tpublic baseDir: string;\r\n\tpublic options: Options;\r\n\r\n\tprivate _fullpath(relativePath: string): string {\r\n\t\treturn `${this.baseDir}/${relativePath}`;\r\n\t}\r\n\r\n\tprivate _getStat(path): Stats {\r\n\t\tlet stat: Stats;\r\n\r\n\t\ttry {\r\n\t\t\tstat = fs.statSync(path);\r\n\t\t} catch (error) {\r\n\t\t\tif (error.code !== 'ENOENT') {\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn stat;\r\n\t}\r\n\r\n\tprivate _handleOptions(_options?: IOptions): Options {\r\n\t\tlet options: Options;\r\n\t\tif (Array.isArray(_options)) {\r\n\t\t\toptions = new Options();\r\n\t\t\toptions.globs = _options;\r\n\t\t} else if (_options) {\r\n\t\t\toptions = Options.toOptions(_options);\r\n\t\t}\r\n\t\treturn options;\r\n\t}\r\n\r\n\tprivate _handleRelativePath(_relativePath: string) {\r\n\t\tif (_relativePath == null) {\r\n\t\t\treturn '';\r\n\t\t} else if (_relativePath.slice(-1) !== '/') {\r\n\t\t\treturn _relativePath + '/';\r\n\t\t} else {\r\n\t\t\treturn _relativePath;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _walkSync(_relativePath?: string, _ensurePosix?: boolean, callback?: Function) {\r\n\t\tif (_ensurePosix) {\r\n\t\t\tthis.baseDir = ensurePosix(this.baseDir);\r\n\t\t}\r\n\t\tlet relativePath = this._handleRelativePath(_relativePath);\r\n\t\tlet globs = this.options.globs;\r\n\t\tlet ignorePatterns = this.options.ignore;\r\n\t\tlet globMatcher, ignoreMatcher;\r\n\t\tlet results = [];\r\n\r\n\t\tif (ignorePatterns) {\r\n\t\t\tignoreMatcher = new MatcherCollection(ignorePatterns);\r\n\t\t}\r\n\r\n\t\tif (globs) {\r\n\t\t\tglobMatcher = new MatcherCollection(globs);\r\n\t\t}\r\n\r\n\t\tif (globMatcher && !globMatcher.mayContain(relativePath)) {\r\n\t\t\treturn results;\r\n\t\t}\r\n\r\n\t\tlet names = fs.readdirSync(this._fullpath(relativePath));\r\n\t\tlet entries = names.map(name => {\r\n\t\t\tlet entryRelativePath = relativePath + name;\r\n\r\n\t\t\tif (ignoreMatcher && ignoreMatcher.match(entryRelativePath)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet fullPath = this._fullpath(entryRelativePath);\r\n\t\t\tlet stats = this._getStat(fullPath);\r\n\r\n\t\t\tif (stats && stats.isDirectory()) {\r\n\t\t\t\t//basePath: string, mode: number, mtime: number, relativePath: string, size: number\r\n\t\t\t\treturn new Entry(this.baseDir, stats.mode, stats.mtime.getTime(), entryRelativePath + '/', stats.size);\r\n\t\t\t} else {\r\n\t\t\t\treturn new Entry(this.baseDir, stats.mode, stats.mtime.getTime(), entryRelativePath, stats.size);\r\n\t\t\t}\r\n\t\t}).filter(Boolean);\r\n\r\n\t\tlet sortedEntries = entries.sort((a, b) => {\r\n\t\t\tlet aPath = a.relativePath;\r\n\t\t\tlet bPath = b.relativePath;\r\n\r\n\t\t\tif (aPath === bPath) {\r\n\t\t\t\treturn 0;\r\n\t\t\t} else if (aPath < bPath) {\r\n\t\t\t\treturn -1;\r\n\t\t\t} else {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tfor (let i = 0; i < sortedEntries.length; ++i) {\r\n\t\t\tlet entry: Entry = sortedEntries[i];\r\n\r\n\t\t\tif (entry.isDirectory()) {\r\n\t\t\t\tif (this.options.directories !== false && (!globMatcher || globMatcher.match(entry.relativePath))) {\r\n\t\t\t\t\tif (this.options.callback) {\r\n\t\t\t\t\t\tcallback(entry);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresults.push(entry);\r\n\t\t\t\t}\r\n\t\t\t\tresults = results.concat(this._walkSync(entry.relativePath));\r\n\t\t\t} else {\r\n\t\t\t\tif (!globMatcher || globMatcher.match(entry.relativePath)) {\r\n\t\t\t\t\tif (this.options.callback) {\r\n\t\t\t\t\t\tcallback(entry);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresults.push(entry);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn results;\r\n\t}\r\n\r\n\tpublic entries() {\r\n\t\treturn this._walkSync(null, true);\r\n\t};\r\n\r\n\tpublic sync(): string[]{\r\n\t\tlet options: Options = this.options;\r\n\t\tlet mapFunct;\r\n\t\tif (options.includeBasePath) {\r\n\t\t\tmapFunct = (entry: Entry): string => {\r\n\t\t\t\treturn entry.basePath.split(path.sep).join('/') + '/' + entry.relativePath;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tmapFunct = (entry: Entry): string => {\r\n\t\t\t\treturn entry.relativePath;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this._walkSync().map(mapFunct);\r\n\t}\r\n\r\n\tconstructor(baseDir: string, options?: IOptions) {\r\n\t\tthis.baseDir = baseDir;\r\n\t\tthis.options = this._handleOptions(options);\r\n\t}\r\n}"]}