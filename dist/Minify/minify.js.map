{"version":3,"file":"minify.js","sourceRoot":"","sources":["../../src/Minify/minify.ts"],"names":[],"mappings":";;AAAA,6BAA6B;AAC7B,yBAAyB;AACzB,iCAA4B;AAG5B,MAAa,MAAM;IAKX,MAAM,CAAC,OAAO;QACpB,IAAI,SAAiB,CAAC;QACtB,IAAI,GAAG,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC;QAC5C,IAAI,IAAI,GAAuB,EAAE,CAAC;QAClC,IAAI,IAAI,GAAW,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACtC,IAAI,IAAI,GAAa,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrC,IAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAC;YAC9B,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACtD;QACD,IAAI,QAAQ,GAAW,GAAG,IAAI,OAAO,CAAC;QACtC,IAAG,CAAC,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAC;YAC3B,IAAI,IAAI,GAAa,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACrC,IAAI,UAAU,GAAW,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;YACtD,IAAG,UAAU,IAAI,UAAU,KAAK,CAAC,CAAC,EAAC;gBAClC,IAAI,GAAG,GAAW,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACvD,IAAI,QAAQ,GAAW,GAAG,GAAG,OAAO,CAAC;gBACrC,IAAG,GAAG,IAAI,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAC;oBACjC,IAAI,GAAG,GAAG,CAAC;iBACX;aACD;SACD;QACD,MAAM,CAAC,QAAQ,GAAG,GAAG,IAAI,OAAO,CAAC;QACjC,SAAS,GAAG,GAAG,MAAM,CAAC,QAAQ,SAAS,CAAC;QACxC,IAAI,CAAC,MAAM,GAAG,CAAC,SAAS,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,CAAC,WAAW,CAAC,CAAC;QAC3B,MAAM,CAAC,KAAK,GAAG,IAAI,WAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QAC/C,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QACpC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAA,EAAE;YACxB,IAAG,CAAC,EAAC;gBACJ,GAAG,CAAC,eAAe,CAAC,sEAAsE,CAAC,EAAE,CAAC,CAAC;aAC/F;QACF,CAAC,CAAC,CAAC;IACJ,CAAC;CACD;AAtCD,wBAsCC","sourcesContent":["import * as path from 'path';\r\nimport * as fs from 'fs';\r\nimport {Walk} from './Walk';\r\nimport {IOptions} from './Interfaces/IOptions';\r\n\r\nexport class Minify{\r\n\tprivate static _baseDir: string;\r\n\tprivate static _walk: Walk;\r\n\tprivate static _paths: string[];\r\n\r\n\tpublic static execute(): void{\r\n\t\tlet minifyDir: string;\r\n\t\tlet cmd = require('child_process').execSync;\r\n\t\tlet opts: IOptions = <IOptions>{};\r\n\t\tlet base: string = path.resolve('./');\r\n\t\tlet dirs: string[] = base.split(\"/\");\r\n\t\tif(dirs.indexOf(\"dist\") !== -1){\r\n\t\t\tbase = dirs.slice(0, -dirs.indexOf(\"dist\")).join('/');\r\n\t\t}\r\n\t\tlet distTest: string = `${base}/dist`;\r\n\t\tif(!fs.existsSync(distTest)){\r\n\t\t\tlet dirs: string[] = base.split(\"/\");\r\n\t\t\tlet nodeModIdx: number = dirs.indexOf(\"node_modules\");\r\n\t\t\tif(nodeModIdx && nodeModIdx !== -1){\r\n\t\t\t\tlet dir: string = dirs.slice(0, -nodeModIdx).join('/');\r\n\t\t\t\tlet distTest: string = `${dir}/dist`;\r\n\t\t\t\tif(dir && fs.existsSync(distTest)){\r\n\t\t\t\t\tbase = dir;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tMinify._baseDir = `${base}/dist`;\r\n\t\tminifyDir = `${Minify._baseDir}/Minify`;\r\n\t\topts.ignore = [minifyDir];\r\n\t\topts.globs = [`*/**/*.js`];\r\n\t\tMinify._walk = new Walk(Minify._baseDir, opts);\r\n\t\tMinify._paths = Minify._walk.sync();\r\n\t\tMinify._paths.forEach(t=>{\r\n\t\t\tif(t){\r\n\t\t\t\tcmd(`terser dist/${t} --compress --mangle --keep-classnames --keep-fnames --output dist/${t}`);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n"]}