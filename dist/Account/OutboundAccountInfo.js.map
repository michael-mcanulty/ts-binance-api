{
  "version": 3,
  "file": "OutboundAccountInfo.js",
  "sourceRoot": "",
  "sources": [
    "../../src/Account/OutboundAccountInfo.ts"
  ],
  "names": [],
  "mappings": ";;AACA,iDAA4C;AAE5C;IAaQ,MAAM,CAAC,cAAc,CAAC,WAAoC;QAChE,IAAI,QAAQ,GAAwB,IAAI,mBAAmB,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EACpI,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC;QAC5E,MAAM,CAAC,QAAQ,CAAC;IACjB,CAAC;IAED,YAAY,QAAuB,EAAE,mBAA2B,EAAE,UAAmB,EAAE,QAAiB,EAClG,WAAoB,EAAE,SAAiB,EAAE,iBAAyB,EAClE,mBAA2B,EAAE,oBAA4B,EAAE,mBAA2B;QAC3F,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAgB,EAAE,EAAE;YACjD,MAAM,CAAC,IAAI,iBAAO,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;QAC/C,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;QAC3C,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;QAC/C,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;QACjD,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;IAChD,CAAC;CACD;AApCD,kDAoCC",
  "sourcesContent": [
    "import {IBalanceRaw, IOutboundAccountInfoRaw} from \"./Interfaces/IOutboundAccountInfoRaw\";\r\nimport {Balance} from \"../Balances/Balance\";\r\n\r\nexport class OutboundAccountInfo{\r\n\tbalances: Balance[];\r\n\tbuyerCommissionRate: number;\r\n\tcanDeposit: boolean;\r\n\tcanTrade: boolean;\r\n\tcanWithdraw: boolean;\r\n\teventTime: number;\r\n\teventType: string;\r\n\tlastAccountUpdate: number;\r\n\tmakerCommissionRate: number;\r\n\tsellerCommissionRate: number;\r\n\ttakerCommissionRate: number;\r\n\r\n\tpublic static fromBinanceApi(iOutInfoRaw: IOutboundAccountInfoRaw): OutboundAccountInfo {\r\n\t\tlet outbound: OutboundAccountInfo = new OutboundAccountInfo(iOutInfoRaw.B, iOutInfoRaw.b, iOutInfoRaw.D, iOutInfoRaw.T, iOutInfoRaw.W,\r\n\t\t\tiOutInfoRaw.E, iOutInfoRaw.u, iOutInfoRaw.m, iOutInfoRaw.s, iOutInfoRaw.t);\r\n\t\treturn outbound;\r\n\t}\r\n\r\n\tconstructor(balances: IBalanceRaw[], buyerCommissionRate: number, canDeposit: boolean, canTrade: boolean,\r\n\t\t\t\t\t\t\tcanWithdraw: boolean, eventTime: number, lastAccountUpdate: number,\r\n\t\t\t\t\t\t\tmakerCommissionRate: number, sellerCommissionRate: number, takerCommissionRate: number) {\r\n\t\tthis.balances = balances.map((bal: IBalanceRaw) => {\r\n\t\t\treturn new Balance(bal.a, bal.f, bal.l);\r\n\t\t});\r\n\t\tthis.buyerCommissionRate = buyerCommissionRate;\r\n\t\tthis.canDeposit = canDeposit;\r\n\t\tthis.canTrade = canTrade;\r\n\t\tthis.canWithdraw = canWithdraw;\r\n\t\tthis.eventType = \"account\";\r\n\t\tthis.eventTime = eventTime;\r\n\t\tthis.lastAccountUpdate = lastAccountUpdate;\r\n\t\tthis.makerCommissionRate = makerCommissionRate;\r\n\t\tthis.sellerCommissionRate = sellerCommissionRate;\r\n\t\tthis.takerCommissionRate = takerCommissionRate;\r\n\t}\r\n}"
  ]
}