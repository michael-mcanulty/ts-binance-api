{
  "version": 3,
  "file": "ExecutionReport.js",
  "sourceRoot": "",
  "sources": [
    "../../src/Account/ExecutionReport.ts"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "import {IExecutionReport} from \"./Interfaces/IExecutionReport\";\nimport {\n\tEExecutionType,\n\tEOrderSide,\n\tEOrderStatus,\n\tEOrderType,\n\tETimeInForce\n} from \"../Transaction/Interfaces/EOrderEnums\";\nimport {IExecutionReportRaw} from \"./Interfaces/IExecutionReportRaw\";\n\nexport class ExecutionReport implements IExecutionReport {\n\tcommission: number;\n\tcommissionAsset: string;\n\texecutionType: string;\n\ticebergQuantity: number;\n\tlastTradeQuantity: number;\n\torderStatus: string;\n\tisBuyerMaker: boolean;\n\tisOrderWorking: boolean;\n\torderType: string;\n\tnewClientOrderId: string;\n\torderId: number;\n\torderRejectReason: string;\n\tprice: number;\n\torderTime: number;\n\tpriceLastTrade: number;\n\toriginalClientOrderId: string;\n\tquantity: number;\n\tside: string;\n\tstopPrice: number;\n\ttimeInForce: string;\n\ttotalTradeQuantity: number;\n\tsymbol: string;\n\teventTime: number;\n\teventType: string;\n\ttradeId: number;\n\n\tpublic static fromBinanceApi(iExecReportRaw: IExecutionReportRaw): ExecutionReport {\n\t\tlet result = new ExecutionReport(iExecReportRaw.n, iExecReportRaw.N, iExecReportRaw.E, iExecReportRaw.e, EExecutionType[iExecReportRaw.x],\n\t\t\tiExecReportRaw.F, iExecReportRaw.m, iExecReportRaw.w, iExecReportRaw.l, iExecReportRaw.c, iExecReportRaw.i, iExecReportRaw.r,\n\t\t\tEOrderStatus[iExecReportRaw.X], iExecReportRaw.T, EExecutionType[iExecReportRaw.x], iExecReportRaw.C,\n\t\t\tiExecReportRaw.p, iExecReportRaw.L, iExecReportRaw.q, EOrderSide.BUY[iExecReportRaw.S], iExecReportRaw.P, iExecReportRaw.s, ETimeInForce[iExecReportRaw.f],\n\t\t\tiExecReportRaw.z, iExecReportRaw.t);\n\t\treturn result;\n\t}\n\n\tconstructor(commission: string, commissionAsset: string, eventTime: number, eventType: string, executionType: EExecutionType,\n\t\t\t\t\t\t\ticebergQuantity: string, isBuyerMaker: boolean, isOrderWorking: boolean, lastTradeQuantity: string,\n\t\t\t\t\t\t\tnewClientOrderId: string, orderId: number, orderRejectReason: string, orderStatus: EOrderStatus, orderTime: number,\n\t\t\t\t\t\t\torderType: EOrderType, originalClientOrderId: string, price: string, priceLastTrade: string, quantity: string,\n\t\t\t\t\t\t\tside: EOrderSide, stopPrice: string, symbol: string, timeInForce: ETimeInForce, totalTradeQuantity: string, tradeId: number) {\n\t\tthis.commission = parseFloat(commission);\n\t\tthis.commissionAsset = commissionAsset;\n\t\tthis.eventTime = eventTime;\n\t\tthis.eventType = eventType;\n\t\tthis.executionType = EExecutionType[executionType];\n\t\tthis.icebergQuantity = parseFloat(icebergQuantity);\n\t\tthis.isBuyerMaker = isBuyerMaker;\n\t\tthis.isOrderWorking = isOrderWorking;\n\t\tthis.lastTradeQuantity = parseFloat(lastTradeQuantity);\n\t\tthis.newClientOrderId = newClientOrderId;\n\t\tthis.orderId = orderId;\n\t\tthis.orderRejectReason = orderRejectReason;\n\t\tthis.orderStatus = EOrderStatus[orderStatus];\n\t\tthis.orderTime = orderTime;\n\t\tthis.orderType = EOrderType[orderType];\n\t\tthis.originalClientOrderId = originalClientOrderId;\n\t\tthis.price = parseFloat(price);\n\t\tthis.priceLastTrade = parseFloat(priceLastTrade);\n\t\tthis.quantity = parseFloat(quantity);\n\t\tthis.side = EOrderSide[side];\n\t\tthis.stopPrice = parseFloat(stopPrice);\n\t\tthis.symbol = symbol;\n\t\tthis.timeInForce = ETimeInForce[timeInForce];\n\t\tthis.totalTradeQuantity = parseFloat(totalTradeQuantity);\n\t\tthis.tradeId = tradeId;\n\t}\n}\n"
  ]
}