import { IExecutionReport } from "./Interfaces/IExecutionReport";
import { EExecutionType, EOrderSide, EOrderStatus, EOrderType, ETimeInForce } from "../Transaction/Interfaces/EOrderEnums";
import { IExecutionReportRaw } from "./Interfaces/IExecutionReportRaw";
export declare class ExecutionReport implements IExecutionReport {
    commission: number;
    commissionAsset: string;
    executionType: string;
    icebergQuantity: number;
    isBuyerMaker: boolean;
    isOrderWorking: boolean;
    lastTradeQuantity: number;
    newClientOrderId: string;
    orderId: number;
    orderRejectReason: string;
    orderStatus: string;
    orderTime: number;
    orderType: string;
    originalClientOrderId: string;
    price: number;
    priceLastTrade: number;
    quantity: number;
    side: string;
    stopPrice: number;
    symbol: string;
    timeInForce: string;
    totalTradeQuantity: number;
    tradeId: number;
    eventTime: number;
    eventType: string;
    static fromBinanceStream(iExecReportRaw: IExecutionReportRaw): ExecutionReport;
    constructor(commission: string, commissionAsset: string, eventTime: number, eventType: string, executionType: EExecutionType, icebergQuantity: string, isBuyerMaker: boolean, isOrderWorking: boolean, lastTradeQuantity: string, newClientOrderId: string, orderId: number, orderRejectReason: string, orderStatus: EOrderStatus, orderTime: number, orderType: EOrderType, originalClientOrderId: string, price: string, priceLastTrade: string, quantity: string, side: EOrderSide, stopPrice: string, symbol: string, timeInForce: ETimeInForce, totalTradeQuantity: string, tradeId: number);
}
