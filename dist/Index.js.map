{"version":3,"file":"Index.js","sourceRoot":"","sources":["../src/Index.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qDAAgD;AAChD,yCAAoC;AACpC,oDAA+C;AAI/C;IAGC,YAAY,OAAuB;QAClC,UAAU,CAAC,IAAI,GAAG,IAAI,yBAAW,CAAC,OAAO,CAAC,CAAC;QAC3C,UAAU,CAAC,SAAS,GAAG,IAAI,qBAAS,CAAC,OAAO,CAAC,CAAC;IAC/C,CAAC;CACD;AAPD,gCAOC;AAED,IAAI,IAAI,GAAoC,EAAE,CAAC;AAC/C,IAAI,IAAI,GAAQ,IAAI,WAAI,EAAE,CAAC;AAC3B,IAAI,CAAC,GAAG,GAAG,kEAAkE,CAAC;AAC9E,IAAI,CAAC,MAAM,GAAG,kEAAkE,CAAC;AACjF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,IAAI,CAAC,aAAa,CAAC;AAEnB,MAAM,MAAM,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC;AACpC,CAAC,GAAQ,EAAE;IACV,IAAI,IAAI,GAAkB,MAAM,UAAU,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;IAClE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACnB,CAAC,CAAA,CAAC,EAAE,CAAC","sourcesContent":["import {WSBinance} from \"./Websocket/WSBinance\";\r\nimport {Auth} from \"./Account/Auth\";\r\nimport {BinanceRest} from \"./Rest/BinanceRest\";\r\nimport {iBinanceOptions} from \"./Binance/Interfaces/iBinanceOptions\";\r\nimport {IExchangeInfo} from \"./Rest/Interfaces/IExchangeInfo\";\r\n\r\nexport class BinanceApi{\r\n\tpublic static http:BinanceRest;\r\n\tpublic static websocket: WSBinance;\r\n\tconstructor(options:iBinanceOptions){\r\n\t\tBinanceApi.http = new BinanceRest(options);\r\n\t\tBinanceApi.websocket = new WSBinance(options);\r\n\t}\r\n}\r\n\r\nlet opts:iBinanceOptions = <iBinanceOptions>{};\r\nlet auth:Auth = new Auth();\r\nauth.key = \"L0FS9RPqvB8prFcE1hQCTiowHYpWdq16X1eyFZURGOOjdnz1LfE5fbquf7qUQQgK\";\r\nauth.secret = \"ANyASMoj6iMAYjvpgcVNLWvEToDBj6bco8NTqKJqzvml2vp4zHSKwajpqU2hSBiy\";\r\nopts.auth = auth;\r\nopts.test = true;\r\nopts.useServerTime;\r\n\r\nconst client = new BinanceApi(opts);\r\n(async ()=>{\r\n\tlet info: IExchangeInfo = await BinanceApi.http.getExchangeInfo();\r\n\tconsole.log(info);\r\n})();\r\n"]}