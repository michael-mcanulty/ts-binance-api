{
  "version": 3,
  "file": "Index.js",
  "sourceRoot": "",
  "sources": [
    "../src/Index.ts"
  ],
  "names": [],
  "mappings": ";;;;;;;;;;AAAA,yCAAoC;AAEpC,+CAA0C;AAE1C;IAGC,YAAY,IAAqB;QAChC,iBAAO,CAAC,OAAO,GAAG,IAAI,CAAC;QACvB,GAAG,CAAC,OAAO,GAAG,IAAI,iBAAO,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;CACD;AAPD,kBAOC;AAED,IAAI,IAAI,GAAqC,EAAE,CAAC;AAChD,IAAI,IAAI,GAAQ,IAAI,WAAI,EAAE,CAAC;AAC3B,IAAI,CAAC,GAAG,GAAG,kEAAkE,CAAC;AAC9E,IAAI,CAAC,MAAM,GAAG,kEAAkE,CAAC;AACjF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AAClB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;AAE1B,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1B,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAM,OAAO,EAAC,EAAE;IACvC,IAAI,CAAC;QACJ,IAAI,KAAK,GAAG,MAAM,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IAC5D,CAAC;IAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACd,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAClB,CAAC;AACF,CAAC,CAAA,CAAC,CAAC",
  "sourcesContent": [
    "import {Auth} from \"./Account/Auth\";\r\nimport {IBinanceOptions} from \"./Binance/Interfaces/IBinanceOptions\";\r\nimport {Binance} from \"./Binance/Binance\";\r\n\r\nexport class Bot {\r\n\tpublic static binance: Binance;\r\n\r\n\tconstructor(opts: IBinanceOptions) {\r\n\t\tBinance.options = opts;\r\n\t\tBot.binance = new Binance(opts);\r\n\t}\r\n}\r\n\r\nlet opts: IBinanceOptions = <IBinanceOptions>{};\r\nlet auth:Auth = new Auth();\r\nauth.key = \"S05wQBtvZ8LmuAkqiDMXWKvJI1SBeR9H6kE9poWQVeA6MLGp508h7gLX0Wce92u6\";\r\nauth.secret = \"iDCk1PtTyucLSlj5wRYIeSrphteLX2ESRONkcsxjhbg2PubidzGps34bKw98tm2D\";\r\nopts.auth = auth;\r\nopts.test = false;\r\nopts.useServerTime = true;\r\n\r\nconst bot = new Bot(opts);\r\nBot.binance.init().then(async markets => {\r\n\ttry {\r\n\t\tlet purch = await Bot.binance.rest.marketBuy(\"BNBUSDT\", 1);\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n});\r\n\r\n"
  ]
}