{
  "version": 3,
  "file": "BinanceError.js",
  "sourceRoot": "",
  "sources": [
    "../../src/Error/BinanceError.ts"
  ],
  "names": [],
  "mappings": ";;AAAA,yDAAoD;AACpD,iDAA4C;AAE5C;IAiCC,YAAY,GAAiB;QAC5B,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC1C,IAAI,CAAC,GAAG,GAAG,CAAC,OAAO,GAAG,CAAC,KAAK,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC1E,IAAI,OAAO,GAAwB,YAAY,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjF,EAAE,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,2BAAY,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,uBAAU,CAAC,OAAO,CAAC,CAAC;YAC3E,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,YAAY,CAAC,sBAAsB,CAAC,CAAC,CAAC;gBACvD,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,YAAY,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC;YACpE,CAAC;QACF,CAAC;IACF,CAAC;IApCM,MAAM,CAAC,qBAAqB,CAAC,IAAY;QAC/C,IAAI,MAAoB,CAAC;QACzB,EAAE,CAAC,CAAC,YAAY,CAAC,GAAG,IAAI,YAAY,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACrD,IAAI,QAAQ,GAAmB,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;YACzF,EAAE,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBACrC,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YACtB,CAAC;QACF,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IACf,CAAC;IAEM,MAAM,CAAC,yBAAyB,CAAC,GAAiB;QACxD,IAAI,QAAgB,CAAC;QACrB,IAAI,MAAM,GAAW,CAAC,CAAC;QACvB,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YACpB,IAAI,GAAG,GAAW,kBAAkB,CAAC;YACrC,IAAI,QAAQ,GAAG,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC;YACjD,IAAI,KAAK,GAAG,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,QAAQ,GAAG,EAAE,CAAC,CAAC,CAAC;YAC/D,QAAQ,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;YAC5B,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,KAAK,EAAE,CAAC,CAAC,CAAC;gBAC5B,MAAM,GAAG,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;YACvC,CAAC;QACF,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IACf,CAAC;;AA9Bc,mCAAsB,GAAW,CAAC,IAAI,CAAC;AADvD,oCA4CC",
  "sourcesContent": [
    "import {EErrorType} from \"./Email/Enums/EErrorType\";\r\nimport {ErrorHandler} from \"./ErrorHandler\";\r\n\r\nexport class BinanceError {\r\n\tprivate static TOO_MANY_REQUESTS_CODE: number = -1003;\r\n\tpublic static all: BinanceError[];\r\n\tcode: number;\r\n\thandler?: ErrorHandler;\r\n\tmsg: string;\r\n\r\n\tpublic static GetBinanceErrorByCode(code: number): BinanceError | null {\r\n\t\tlet result: BinanceError;\r\n\t\tif (BinanceError.all && BinanceError.all.length > 0) {\r\n\t\t\tlet filtered: BinanceError[] = BinanceError.all.filter(handler => handler.code === code);\r\n\t\t\tif (filtered && filtered.length > 0) {\r\n\t\t\t\tresult = filtered[0];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static GetTimeoutFromIPBannedMsg(err: BinanceError): number {\r\n\t\tlet strFloat: string;\r\n\t\tlet result: number = 0;\r\n\t\tif (err && err.msg) {\r\n\t\t\tlet msg: string = \"IP banned until \";\r\n\t\t\tlet startIdx = err.msg.indexOf(msg) + msg.length;\r\n\t\t\tlet float = parseFloat(err.msg.slice(startIdx, startIdx + 13));\r\n\t\t\tstrFloat = float.toString();\r\n\t\t\tif (strFloat.length === 13) {\r\n\t\t\t\tresult = float - new Date().getTime();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tconstructor(err: BinanceError) {\r\n\t\tthis.code = parseInt(err.code.toString());\r\n\t\tthis.msg = (typeof err['msg'] === \"string\") ? err['msg'] : err['message'];\r\n\t\tlet matched: BinanceError | null = BinanceError.GetBinanceErrorByCode(this.code);\r\n\t\tif (matched !== null) {\r\n\t\t\tthis.handler = ErrorHandler.GetErrorHandler(this.code, EErrorType.Binance);\r\n\t\t\tif (this.code === BinanceError.TOO_MANY_REQUESTS_CODE) {\r\n\t\t\t\tthis.handler.timeout = BinanceError.GetTimeoutFromIPBannedMsg(err);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}"
  ]
}