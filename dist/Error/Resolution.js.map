{
  "version": 3,
  "file": "Resolution.js",
  "sourceRoot": "",
  "sources": [
    "../../src/Error/Resolution.ts"
  ],
  "names": [],
  "mappings": ";;AAAA,6CAAwC;AACxC,2CAAsC;AACtC,mDAA8C;AAI9C,2CAAsC;AACtC,yDAAoD;AAEpD;IAcC,UAAU,CAAC,KAA6B;QACvC,EAAE,CAAA,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,CAAA,CAAC;YAC9C,IAAI,OAAO,GAA6B,EAAE,CAAC;YAC3C,OAAO,CAAC,MAAM,GAAG,iBAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACtC,OAAO,CAAC,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;YAEhC,EAAE,CAAA,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,YAAY,CAAC,CAAA,CAAC;gBACvC,IAAI,CAAC,YAAY,GAAG,IAAI,uBAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBACtD,IAAI,UAAU,GAAoC,EAAE,CAAC;gBACrD,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC;gBACpC,UAAU,CAAC,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC;gBAClC,IAAI,OAAO,GAAc,qBAAS,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACvD,IAAI,OAAO,GAAU,CAAC,OAAO,KAAG,uBAAU,CAAC,OAAO,CAAC,CAAA,CAAC,CAAA,KAAK,CAAC,KAAK,CAAC,CAAA,CAAC,CAAA,KAAK,CAAC,SAAS,CAAC,CAAC;gBAClF,UAAU,CAAC,OAAO,GAAG,SAAS,uBAAU,CAAC,OAAO,CAAC,IAAE,SAAS,8BAA8B,OAAO,EAAE,CAAC;gBACpG,UAAU,CAAC,IAAI,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC,kBAAkB,EAAE,eAAe,KAAK,CAAC,IAAI,gBAAgB,OAAO,EAAE,CAAC;gBACvG,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,OAAO,CAAA,EAAE;oBAC5D,MAAM,CAAC,eAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;gBACzC,CAAC,CAAC,CAAA;YACH,CAAC;YAAA,IAAI,CAAA,CAAC;gBACL,MAAM,CAAC,eAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;YACzC,CAAC;QACF,CAAC;IACF,CAAC;IACD,YAAY,IAAY,EAAE,IAAY,EAAE,MAAc,EAAE,SAAiB,EAAE,OAAe,EAAE,YAAoB,EAAE,YAA8B,EAAE,QAAQ,GAAC,kBAAkB;QAC5K,IAAI,CAAC,IAAI,GAAG,IAAI,IAAG,IAAI,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,YAAY,IAAI,IAAI,CAAC;QACzC,IAAI,CAAC,SAAS,GAAG,SAAS,IAAG,KAAK,CAAC;QACnC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,CAAC,CAAC;QAC5B,IAAI,GAAG,GAAU,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;QACjD,IAAI,KAAK,GAAO,EAAC,SAAS,EAAC,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,IAAI,CAAC,OAAO,EAAE,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAC,CAAC;QAC7F,GAAG,IAAI,eAAM,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QACrC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;IACjB,CAAC;CACD;AAjDD,sCAiDC",
  "sourcesContent": [
    "import {EMethod} from \"../Rest/EMethod\";\nimport {BBRest} from \"../Rest/BBRest\";\nimport {NodeMailer} from \"./Email/NodeMailer\";\nimport {IServiceOptions} from \"./Email/Interfaces/IServiceOprtions\";\nimport {IMessageOptions} from \"./Email/Interfaces/IMessageOptions\";\nimport {BinanceError} from \"./BinanceError\";\nimport {HttpError} from \"./HttpError\";\nimport {EErrorType} from \"./Email/Enums/EErrorType\";\n\nexport class ErrorResponse{\n\tpublic static allItems: ErrorResponse[];\n\tprivate emailService:NodeMailer;\n\tprotected _url:string;\n\temailOptions?:IServiceOptions;\n\temailAddress?:string;\n\tendpoint:string;\n\tport:number;\n\tsendEmail: boolean;\n\ttimeout:number;\n\trestart:boolean;\n\tshutdown:boolean;\n\tmethod:EMethod;\n\n\texecuteApi(error: BinanceError|HttpError):Promise<any>{\n\t\tif(this.port !== null && this.method !== null){\n\t\t\tlet reqOpts: RequestInit = <RequestInit>{};\n\t\t\treqOpts.method = EMethod[this.method];\n\t\t\treqOpts.headers = new Headers();\n\t\t\t//send email.\n\t\t\tif(this.sendEmail && this.emailOptions){\n\t\t\t\tthis.emailService = new NodeMailer(this.emailOptions);\n\t\t\t\tlet msgOptions:IMessageOptions = <IMessageOptions>{};\n\t\t\t\tmsgOptions.from = this.emailAddress;\n\t\t\t\tmsgOptions.to = this.emailAddress;\n\t\t\t\tlet errType:EErrorType = HttpError.GetErrorType(error);\n\t\t\t\tlet message:string = (errType===EErrorType.Binance)?error['msg']:error['message'];\n\t\t\t\tmsgOptions.subject = `A new ${EErrorType[errType]||\"Unknown\"} error has been received | ${message}`;\n\t\t\t\tmsgOptions.text = `${new Date().toLocaleDateString()} : \\n Code: ${error.code} \\n Message: ${message}`;\n\t\t\t\treturn this.emailService.sendEmail(msgOptions).then(success=>{\n\t\t\t\t\treturn BBRest.fetch(this._url, reqOpts);\n\t\t\t\t})\n\t\t\t}else{\n\t\t\t\treturn BBRest.fetch(this._url, reqOpts);\n\t\t\t}\n\t\t}\n\t}\n\tconstructor(code: number, port: number, method:EMethod, sendEmail:boolean, timeout?:number, emailAddress?:string, emailOptions?: IServiceOptions, endpoint=\"http://localhost\"){\n\t\tthis.port = port ||null;\n\t\tthis.method = method;\n\t\tthis.emailAddress = emailAddress || null;\n\t\tthis.sendEmail = sendEmail ||false;\n\t\tthis.endpoint = endpoint;\n\t\tthis.timeout = timeout || 0;\n\t\tlet url:string = `${this.endpoint}:${this.port}`;\n\t\tlet props:any = {\"timeout\":this.timeout, \"restart\": this.restart, \"shutdown\": this.shutdown};\n\t\turl += BBRest.makeQueryString(props);\n\t\tthis._url = url;\n\t}\n}\n"
  ]
}