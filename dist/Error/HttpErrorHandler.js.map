{"version":3,"file":"HttpErrorHandler.js","sourceRoot":"","sources":["../../src/Error/HttpErrorHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import {EMethod} from \"../Rest/EMethod\";\r\nimport {BotHttp} from \"../Rest/BotHttp\";\r\nimport {NodeMailer} from \"./Email/NodeMailer\";\r\nimport {IMessageOptions} from \"./Email/Interfaces/IMessageOptions\";\r\nimport {BBLogger} from \"../Logger/BBLogger\";\r\nimport {EErrorType} from \"../Error/Email/Enums/EErrorType\";\r\nimport {HttpError} from \"./HttpError\";\r\nimport {IHttpErrorHandlerOptions} from \"./Email/Interfaces/IHttpErrorHandlerOptions\";\r\nimport {IHandleExceptionOptions} from \"./Email/Interfaces/IHandleExceptionOptions\";\r\nimport {ISMTPOptions} from \"./Email/Interfaces/ISMTPOptions\";\r\n\r\nexport class HttpErrorHandler {\r\n\tpublic static mailService: NodeMailer;\r\n\tpublic static emailMsgOptions: IMessageOptions;\r\n\tpublic static emailServiceOptions: ISMTPOptions;\r\n\ttype: string;\r\n\tsendEmail: boolean;\r\n\tkillAppOnError?: boolean;\r\n\temailMsgOpts?: IMessageOptions;\r\n\temailServiceOpts?: ISMTPOptions;\r\n\tkillWorkerOnError: boolean;\r\n\tendpoint?: string[]|string;\r\n\tmethod?: EMethod;\r\n\tpayload?: any;\r\n\r\n\tpublic static hasHandler(err: HttpError){\r\n\t\treturn (err && HttpError.isHttpError(err) && err.handler instanceof HttpErrorHandler);\r\n\t}\r\n\r\n\texecute(options: IHandleExceptionOptions): Promise<any> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\ttry{\r\n\t\t\t\tlet remoteEndpoints: string[]=[];\r\n\t\t\t\tlet _endpoint: string[];\r\n\r\n\t\t\t\tif ( (this.method != undefined && this.method !== null) && this.endpoint) {\r\n\t\t\t\t\t_endpoint = (Array.isArray(this.endpoint))?<string[]>this.endpoint:<string[]>new Array(this.endpoint);\r\n\t\t\t\t\tremoteEndpoints = _endpoint;\r\n\t\t\t\t\tif(options.originAddress && _endpoint.length > 1){\r\n\t\t\t\t\t\tremoteEndpoints = _endpoint.filter(e=>e!==options.originAddress);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlet reqOpts: RequestInit = <RequestInit>{};\r\n\t\t\t\treqOpts.method = EMethod[this.method];\r\n\t\t\t\treqOpts.headers = new Headers();\r\n\t\t\t\treqOpts.headers.set(\"Content-Type\", \"application/json\");\r\n\t\t\t\treqOpts.body = this.payload || null;\r\n\t\t\t\tif(!this.killAppOnError && this.payload || (this.killWorkerOnError && options.workerId)){\r\n\t\t\t\t\treqOpts.body = (this.payload)?JSON.stringify(this.payload): JSON.stringify({\"workerId\": options.workerId});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Send an email\r\n\t\t\t\tif (this.sendEmail && this.emailMsgOpts && (this.emailServiceOpts || HttpErrorHandler.emailServiceOptions)) {\r\n\t\t\t\t\tHttpErrorHandler.mailService = new NodeMailer();\r\n\t\t\t\t\tthis.emailMsgOpts.subject = (!this.emailMsgOpts.subject || this.emailMsgOpts.subject.length === 0 )? `${options.message} ${this.type || \"Unknown\"} Error Received`: this.emailMsgOpts.subject;\r\n\t\t\t\t\tthis.emailMsgOpts.text =(!this.emailMsgOpts.text || this.emailMsgOpts.text.length === 0 )?`Error code: ${options.code} \\n Message: ${options.message}`: this.emailMsgOpts.text;\r\n\t\t\t\t\tlet defaultServiceOpts: ISMTPOptions = HttpErrorHandler.emailServiceOptions;\r\n\r\n\t\t\t\t\tawait HttpErrorHandler.mailService.sendEmail(this.emailMsgOpts, this.emailServiceOpts || defaultServiceOpts);\r\n\r\n\t\t\t\t\tfor(let endpoint of remoteEndpoints){\r\n\t\t\t\t\t\tawait postToEndpoint(endpoint, reqOpts, reject);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(options.originAddress && _endpoint.length > remoteEndpoints.length){\r\n\t\t\t\t\t\tawait postToEndpoint(options.originAddress, reqOpts, reject);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tresolve();\r\n\t\t\t}catch(err){\r\n\t\t\t\tawait BBLogger.error(err);\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t\tasync function postToEndpoint(endpoint: string, reqOpts: RequestInit, errorCallback: Function){\r\n\t\t\ttry {\r\n\t\t\t\tlet fetch: any = {};\r\n\t\t\t\tfetch = await BotHttp.fetch(endpoint, reqOpts);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tif(err && typeof err.errno === \"string\" && err.errno !== \"ECONNREFUSED\"){\r\n\t\t\t\t\tawait BBLogger.error(err.message);\r\n\t\t\t\t\terrorCallback(err);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tawait BBLogger.warning(\"Tried to kill a dead server.\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor(config: IHttpErrorHandlerOptions) {\r\n\t\tthis.emailServiceOpts\t= HttpErrorHandler.emailServiceOptions;\r\n\t\tthis.emailMsgOpts\t= (HttpErrorHandler.emailMsgOptions)? HttpErrorHandler.emailMsgOptions: <IMessageOptions>{};\r\n\r\n\t\tif(config){\r\n\t\t\tif(config.endpoint){\r\n\t\t\t\tthis.endpoint = (Array.isArray(config.endpoint))?<string[]>config.endpoint:<string[]>new Array(config.endpoint);\r\n\t\t\t}\r\n\t\t\tthis.method = config.method;\r\n\t\t\tthis.type = EErrorType[config.type] || EErrorType[EErrorType.Binance];\r\n\t\t\tthis.sendEmail = config.sendEmail;\r\n\t\t\tthis.payload = config.payload;\r\n\t\t\tthis.killAppOnError = config.killAppOnError;\r\n\t\t\tthis.killWorkerOnError = config.killWorkerOnError;\r\n\r\n\t\t\tif(config.emailServiceOpts && typeof config.emailServiceOpts.auth === \"object\"){\r\n\t\t\t\tthis.emailServiceOpts = config.emailServiceOpts;\r\n\t\t\t}\r\n\r\n\t\t\tthis.emailMsgOpts = config.emailMsgOpts;\r\n\t\t}\r\n\t}\r\n}"]}