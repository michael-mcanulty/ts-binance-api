{"version":3,"file":"HttpErrorHandler.js","sourceRoot":"","sources":["../../src/Error/HttpErrorHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import {EMethod} from \"../Rest/EMethod\";\r\nimport {BotHttp} from \"../Rest/BotHttp\";\r\nimport {NodeMailer} from \"./NodeMailer\";\r\nimport {IMessageOptions} from \"./Interfaces/IMessageOptions\";\r\nimport {BBLogger} from \"../Logger/BBLogger\";\r\nimport {EErrorType} from \"./Enums/EErrorType\";\r\nimport {HttpError} from \"./HttpError\";\r\nimport {ISmtpOptions} from \"./Interfaces/ISmtpOptions\";\r\nimport {URL} from \"url\";\r\nimport {IHttpErrorHandler} from \"./Interfaces/IHttpErrorHandler\";\r\nimport {IHttpError} from \"./Interfaces/IHttpError\";\r\nimport {worker} from \"cluster\";\r\nimport {ITextMsgOptions} from \"../TextMessage/ITextMsgOptions\";\r\nimport {TextMessage} from \"../TextMessage/TextMessage\";\r\n\r\nexport class HttpErrorHandler {\r\n\tpublic static emailMsgOptions: IMessageOptions;\r\n\temailMsgOpts?: IMessageOptions;\r\n\tpublic static emailServiceOptions: ISmtpOptions;\r\n\temailServiceOpts?: ISmtpOptions;\r\n\tendpoint?: string[] | string;\r\n\tpublic static mailService: NodeMailer;\r\n\tmethod?: string;\r\n\tpayload?: any;\r\n\trestartSingleWorker: boolean = false;\r\n\tsendEmail: boolean;\r\n\tsendText: boolean;\r\n\tpublic static textMsgOptions: ITextMsgOptions;\r\n\ttextMsgOpts?: ITextMsgOptions;\r\n\ttype: string;\r\n\r\n\tprivate async _postToEndpoint(endpoint: string, reqOpts: RequestInit) {\r\n\t\ttry {\r\n\t\t\tlet res = await BotHttp.fetch(endpoint, reqOpts);\r\n\r\n\t\t\tif (res.ok === false) {\r\n\t\t\t\tlet error: HttpError = new HttpError(parseInt(res.status.toString()), res.statusText);\r\n\t\t\t\treturn Promise.reject(error);\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tif (err && typeof err.errno === \"string\" && err.errno !== \"ECONNREFUSED\") {\r\n\t\t\t\tBBLogger.error(err.message);\r\n\t\t\t\tthrow err;\r\n\t\t\t} else {\r\n\t\t\t\tBBLogger.warning(\"Tried to kill a dead server.\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync execute(err: HttpError, srcUrl: URL): Promise<any> {\r\n\t\ttry {\r\n\t\t\t//\"http://localhost:3001\"\r\n\t\t\tlet origin = srcUrl.origin;\r\n\r\n\t\t\tlet srcServer: string = (srcUrl.port.charAt(-1) == \"1\") ? \"Data Server\" : \"Analysis Server\";\r\n\r\n\t\t\tif (err && HttpErrorHandler.hasHandler(err)) {\r\n\r\n\t\t\t\tif (this.restartSingleWorker) {\r\n\t\t\t\t\tthis.payload.id = worker.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (err.handler.emailMsgOpts) {\r\n\t\t\t\t\terr.handler.emailMsgOpts = HttpErrorHandler.emailMsgOptions;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!err.handler.emailServiceOpts || !err.handler.emailServiceOpts.auth) {\r\n\t\t\t\t\terr.handler.emailServiceOpts = HttpErrorHandler.emailServiceOptions;\r\n\t\t\t\t}\r\n\t\t\t\tlet opts: IHttpError = <IHttpError>{};\r\n\t\t\t\topts.code = err.code;\r\n\t\t\t\topts.message = err.message;\r\n\r\n\t\t\t\tlet remoteEndpoints: string[] = [];\r\n\t\t\t\tlet _endpoint: string[];\r\n\r\n\t\t\t\tif ((err.handler.method != undefined && err.handler.method !== null) && err.handler.endpoint) {\r\n\t\t\t\t\tthis.payload = {error: HttpError.toObjLiteral(err)};\r\n\t\t\t\t\t_endpoint = (Array.isArray(err.handler.endpoint)) ? <string[]>err.handler.endpoint : <string[]>new Array(err.handler.endpoint);\r\n\t\t\t\t\tremoteEndpoints = _endpoint;\r\n\t\t\t\t\tif (origin && _endpoint.length > 1) {\r\n\t\t\t\t\t\tremoteEndpoints = _endpoint.filter(e => new URL(e).origin !== origin);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet reqOpts: RequestInit = <RequestInit>{};\r\n\t\t\t\treqOpts.method = err.handler.method;\r\n\t\t\t\treqOpts.headers = new Headers();\r\n\t\t\t\treqOpts.headers.set(\"Content-Type\", \"application/json\");\r\n\t\t\t\tif (this.payload) {\r\n\t\t\t\t\treqOpts.body = JSON.stringify(this.payload);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Send an email\r\n\t\t\t\tif (err.handler.sendEmail && err.handler.emailMsgOpts && (err.handler.emailServiceOpts || HttpErrorHandler.emailServiceOptions)) {\r\n\t\t\t\t\terr.handler.emailMsgOpts.subject = (!err.handler.emailMsgOpts.subject || err.handler.emailMsgOpts.subject.length === 0) ? `${opts.message} ${err.handler.type || \"Unknown\"} Error on the ${srcServer}` : err.handler.emailMsgOpts.subject;\r\n\t\t\t\t\terr.handler.emailMsgOpts.text = (!err.handler.emailMsgOpts.text || err.handler.emailMsgOpts.text.length === 0) ? `Error code: ${opts.code} \\n Message: ${opts.message} \\n Stack: ${err.stack}` : err.handler.emailMsgOpts.text;\r\n\t\t\t\t\tlet defaultServiceOpts: ISmtpOptions = HttpErrorHandler.emailServiceOptions;\r\n\r\n\t\t\t\t\tawait HttpErrorHandler.mailService.sendEmail(err.handler.emailMsgOpts, err.handler.emailServiceOpts || defaultServiceOpts);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Send text message\r\n\t\t\t\tif (err.handler.sendText && (err.handler.textMsgOpts || HttpErrorHandler.textMsgOptions)) {\r\n\t\t\t\t\tlet textMsg = new TextMessage();\r\n\t\t\t\t\tawait textMsg.send(err, srcServer);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Kamikaze style. Destroy endpoints with suicide on last post.\r\n\t\t\t\tfor (let ePoint of remoteEndpoints) {\r\n\t\t\t\t\tawait  this._postToEndpoint(ePoint, reqOpts);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Suicidal final post.\r\n\t\t\t\tif (origin && _endpoint.length > remoteEndpoints.length) {\r\n\t\t\t\t\tlet lastPoint: string[] = _endpoint.filter(e => new URL(e).origin === origin);\r\n\t\t\t\t\tif (lastPoint && lastPoint.length > 0) {\r\n\t\t\t\t\t\tawait this._postToEndpoint(lastPoint[0], reqOpts);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\treturn;\r\n\r\n\t\t} catch (err) {\r\n\t\t\tBBLogger.error(err);\r\n\t\t\tthrow err;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static hasHandler(err: HttpError) {\r\n\t\treturn (err && HttpError.isHttpError(err) && err.handler instanceof HttpErrorHandler);\r\n\t}\r\n\r\n\tconstructor(config: IHttpErrorHandler) {\r\n\t\tthis.emailServiceOpts = HttpErrorHandler.emailServiceOptions;\r\n\t\tthis.emailMsgOpts = (HttpErrorHandler.emailMsgOptions) ? HttpErrorHandler.emailMsgOptions : <IMessageOptions>{};\r\n\t\tthis.textMsgOpts = (HttpErrorHandler.textMsgOptions) ? HttpErrorHandler.textMsgOptions : <ITextMsgOptions>{};\r\n\t\tif (config) {\r\n\t\t\tif (config.endpoint) {\r\n\t\t\t\tthis.endpoint = (Array.isArray(config.endpoint)) ? <string[]>config.endpoint : <string[]>new Array(config.endpoint);\r\n\t\t\t}\r\n\t\t\tthis.method = EMethod[config.method];\r\n\t\t\tthis.type = EErrorType[config.type] || EErrorType[EErrorType.Binance];\r\n\t\t\tthis.sendEmail = config.sendEmail;\r\n\t\t\tthis.sendText = config.sendText;\r\n\t\t\tthis.payload = config.payload;\r\n\r\n\t\t\tif (config.emailServiceOpts && typeof config.emailServiceOpts.auth === \"object\") {\r\n\t\t\t\tthis.emailServiceOpts = config.emailServiceOpts;\r\n\t\t\t}\r\n\t\t\tthis.textMsgOpts = config.textMsgOpts;\r\n\t\t\tthis.emailMsgOpts = config.emailMsgOpts;\r\n\t\t}\r\n\t\tHttpErrorHandler.mailService = new NodeMailer();\r\n\t}\r\n}"]}