{"version":3,"file":"HttpErrorHandler.js","sourceRoot":"","sources":["../../src/Error/HttpErrorHandler.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,6CAAwC;AACxC,6CAAwC;AACxC,mDAA8C;AAE9C,2DAAsD;AACtD,iDAA4C;AAC5C,gEAA2D;AAC3D,2CAAsC;AAItC;IAcQ,MAAM,CAAC,UAAU,CAAC,GAAc;QACtC,MAAM,CAAC,qBAAS,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,OAAO,YAAY,qBAAS,CAAC;IACvE,CAAC;IAED,eAAe,CAAC,IAAY,EAAE,OAAe,EAAE,IAA2B;QACzE,MAAM,CAAC,IAAI,OAAO,CAAC,CAAO,OAAO,EAAE,MAAM,EAAE,EAAE;YAC5C,EAAE,CAAA,CAAC,IAAI,CAAC,QAAQ,CAAC;gBAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC/C,EAAE,CAAA,CAAC,IAAI,CAAC,MAAM,CAAC;gBAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YACzC,EAAE,CAAA,CAAC,IAAI,CAAC,OAAO,CAAC;gBAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAE5C,EAAE,CAAC,CAAE,CAAC,IAAI,CAAC,MAAM,IAAI,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC1E,IAAI,SAAS,GAAa,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAA,CAAC,CAAU,IAAI,CAAC,QAAQ,CAAA,CAAC,CAAU,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACpH,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC1B,IAAI,OAAO,GAA6B,EAAE,CAAC;gBAC3C,IAAI,GAAW,CAAC;gBAChB,OAAO,CAAC,MAAM,GAAG,iBAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACtC,OAAO,CAAC,OAAO,GAAY,EAAE,CAAC;gBAC9B,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;gBACxD,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;gBACpB,EAAE,CAAA,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAA,CAAC;oBAC7D,OAAO,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA,CAAC,CAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,EAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAC,CAAC,CAAC;gBACzG,CAAC;gBAED,GAAG,CAAA,CAAC,IAAI,QAAQ,IAAI,SAAS,CAAC,CAAA,CAAC;oBAC9B,IAAI,CAAC;wBACJ,IAAI,KAAK,GAAQ,EAAE,CAAC;wBACpB,KAAK,GAAG,MAAM,iBAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;oBAChD,CAAC;oBAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACd,mBAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBACpB,MAAM,CAAC,GAAG,CAAC,CAAC;oBACb,CAAC;gBACF,CAAC;YACF,CAAC;YAGD,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBAClE,gBAAgB,CAAC,WAAW,GAAG,IAAI,uBAAU,EAAE,CAAC;gBAChD,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,CAAE,CAAA,CAAC,CAAC,SAAS,uBAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,SAAS,8BAA8B,OAAO,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;gBACnN,IAAI,CAAC,YAAY,CAAC,IAAI,GAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,CAAE,CAAA,CAAC,CAAA,GAAG,IAAI,IAAI,EAAE,CAAC,kBAAkB,EAAE,eAAe,IAAI,gBAAgB,OAAO,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;gBAEjM,IAAI,CAAC;oBACJ,MAAM,gBAAgB,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACxF,CAAC;gBAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBACd,mBAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBACpB,MAAM,CAAC,GAAG,CAAC,CAAC;gBACb,CAAC;YACF,CAAC;YACD,OAAO,EAAE,CAAC;QACX,CAAC,CAAA,CAAC,CAAC;IACJ,CAAC;IAED,YAAY,MAAgC;QAC3C,IAAI,OAAO,GAAqC,EAAE,CAAC;QACnD,OAAO,CAAC,EAAE,GAAG,gBAAgB,CAAC,sBAAsB,CAAC;QAErD,EAAE,CAAA,CAAC,MAAM,CAAC,CAAA,CAAC;YACV,EAAE,CAAA,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA,CAAC;gBACnB,IAAI,CAAC,QAAQ,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAA,CAAC,CAAU,MAAM,CAAC,QAAQ,CAAA,CAAC,CAAU,IAAI,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YACjH,CAAC;YACD,IAAI,CAAC,IAAI,GAAG,uBAAU,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,uBAAU,CAAC,uBAAU,CAAC,OAAO,CAAC,CAAC;YACtE,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;YAClC,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC,uBAAuB,CAAC;YAEjE,EAAE,CAAA,CAAC,MAAM,CAAC,gBAAgB,IAAI,OAAO,MAAM,CAAC,gBAAgB,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAA,CAAC;gBAC/E,IAAI,CAAC,gBAAgB,GAAG,IAAI,+BAAc,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;YACrE,CAAC;YAED,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,IAAI,OAAO,CAAC;QACpD,CAAC;IACF,CAAC;CACD;AApFD,4CAoFC","sourcesContent":["import {EMethod} from \"../Rest/EMethod\";\r\nimport {BotHttp} from \"../Rest/BotHttp\";\r\nimport {NodeMailer} from \"./Email/NodeMailer\";\r\nimport {IMessageOptions} from \"./Email/Interfaces/IMessageOptions\";\r\nimport {ServiceOptions} from \"./Email/ServiceOptions\";\r\nimport {BBLogger} from \"../Logger/BBLogger\";\r\nimport {EErrorType} from \"../Error/Email/Enums/EErrorType\";\r\nimport {HttpError} from \"./HttpError\";\r\nimport {IHttpErrorHandlerOptions} from \"./Email/Interfaces/IHttpErrorHandlerOptions\";\r\nimport {IHandleExceptionOpts} from \"./Email/Interfaces/IHandleExceptionOpts\";\r\n\r\nexport class HttpErrorHandler {\r\n\tpublic static mailService: NodeMailer;\r\n\tpublic static defaultErrMsgRecipient: string;\r\n\tpublic static defaultEmailServiceOpts: ServiceOptions;\r\n\ttype: string;\r\n\tsendEmail: boolean;\r\n\tkillAppOnError?: boolean;\r\n\temailMsgOpts?: IMessageOptions;\r\n\temailServiceOpts?: ServiceOptions;\r\n\tkillWorkerOnError: boolean;\r\n\tendpoint?: string[]|string;\r\n\tmethod?: EMethod;\r\n\tpayload?: any;\r\n\r\n\tpublic static hasHandler(err: HttpError){\r\n\t\treturn HttpError.isHttpError(err) && err.handler instanceof HttpError;\r\n\t}\r\n\r\n\thandleException(code: number, message: string, opts?: IHandleExceptionOpts): Promise<any> {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\tif(opts.endpoint)this.endpoint = opts.endpoint;\r\n\t\t\tif(opts.method)this.method = opts.method;\r\n\t\t\tif(opts.payload)this.payload = opts.payload;\r\n\r\n\t\t\tif ( (this.method != undefined && this.method !== null) && this.endpoint) {\r\n\t\t\t\tlet _endpoint: string[] = (Array.isArray(opts.endpoint))?<string[]>opts.endpoint:<string[]>new Array(opts.endpoint);\r\n\t\t\t\tthis.method = opts.method;\r\n\t\t\t\tlet reqOpts: RequestInit = <RequestInit>{};\r\n\t\t\t\tlet url: string;\r\n\t\t\t\treqOpts.method = EMethod[this.method];\r\n\t\t\t\treqOpts.headers = <Headers>{};\r\n\t\t\t\treqOpts.headers.set(\"Content-Type\", \"application/json\");\r\n\t\t\t\treqOpts.body = null;\r\n\t\t\t\tif(this.payload || (this.killWorkerOnError && opts.workerId)){\r\n\t\t\t\t\treqOpts.body = (this.payload)?JSON.stringify(this.payload): JSON.stringify({\"workerId\": opts.workerId});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor(let endpoint of _endpoint){\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tlet fetch: any = {};\r\n\t\t\t\t\t\tfetch = await BotHttp.fetch(endpoint, reqOpts);\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tBBLogger.error(err);\r\n\t\t\t\t\t\treject(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//Send an email\r\n\t\t\tif (this.sendEmail && this.emailMsgOpts && this.emailServiceOpts) {\r\n\t\t\t\tHttpErrorHandler.mailService = new NodeMailer();\r\n\t\t\t\tthis.emailMsgOpts.subject = (!this.emailMsgOpts.subject || this.emailMsgOpts.subject.length === 0 )? `A new ${EErrorType[this.type] || \"Unknown\"} error has been received | ${message}`: this.emailMsgOpts.subject;\r\n\t\t\t\tthis.emailMsgOpts.text =(!this.emailMsgOpts.text || this.emailMsgOpts.text.length === 0 )?`${new Date().toLocaleDateString()} : \\n Code: ${code} \\n Message: ${message}`: this.emailMsgOpts.text;\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tawait HttpErrorHandler.mailService.sendEmail(this.emailMsgOpts, this.emailServiceOpts);\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tBBLogger.error(err);\r\n\t\t\t\t\treject(err);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tresolve();\r\n\t\t});\r\n\t}\r\n\r\n\tconstructor(config: IHttpErrorHandlerOptions) {\r\n\t\tlet msgOpts: IMessageOptions = <IMessageOptions>{};\r\n\t\tmsgOpts.to = HttpErrorHandler.defaultErrMsgRecipient;\r\n\r\n\t\tif(config){\r\n\t\t\tif(config.endpoint){\r\n\t\t\t\tthis.endpoint = (Array.isArray(config.endpoint))?<string[]>config.endpoint:<string[]>new Array(config.endpoint);\r\n\t\t\t}\r\n\t\t\tthis.type = EErrorType[config.type] || EErrorType[EErrorType.Binance];\r\n\t\t\tthis.sendEmail = config.sendEmail;\r\n\t\t\tthis.emailServiceOpts = HttpErrorHandler.defaultEmailServiceOpts;\r\n\r\n\t\t\tif(config.emailServiceOpts && typeof config.emailServiceOpts.auth === \"object\"){\r\n\t\t\t\tthis.emailServiceOpts = new ServiceOptions(config.emailServiceOpts);\r\n\t\t\t}\r\n\r\n\t\t\tthis.emailMsgOpts = config.emailMsgOpts || msgOpts;\r\n\t\t}\r\n\t}\r\n}"]}