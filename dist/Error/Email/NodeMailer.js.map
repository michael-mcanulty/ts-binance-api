{"version":3,"file":"NodeMailer.js","sourceRoot":"","sources":["../../../src/Error/Email/NodeMailer.ts"],"names":[],"mappings":";;AACA,yCAAyC;AAIzC;IAmBC,gBAAe,CAAC;IAhBT,SAAS,CAAC,OAAwB,EAAE,cAA8B;QACxE,MAAM,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACtC,EAAE,CAAC,CAAC,CAAC,cAAc,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBACjC,MAAM,CAAC,kCAAkC,CAAC,CAAC;YAC5C,CAAC;YAAC,IAAI,CAAC,CAAC;gBACP,UAAU,CAAC,OAAO,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,IAA0B,EAAE,EAAE;oBAC1G,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;wBACX,MAAM,CAAC,KAAK,CAAC,CAAC;oBACf,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACP,OAAO,CAAC,cAAc,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;oBACxC,CAAC;gBACF,CAAC,CAAC,CAAC;YACJ,CAAC;QACF,CAAC,CAAC,CAAC;IACJ,CAAC;;AAhBa,kBAAO,GAAsB,UAAU,CAAC;AADvD,gCAoBC","sourcesContent":["import {ServiceOptions} from \"./ServiceOptions\";\r\nimport * as nodeMailer from \"nodemailer\";\r\nimport {IMessageOptions} from \"./Interfaces/IMessageOptions\";\r\nimport {NodeMailerService} from \"./Types/Types\";\r\n\r\nexport class NodeMailer {\r\n\tpublic static Service: NodeMailerService = nodeMailer;\r\n\r\n\tpublic sendEmail(msgOpts: IMessageOptions, serviceOptions: ServiceOptions): Promise<any> {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tif (!serviceOptions || !msgOpts) {\r\n\t\t\t\treject(\"Service Options must be provided\");\r\n\t\t\t} else {\r\n\t\t\t\tNodeMailer.Service.createTransport(serviceOptions).sendMail(msgOpts, (error, info: { response: string }) => {\r\n\t\t\t\t\tif (error) {\r\n\t\t\t\t\t\treject(error);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresolve(`Email Sen: ${info.response}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tconstructor() {}\r\n}\r\n"]}