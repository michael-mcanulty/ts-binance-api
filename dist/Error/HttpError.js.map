{
  "version": 3,
  "file": "HttpError.js",
  "sourceRoot": "",
  "sources": [
    "../../src/Error/HttpError.ts"
  ],
  "names": [],
  "mappings": ";;AAAA,yDAAoD;AACpD,iDAA4C;AAC5C,iDAA4C;AAE5C,eAAuB,SAAQ,KAAK;IAM5B,MAAM,CAAC,YAAY,CAAC,GAA6B;QACvD,IAAI,IAAI,GAAW,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QACjD,IAAI,SAAS,GAAY,KAAK,CAAC;QAC/B,EAAE,CAAC,CAAC,OAAO,GAAG,CAAC,KAAK,CAAC,KAAK,QAAQ,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;YAChD,SAAS,GAAG,IAAI,CAAC;QAClB,CAAC;QACD,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,uBAAU,CAAC,OAAO,CAAC,CAAC,CAAC,uBAAU,CAAC,IAAI,CAAC;IAC3D,CAAC;IAEM,MAAM,CAAC,kBAAkB,CAAC,IAAY;QAC5C,IAAI,QAAQ,GAAgB,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;QACnF,IAAI,MAAiB,CAAC;QACtB,EAAE,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACrC,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;QACtB,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IACf,CAAC;IAED,YAAY,GAAmC;QAC9C,KAAK,EAAE,CAAC;QACR,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC1C,IAAI,IAAI,GAAe,SAAS,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QACnD,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,KAAK,uBAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC3E,EAAE,CAAC,CAAC,IAAI,KAAK,uBAAU,CAAC,OAAO,CAAC,CAAC,CAAC;YACjC,IAAI,OAAO,GAAwB,2BAAY,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACjF,EAAE,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,OAAO,GAAG,2BAAY,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,uBAAU,CAAC,OAAO,CAAC,CAAC;YAC5E,CAAC;QACF,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,IAAI,OAAO,GAAqB,SAAS,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACxE,EAAE,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,OAAO,GAAG,2BAAY,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,uBAAU,CAAC,IAAI,CAAC,CAAC;YACzE,CAAC;QACF,CAAC;IACF,CAAC;CACD;AA1CD,8BA0CC",
  "sourcesContent": [
    "import {EErrorType} from \"./Email/Enums/EErrorType\";\r\nimport {BinanceError} from \"./BinanceError\";\r\nimport {ErrorHandler} from \"./ErrorHandler\";\r\n\r\nexport class HttpError extends Error {\r\n\tpublic static all: HttpError[];\r\n\tcode: number;\r\n\thandler?: ErrorHandler;\r\n\tmessage: string;\r\n\r\n\tpublic static GetErrorType(err: BinanceError | HttpError): EErrorType {\r\n\t\tlet code: number = parseInt(err.code.toString());\r\n\t\tlet isBinance: boolean = false;\r\n\t\tif (typeof err['msg'] === \"string\" && code < 0) {\r\n\t\t\tisBinance = true;\r\n\t\t}\r\n\t\treturn (isBinance) ? EErrorType.Binance : EErrorType.Node;\r\n\t}\r\n\r\n\tpublic static GetHttpErrorByCode(code: number): HttpError | null {\r\n\t\tlet filtered: HttpError[] = HttpError.all.filter(handler => handler.code === code);\r\n\t\tlet result: HttpError;\r\n\t\tif (filtered && filtered.length > 0) {\r\n\t\t\tresult = filtered[0];\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tconstructor(err: BinanceError | HttpError | any) {\r\n\t\tsuper();\r\n\t\tconsole.log(err);\r\n\t\tthis.code = parseInt(err.code.toString());\r\n\t\tlet type: EErrorType = HttpError.GetErrorType(err);\r\n\t\tthis.message = (type === EErrorType.Binance) ? err['msg'] : err['message'];\r\n\t\tif (type === EErrorType.Binance) {\r\n\t\t\tlet matched: BinanceError | null = BinanceError.GetBinanceErrorByCode(this.code);\r\n\t\t\tif (matched !== null) {\r\n\t\t\t\tthis.handler = ErrorHandler.GetErrorHandler(this.code, EErrorType.Binance);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tlet matched: HttpError | null = HttpError.GetHttpErrorByCode(this.code);\r\n\t\t\tif (matched !== null) {\r\n\t\t\t\tthis.handler = ErrorHandler.GetErrorHandler(this.code, EErrorType.Node);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n"
  ]
}