{"version":3,"file":"HttpError.js","sourceRoot":"","sources":["../../src/Error/HttpError.ts"],"names":[],"mappings":"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","sourcesContent":["import {EErrorType} from \"./Email/Enums/EErrorType\";\r\nimport {BinanceError} from \"./BinanceError\";\r\nimport {HttpErrorHandler} from \"./HttpErrorHandler\";\r\nimport allErrors from \"./allErrors\";\r\n\r\nexport class HttpError extends Error {\r\n\tpublic static all: HttpError[] = <HttpError[]>allErrors;\r\n  code: number;\r\n\tmessage: string;\r\n\thandler?: HttpErrorHandler;\r\n\r\n\tpublic static GetErrorType(err: BinanceError | HttpError): EErrorType {\r\n\t\tlet code: number = parseInt(err.code.toString());\r\n\t\tlet isBinance: boolean = false;\r\n\t\tif (typeof err['msg'] === \"string\" && code < 0) {\r\n\t\t\tisBinance = true;\r\n\t\t} else if (typeof err['message'] === \"string\") {\r\n\t\t\tisBinance = false;\r\n\t\t}\r\n\t\treturn (isBinance) ? EErrorType.Binance : EErrorType.Node;\r\n\t}\r\n\r\n\tpublic static GetErrorByCode(code: number): HttpError {\r\n\t\tlet result: HttpError;\r\n\t\tif (HttpError.all.length > 0) {\r\n\t\t\tlet filtered: HttpError[] = HttpError.all.filter(handler => handler.code === code);\r\n\t\t\tif (filtered && filtered.length > 0) {\r\n\t\t\t\tresult = filtered[0];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static GetTimeoutFromIPBannedMsg(err: BinanceError): number {\r\n\t\tlet strFloat: string;\r\n\t\tlet result: number = 0;\r\n\t\tif (err && err.msg) {\r\n\t\t\tlet msg: string = \"IP banned until \";\r\n\t\t\tlet startIdx = err.msg.indexOf(msg) + msg.length;\r\n\t\t\tlet float = parseFloat(err.msg.slice(startIdx, startIdx + 13));\r\n\t\t\tstrFloat = float.toString();\r\n\t\t\tif (strFloat.length === 13) {\r\n\t\t\t\tresult = float - new Date().getTime();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tconstructor(err: BinanceError | HttpError) {\r\n\t\tsuper();\r\n\t\tthis.code = parseInt(err.code.toString());\r\n\t\tlet type: EErrorType = HttpError.GetErrorType(err);\r\n\t\tthis.message = (type === EErrorType.Binance) ? err['msg'] : err['message'];\r\n\t\tlet error:HttpError = HttpError.GetErrorByCode(this.code);\r\n\t\tif(error){\r\n\t\t\tthis.handler = error.handler;\r\n\t\t\tif(error.handler && (!error.handler.code || !error.handler.message)) {\r\n\t\t\t\terror.handler.code = this.code;\r\n\t\t\t\terror.handler.message = this.message;\r\n\t\t\t\terror.handler.handleError(error);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n"]}