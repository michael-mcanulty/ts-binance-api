{"version":3,"file":"NodeMailer.js","sourceRoot":"","sources":["../../src/Error/NodeMailer.ts"],"names":[],"mappings":";;AAAA,+CAA+C;AAK/C;IAmBC,gBAAe,CAAC;IAhBT,SAAS,CAAC,OAAwB,EAAE,cAA4B;QACtE,MAAM,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACtC,EAAE,CAAC,CAAC,CAAC,cAAc,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBACjC,MAAM,CAAC,kCAAkC,CAAC,CAAC;YAC5C,CAAC;YAAC,IAAI,CAAC,CAAC;gBACP,UAAU,CAAC,OAAO,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,IAA0B,EAAE,EAAE;oBAC1G,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;wBACX,MAAM,CAAC,KAAK,CAAC,CAAC;oBACf,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACP,OAAO,CAAC,cAAc,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;oBACxC,CAAC;gBACF,CAAC,CAAC,CAAC;YACJ,CAAC;QACF,CAAC,CAAC,CAAC;IACJ,CAAC;;AAhBa,kBAAO,GAAsB,UAAU,CAAC;AADvD,gCAoBC","sourcesContent":["import * as nodeMailer from \"Error/NodeMailer\";\nimport {IMessageOptions} from \"./Interfaces/IMessageOptions\";\nimport {NodeMailerService} from \"./Types/Types\";\nimport {ISmtpOptions} from \"./Interfaces/ISmtpOptions\";\n\nexport class NodeMailer {\n\tpublic static Service: NodeMailerService = nodeMailer;\n\n\tpublic sendEmail(msgOpts: IMessageOptions, serviceOptions: ISmtpOptions): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (!serviceOptions || !msgOpts) {\n\t\t\t\treject(\"Service Options must be provided\");\n\t\t\t} else {\n\t\t\t\tNodeMailer.Service.createTransport(serviceOptions).sendMail(msgOpts, (error, info: { response: string }) => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve(`Email Sen: ${info.response}`);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tconstructor() {}\n}\n"]}