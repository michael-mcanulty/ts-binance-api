{"version":3,"file":"NodeMailer.js","sourceRoot":"","sources":["../../src/Error/NodeMailer.ts"],"names":[],"mappings":";;AAAA,yCAAyC;AAKzC;IAiBC;IACA,CAAC;IAfM,KAAK,CAAC,SAAS,CAAC,OAAwB,EAAE,cAA4B;QAC5E,EAAE,CAAC,CAAC,CAAC,cAAc,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC,CAAC;QACtE,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,UAAU,CAAC,OAAO,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,IAA0B,EAAE,EAAE;gBAC1G,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACX,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBAC9B,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACP,MAAM,CAAC,eAAe,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACvC,CAAC;YACF,CAAC,CAAC,CAAC;QACJ,CAAC;IACF,CAAC;;AAda,kBAAO,GAAsB,UAAU,CAAC;AADvD,gCAmBC","sourcesContent":["import * as nodeMailer from \"nodemailer\";\r\nimport {IMessageOptions} from \"./Interfaces/IMessageOptions\";\r\nimport {NodeMailerService} from \"./Types/Types\";\r\nimport {ISmtpOptions} from \"./Interfaces/ISmtpOptions\";\r\n\r\nexport class NodeMailer {\r\n\tpublic static Service: NodeMailerService = nodeMailer;\r\n\r\n\tpublic async sendEmail(msgOpts: IMessageOptions, serviceOptions: ISmtpOptions): Promise<any> {\r\n\t\tif (!serviceOptions || !msgOpts) {\r\n\t\t\treturn Promise.reject(new Error(\"Service Options must be provided\"));\r\n\t\t} else {\r\n\t\t\tNodeMailer.Service.createTransport(serviceOptions).sendMail(msgOpts, (error, info: { response: string }) => {\r\n\t\t\t\tif (error) {\r\n\t\t\t\t\treturn Promise.reject(error);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn `Email Sent: ${info.response}`;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor() {\r\n\t}\r\n}\r\n"]}