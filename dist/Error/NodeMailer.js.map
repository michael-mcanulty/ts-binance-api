{"version":3,"file":"NodeMailer.js","sourceRoot":"","sources":["../../src/Error/NodeMailer.ts"],"names":[],"mappings":";;AAAA,yCAAyC;AAKzC,MAAa,UAAU;IAGf,SAAS,CAAC,OAAwB;QACxC,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAC,EAAE;YAErC,IAAI,CAAC,OAAO,EAAE;gBACb,MAAM,CAAC,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC,CAAC;aACtD;YAED,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,IAA0B,EAAE,EAAE;gBACpE,IAAI,KAAK,EAAE;oBACV,MAAM,CAAC,KAAK,CAAC,CAAC;iBACd;qBAAM;oBACN,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBACvB;YACF,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAA;IACH,CAAC;IAED,YAAY,cAA4B;QACvC,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;IAC3D,CAAC;CACD;AAvBD,gCAuBC","sourcesContent":["import * as nodeMailer from \"nodemailer\";\r\nimport {IMessageOptions} from \"./Interfaces/IMessageOptions\";\r\nimport {NodeMailerService} from \"./Types/Types\";\r\nimport {ISmtpOptions} from \"./Interfaces/ISmtpOptions\";\r\n\r\nexport class NodeMailer {\r\n\tpublic service: NodeMailerService;\r\n\r\n\tpublic sendEmail(msgOpts: IMessageOptions): Promise<any> {\r\n\t\treturn new Promise((resolve, reject)=>{\r\n\r\n\t\t\tif (!msgOpts) {\r\n\t\t\t\treject(new Error(\"Service Options must be provided\"));\r\n\t\t\t}\r\n\r\n\t\t\tthis.service.sendMail(msgOpts, (error, info: { response: string }) => {\r\n\t\t\t\tif (error) {\r\n\t\t\t\t\treject(error);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresolve(info.response);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t})\r\n\t}\r\n\r\n\tconstructor(serviceOptions: ISmtpOptions) {\r\n\t\tthis.service = nodeMailer.createTransport(serviceOptions);\r\n\t}\r\n}\r\n"]}