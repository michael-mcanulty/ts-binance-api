{"version":3,"file":"minify.js","sourceRoot":"","sources":["../src/minify.ts"],"names":[],"mappings":"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","sourcesContent":["import MatcherCollection from 'matcher-collection';\nimport ensurePosix from 'ensure-posix-path';\nimport * as path from \"path\";\nimport * as fs from 'fs';\nimport {Stats} from 'fs';\n\n\nexport class Minify{\n\n\tpublic getFilePaths(): void{\n\t\tlet paths: string[];\n\t}\n\n\tpublic getMinifyScript(): string{\n\t\tlet result: string = \"\";\n\t\treturn result;\n\t}\n\n\tconstructor(){}\n}\n\nexport interface IOptions {\n\tcallback?: Function;\n\tdirectories?: boolean;\n\tglobs?: string[];\n\tignore?: string[];\n\tincludeBasePath?: boolean;\n}\n\nexport class Options{\n\tglobs?: string[];\n\tignore?: string[];\n\tincludeBasePath?: boolean;\n\tdirectories?: boolean;\n\tcallback: Function;\n\n\tpublic static toOptions(opts: IOptions): Options {\n\t\treturn new Options(opts.directories, opts.globs, opts.ignore, opts.includeBasePath);\n\t}\n\n\tconstructor(directories?: boolean, globs?: string[], ignore?: string[], includeBasePath?: boolean, callback?: Function) {\n\t\tthis.directories = directories || true;\n\t\tthis.globs = globs;\n\t\tthis.ignore = ignore;\n\t\tthis.includeBasePath = includeBasePath || false;\n\t\tthis.callback = callback;\n\t}\n}\n\nexport class Walk {\n\tpublic baseDir: string;\n\tpublic options: Options;\n\n\tprivate _fullpath(relativePath: string): string {\n\t\treturn `${this.baseDir}/${relativePath}`;\n\t}\n\n\tprivate _getStat(path): Stats {\n\t\tlet stat: Stats;\n\n\t\ttry {\n\t\t\tstat = fs.statSync(path);\n\t\t} catch (error) {\n\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\treturn stat;\n\t}\n\n\tprivate _handleOptions(_options?: IOptions): Options {\n\t\tlet options: Options;\n\t\tif (Array.isArray(_options)) {\n\t\t\toptions = new Options();\n\t\t\toptions.globs = _options;\n\t\t} else if (_options) {\n\t\t\toptions = Options.toOptions(_options);\n\t\t}\n\t\treturn options;\n\t}\n\n\tprivate _handleRelativePath(_relativePath: string) {\n\t\tif (_relativePath == null) {\n\t\t\treturn '';\n\t\t} else if (_relativePath.slice(-1) !== '/') {\n\t\t\treturn _relativePath + '/';\n\t\t} else {\n\t\t\treturn _relativePath;\n\t\t}\n\t}\n\n\tprivate _walkSync(_relativePath?: string, _ensurePosix?: boolean, callback?: Function) {\n\t\tif (_ensurePosix) {\n\t\t\tthis.baseDir = ensurePosix(this.baseDir);\n\t\t}\n\t\tlet relativePath = this._handleRelativePath(_relativePath);\n\t\tlet globs = this.options.globs;\n\t\tlet ignorePatterns = this.options.ignore;\n\t\tlet globMatcher, ignoreMatcher;\n\t\tlet results = [];\n\n\t\tif (ignorePatterns) {\n\t\t\tignoreMatcher = new MatcherCollection(ignorePatterns);\n\t\t}\n\n\t\tif (globs) {\n\t\t\tglobMatcher = new MatcherCollection(globs);\n\t\t}\n\n\t\tif (globMatcher && !globMatcher.mayContain(relativePath)) {\n\t\t\treturn results;\n\t\t}\n\n\t\tlet names = fs.readdirSync(this._fullpath(relativePath));\n\t\tlet entries = names.map(name => {\n\t\t\tlet entryRelativePath = relativePath + name;\n\n\t\t\tif (ignoreMatcher && ignoreMatcher.match(entryRelativePath)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet fullPath = this._fullpath(entryRelativePath);\n\t\t\tlet stats = this._getStat(fullPath);\n\n\t\t\tif (stats && stats.isDirectory()) {\n\t\t\t\t//basePath: string, mode: number, mtime: number, relativePath: string, size: number\n\t\t\t\treturn new Entry(this.baseDir, stats.mode, stats.mtime.getTime(), entryRelativePath + '/', stats.size);\n\t\t\t} else {\n\t\t\t\treturn new Entry(this.baseDir, stats.mode, stats.mtime.getTime(), entryRelativePath, stats.size);\n\t\t\t}\n\t\t}).filter(Boolean);\n\n\t\tlet sortedEntries = entries.sort((a, b) => {\n\t\t\tlet aPath = a.relativePath;\n\t\t\tlet bPath = b.relativePath;\n\n\t\t\tif (aPath === bPath) {\n\t\t\t\treturn 0;\n\t\t\t} else if (aPath < bPath) {\n\t\t\t\treturn -1;\n\t\t\t} else {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t});\n\n\t\tfor (let i = 0; i < sortedEntries.length; ++i) {\n\t\t\tlet entry: Entry = sortedEntries[i];\n\n\t\t\tif (entry.isDirectory()) {\n\t\t\t\tif (this.options.directories !== false && (!globMatcher || globMatcher.match(entry.relativePath))) {\n\t\t\t\t\tif (this.options.callback) {\n\t\t\t\t\t\tcallback(entry);\n\t\t\t\t\t}\n\t\t\t\t\tresults.push(entry);\n\t\t\t\t}\n\t\t\t\tresults = results.concat(this._walkSync(entry.relativePath));\n\t\t\t} else {\n\t\t\t\tif (!globMatcher || globMatcher.match(entry.relativePath)) {\n\t\t\t\t\tif (this.options.callback) {\n\t\t\t\t\t\tcallback(entry);\n\t\t\t\t\t}\n\t\t\t\t\tresults.push(entry);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn results;\n\t}\n\n\tpublic entries() {\n\t\treturn this._walkSync(null, true);\n\t};\n\n\tpublic sync() {\n\t\tlet options: Options = this.options;\n\t\tlet mapFunct;\n\t\tif (options.includeBasePath) {\n\t\t\tmapFunct = (entry: Entry): string => {\n\t\t\t\treturn entry.basePath.split(path.sep).join('/') + '/' + entry.relativePath;\n\t\t\t}\n\t\t} else {\n\t\t\tmapFunct = (entry: Entry): string => {\n\t\t\t\treturn entry.relativePath;\n\t\t\t}\n\t\t}\n\n\t\treturn this._walkSync().map(mapFunct);\n\t}\n\n\tconstructor(baseDir: string, options?: IOptions) {\n\t\tthis.baseDir = baseDir;\n\t\tthis.options = this._handleOptions(options);\n\t}\n}"]}