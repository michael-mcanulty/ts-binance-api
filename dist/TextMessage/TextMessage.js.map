{"version":3,"file":"TextMessage.js","sourceRoot":"","sources":["../../src/TextMessage/TextMessage.ts"],"names":[],"mappings":"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","sourcesContent":["import {ICarrier} from \"./ICarrier\";\r\nimport {NodeMailer} from \"../Error/NodeMailer\";\r\nimport {HttpErrorHandler} from \"../Error/HttpErrorHandler\";\r\nimport {ITextMsgOptions} from \"./ITextMsgOptions\";\r\nimport {IMessageOptions} from \"../Error/Interfaces/IMessageOptions\";\r\nimport {EErrorType} from \"../Error/Enums/EErrorType\";\r\nimport {Binance} from \"../Binance/Binance\";\r\nimport {HttpError} from \"../Error/HttpError\";\r\nimport {ISmtpOptions} from \"../Error/Interfaces/ISmtpOptions\";\r\nimport {TCarrier} from \"./TCarrier\";\r\n\r\nexport class TextMessage {\r\n\tpublic static USCarriers: ICarrier[] = [\r\n\t\t{\r\n\t\t\t\"name\": \"att\",\r\n\t\t\t\"domain\": \"txt.att.net\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"tmobile\",\r\n\t\t\t\"domain\": \"tmomail.net\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"verizon\",\r\n\t\t\t\"domain\": \"vtext.com\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"cricket\",\r\n\t\t\t\"domain\": \"sms.mycricket.com\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"uscellular\",\r\n\t\t\t\"domain\": \"email.uscc.net\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"virginmobile\",\r\n\t\t\t\"domain\": \"vmobl.com\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"boostmobile\",\r\n\t\t\t\"domain\": \"myboostmobile.com\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"metropcs\",\r\n\t\t\t\"domain\": \"mymetropcs.com\"\r\n\t\t}\r\n\t];\r\n\r\n\tcarrier: TCarrier;\r\n\tdomain: string;\r\n\tpublic static mailService: NodeMailer;\r\n\tmsgOptions?: IMessageOptions;\r\n\tsmtpOptions?: ISmtpOptions;\r\n\tpublic static txtMsgOpts: ITextMsgOptions;\r\n\r\n\tpublic getEmailAddress(phoneNumber?: number): string {\r\n\t\treturn `${phoneNumber}@${this.domain}`;\r\n\t}\r\n\r\n\tpublic async send(error: HttpError | Error, srcUrl?: string): Promise<void> {\r\n\t\ttry {\r\n\t\t\tlet isKnownErr: boolean = false;\r\n\t\t\tlet isFatal: boolean = false;\r\n\t\t\tlet msg: string;\r\n\r\n\t\t\tif (typeof TextMessage.txtMsgOpts !== \"object\") {\r\n\t\t\t\treturn Promise.reject(new Error(\"Static Options are missing from TextMessage class\"));\r\n\t\t\t}\r\n\r\n\t\t\tmsg = error.message;\r\n\r\n\t\t\tif (typeof error['isFatal'] === \"boolean\" || (typeof error['handler'] === \"function\")) {\r\n\t\t\t\tisFatal = error['isFatal'];\r\n\t\t\t\tisKnownErr = !!(error['handler'].type);\r\n\t\t\t}\r\n\t\t\tif (!TextMessage.txtMsgOpts.phoneNum) {\r\n\t\t\t\treturn Promise.reject(new Error(\"A recipient's phone number is required phoneNum send a text message.\"));\r\n\t\t\t}\r\n\r\n\t\t\tthis.msgOptions.to = this.getEmailAddress(TextMessage.txtMsgOpts.phoneNum);\r\n\t\t\tthis.msgOptions.subject = `${(isFatal) ? \"Fatal\" : \"\"}${(isKnownErr) ? EErrorType[error['handler'].type] : \"Unknown\"} Error Received`;\r\n\t\t\tthis.msgOptions.text = `${msg}. \\nServer: ${srcUrl}`;\r\n\t\t\tawait HttpErrorHandler.mailService.sendEmail(this.msgOptions, this.smtpOptions);\r\n\t\t\treturn;\r\n\t\t} catch (err) {\r\n\t\t\tthrow err;\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor(carrierName?: TCarrier, msgOptions?: IMessageOptions, smtpOptions?: ISmtpOptions) {\r\n\t\tthis.smtpOptions = smtpOptions || Binance.options.emailServiceOpts;\r\n\t\tthis.msgOptions = msgOptions || Binance.options.emailMsgOpts;\r\n\t\tlet carrier: TCarrier = (carrierName) ? <TCarrier>carrierName.toLowerCase() : <TCarrier>TextMessage.txtMsgOpts.carrier;\r\n\t\tlet matchedCarrier: ICarrier[] = TextMessage.USCarriers.filter(d => {\r\n\t\t\treturn (d.name === carrier);\r\n\t\t});\r\n\t\tif (matchedCarrier.length > 0 && carrier) {\r\n\t\t\tlet match: ICarrier = matchedCarrier[0];\r\n\t\t\tthis.domain = match.domain;\r\n\t\t\tthis.carrier = match.name;\r\n\t\t} else {\r\n\t\t\tthrow new Error(`${carrierName} not found`);\r\n\t\t}\r\n\t\tTextMessage.mailService = new NodeMailer();\r\n\t}\r\n}"]}