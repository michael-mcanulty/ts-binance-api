{"version":3,"file":"Events.js","sourceRoot":"","sources":["../../../src/Websocket/ReconnectingWebSocket/Events.ts"],"names":[],"mappings":";;AAAA;IAIC,YAAY,IAAY,EAAE,MAAW;QACpC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IAClB,CAAC;CACD;AARD,sBAQC;AAED,gBAAwB,SAAQ,KAAK;IAIpC,YAAY,KAAY,EAAE,MAAW;QACpC,KAAK,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;QAC7B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACpB,CAAC;CACD;AATD,gCASC;AAED,gBAAwB,SAAQ,KAAK;IAKpC,YAAY,OAAe,IAAI,EAAE,SAAiB,EAAE,EAAE,MAAW;QAChE,KAAK,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QAHjB,aAAQ,GAAG,IAAI,CAAC;QAItB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACtB,CAAC;CACD;AAVD,gCAUC","sourcesContent":["export class Event {\n\tpublic target: any;\n\tpublic type: string;\n\n\tconstructor(type: string, target: any) {\n\t\tthis.target = target;\n\t\tthis.type = type;\n\t}\n}\n\nexport class ErrorEvent extends Event {\n\tpublic error: Error;\n\tpublic message: string;\n\n\tconstructor(error: Error, target: any) {\n\t\tsuper('error', target);\n\t\tthis.message = error.message;\n\t\tthis.error = error;\n\t}\n}\n\nexport class CloseEvent extends Event {\n\tpublic code: number;\n\tpublic reason: string;\n\tpublic wasClean = true;\n\n\tconstructor(code: number = 1000, reason: string = '', target: any) {\n\t\tsuper('close', target);\n\t\tthis.code = code;\n\t\tthis.reason = reason;\n\t}\n}\n\nexport interface WebSocketEventMap {\n\tclose: CloseEvent;\n\terror: ErrorEvent;\n\tmessage: MessageEvent;\n\topen: Event;\n}\n\nexport type EventListener = (events: Event | CloseEvent | MessageEvent) => void;"]}