{"version":3,"file":"BotWebsocket.js","sourceRoot":"","sources":["../../src/Websocket/BotWebsocket.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Html5WebSocket from 'html5-websocket'\nimport {default as ReconnectingWebSocket, IReconOptions} from \"./ReconnectingWebSocket/ReconnectingWebSocket\";\nimport {IStreamTickerRaw} from \"../ExchangeInfo/Interfaces/IStreamTickerRaw\";\nimport {Price} from \"../Transaction/Price\";\nimport {Ticker} from \"../ExchangeInfo/ticker\";\nimport {IBinanceOptions} from \"../Binance/Interfaces/IBinanceOptions\";\nimport {Rest} from \"../Rest/Rest\";\nimport {HttpError} from \"../Error/HttpError\";\nimport {IStreamRawKlineResponse} from \"../ExchangeInfo/Interfaces/ICandleBinance\";\nimport {Candle} from \"../ExchangeInfo/Candle\";\nimport {IOutboundAccountInfoStream} from \"../Account/Interfaces/IOutboundAccountInfoStream\";\nimport {IExecutionReportRaw} from \"../Account/Interfaces/IExecutionReportRaw\";\nimport {ExecutionReport} from \"../Account/ExecutionReport\";\nimport {OutboundAccountInfo} from \"../Account/OutboundAccountInfo\";\n\nexport class BotWebsocket extends Rest {\n\tprivate static _INSTANCE: BotWebsocket;\n\tprivate readonly _reconOptions: IReconOptions = <IReconOptions>{};\n\tprivate static _ws: ReconnectingWebSocket;\n\tpublic static BASE: string = 'wss://stream.binance.com:9443/ws';\n\tprivate static isAlive: boolean = false;\n\tpublic options: IBinanceOptions;\n\tprivate _url: string;\n\n\tpublic static get Instance() {\n\t\treturn this._INSTANCE;\n\t}\n\n\tget url(): string {\n\t\treturn this._url;\n\t}\n\n\tset url(value: string) {\n\t\tthis._url = value;\n\t}\n\n\t_getTickerUrl(symbol?: string | null): string {\n\t\tif (symbol && symbol !== null) {\n\t\t\treturn `${BotWebsocket.BASE}/${symbol.toLowerCase()}@ticker`;\n\t\t} else {\n\t\t\treturn `${BotWebsocket.BASE}/!ticker@arr`;\n\t\t}\n\t}\n\n\t_getTickers(callback: Function): any {\n\t\tlet tickers: Ticker[];\n\t\tlet w: ReconnectingWebSocket = this.openWebSocket(this._getTickerUrl(null));\n\t\tw.onmessage = msg => {\n\t\t\tlet res: IStreamTickerRaw[];\n\t\t\tres = JSON.parse(msg.data);\n\t\t\ttickers = res.map((raw: IStreamTickerRaw) => {\n\t\t\t\treturn new Ticker(raw);\n\t\t\t});\n\t\t\tcallback(tickers);\n\t\t};\n\n\t\treturn (options) => w.close(1000, 'Close handle was called');\n\t}\n\n\tpublic balances(callback: Function): void {\n\t\tconst keepStreamAlive = (method, listenKey) => async () => await method.apply(this, {listenKey});\n\t\tthis.getDataStream().then(async lk => {\n\t\t\tconst listenKey = lk.listenKey;\n\t\t\tconst w = this.openWebSocket(`${BotWebsocket.BASE}/${listenKey}`);\n\t\t\tw.onmessage = (msg) => {\n\t\t\t\tlet json = JSON.parse(msg.data);\n\t\t\t\tif (json.e === \"outboundAccountInfo\") {\n\t\t\t\t\tlet infoRaw: IOutboundAccountInfoStream;\n\t\t\t\t\tinfoRaw = json;\n\t\t\t\t\tlet accountInfo: OutboundAccountInfo = OutboundAccountInfo.fromBinanceStream(infoRaw);\n\t\t\t\t\tcallback(accountInfo);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst int = setInterval(keepStreamAlive(this.keepDataStream, listenKey), 50e3);\n\t\t\tkeepStreamAlive(this.keepDataStream, listenKey)();\n\n\t\t\treturn async () => {\n\t\t\t\tclearInterval(int);\n\t\t\t\tawait this.closeDataStream();\n\t\t\t\tw.close(1000, 'Close handle was called');\n\t\t\t};\n\t\t});\n\t}\n\n\tpublic orders(callback: Function): void {\n\t\tconst keepStreamAlive = (method, listenKey) => async () => await method.apply(this, {listenKey});\n\t\tthis.getDataStream().then(async lk => {\n\t\t\tconst listenKey = lk.listenKey;\n\t\t\tconst w = this.openWebSocket(`${BotWebsocket.BASE}/${listenKey}`);\n\t\t\tw.onmessage = (msg) => {\n\t\t\t\tlet json = JSON.parse(msg.data);\n\t\t\t\tif (json.e === \"executionReport\") {\n\t\t\t\t\tlet reportRaw: IExecutionReportRaw;\n\t\t\t\t\treportRaw = json;\n\t\t\t\t\tlet executionReport: ExecutionReport = ExecutionReport.fromBinanceStream(reportRaw);\n\t\t\t\t\tcallback(executionReport);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst int = setInterval(keepStreamAlive(this.keepDataStream, listenKey), 50e3);\n\t\t\tkeepStreamAlive(this.keepDataStream, listenKey)();\n\n\t\t\treturn async () => {\n\t\t\t\tclearInterval(int);\n\t\t\t\tawait this.closeDataStream();\n\t\t\t\tw.close(1000, 'Close handle was called');\n\t\t\t};\n\t\t});\n\t}\n\n\tpublic user(callback: Function): void {\n\t\tconst keepStreamAlive = (method, listenKey) => async () => await method.call(this, {listenKey});\n\t\tthis.getDataStream().then(async lk => {\n\t\t\tconst listenKey = lk.listenKey;\n\t\t\tconst w = this.openWebSocket(`${BotWebsocket.BASE}/${listenKey}`);\n\t\t\tw.onmessage = (msg) => {\n\t\t\t\tlet json = JSON.parse(msg.data);\n\t\t\t\tif (json.e === \"executionReport\") {\n\t\t\t\t\tlet reportRaw: IExecutionReportRaw;\n\t\t\t\t\treportRaw = json;\n\t\t\t\t\tlet executionReport: ExecutionReport = ExecutionReport.fromBinanceStream(reportRaw);\n\t\t\t\t\tcallback(executionReport);\n\t\t\t\t} else if (json.e === \"outboundAccountInfo\") {\n\t\t\t\t\tlet infoRaw: IOutboundAccountInfoStream;\n\t\t\t\t\tinfoRaw = json;\n\t\t\t\t\tlet accountInfo: OutboundAccountInfo = OutboundAccountInfo.fromBinanceStream(infoRaw);\n\t\t\t\t\tcallback(accountInfo);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst int = setInterval(keepStreamAlive(this.keepDataStream, listenKey), 50e3);\n\t\t\tkeepStreamAlive(this.keepDataStream, listenKey)();\n\n\t\t\treturn async () => {\n\t\t\t\tclearInterval(int);\n\t\t\t\tawait this.closeDataStream();\n\t\t\t\tw.close(1000, 'Close handle was called');\n\t\t\t};\n\t\t});\n\t}\n\n\tpublic candles(symbols: string[], intervals: string[], callback: Function): any {\n\t\tconst symbolCache = symbols.map(symbol => {\n\t\t\treturn intervals.map(interval => {\n\t\t\t\tlet w: ReconnectingWebSocket = this.openWebSocket(`${BotWebsocket.BASE}/${symbol.toLowerCase()}@kline_${interval}`);\n\t\t\t\tw.onmessage = msg => {\n\t\t\t\t\tlet klineRes: IStreamRawKlineResponse;\n\t\t\t\t\tklineRes = JSON.parse(msg.data);\n\t\t\t\t\tlet candle: Candle;\n\t\t\t\t\tlet qa: string = this.getQuoteAssetName(symbol);\n\t\t\t\t\tif (klineRes.k.x) {\n\t\t\t\t\t\tcandle = Candle.fromStream(klineRes, qa);\n\t\t\t\t\t\tcallback(candle);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\treturn w;\n\t\t\t});\n\t\t});\n\n\t\treturn (options) => symbolCache.forEach(cache => cache.forEach(w => w.close(1000, 'Close handle was called')));\n\t}\n\n\tprivate static heartbeat(): void {\n\t\tsetInterval(async () => {\n\t\t\ttry {\n\t\t\t\tthis.isAlive = await BotWebsocket.Instance.ping();\n\t\t\t} catch (err) {\n\t\t\t\tlet error: HttpError = new HttpError({msg: 'DISCONNECTED', code: -1001});\n\t\t\t\tBotWebsocket._ws.close(error.code, error.message);\n\t\t\t}\n\t\t}, 3000);\n\t}\n\n\tpublic openWebSocket(url): ReconnectingWebSocket {\n\t\tif (url) {\n\t\t\tthis.url = url;\n\t\t\tBotWebsocket._ws = new ReconnectingWebSocket(this.url, undefined, this._reconOptions);\n\t\t\treturn BotWebsocket._ws;\n\t\t}\n\t}\n\n\tpublic prices(callback: Function) {\n\t\tlet ticksToPrices = (tickers: Ticker[]) => {\n\t\t\tlet prices: Price[] = tickers.map(t => {\n\t\t\t\treturn t.toPrice();\n\t\t\t});\n\t\t\tcallback(prices);\n\t\t};\n\n\t\tthis._getTickers(ticksToPrices);\n\t}\n\n\tconstructor(options?: IBinanceOptions) {\n\t\tsuper(options);\n\t\tthis.options = options;\n\t\tthis._reconOptions = <IReconOptions>{};\n\t\tthis._reconOptions.connectionTimeout = 4E3;\n\t\tthis._reconOptions.constructor = typeof window !== 'undefined' ? BotWebsocket : Html5WebSocket;\n\t\tthis._reconOptions.debug = false;\n\t\tthis._reconOptions.maxReconnectionDelay = 10E3;\n\t\tthis._reconOptions.maxRetries = Infinity;\n\t\tthis._reconOptions.minReconnectionDelay = 4E3;\n\t}\n}"]}