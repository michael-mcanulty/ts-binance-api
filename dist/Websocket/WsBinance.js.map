{
  "version": 3,
  "file": "WsBinance.js",
  "sourceRoot": "",
  "sources": [
    "../../src/Websocket/WsBinance.ts"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "import * as Html5WebSocket from 'html5-websocket'\nimport {default as ReconnectingWebSocket, iReconWSOptions} from \"./ReconnectingWebSocket/ReconnectingWebSocket\";\nimport {IStreamTickerRaw} from \"../ExchangeInfo/Interfaces/IStreamTickerRaw\";\nimport {Price} from \"../Transaction/Price\";\nimport {Ticker} from \"../ExchangeInfo/ticker\";\nimport {iBinanceOptions} from \"../Binance/Interfaces/iBinanceOptions\";\nimport {BinanceRest} from \"../Rest/BinanceRest\";\nimport {HttpError} from \"../Error/HttpError\";\n\nexport class WSBinance extends BinanceRest {\n\tprivate _cache: any;\n\tprivate readonly _reconOptions: iReconWSOptions = <iReconWSOptions>{};\n\tprivate _ws: ReconnectingWebSocket;\n\tpublic base: string = 'wss://stream.binance.com:9443/ws';\n\tprivate isAlive: boolean = false;\n\tpublic options: iBinanceOptions;\n\tprivate _url: string;\n\tget url(): string {\n\t\treturn this._url;\n\t}\n\n\tset url(value: string) {\n\t\tthis._url = value;\n\t}\n\n\tprivate _getTickerUrl(symbol?: string | null): string {\n\t\tif (symbol && symbol !== null) {\n\t\t\treturn `${this.base}/${symbol.toLowerCase()}@ticker`;\n\t\t} else {\n\t\t\treturn `${this.base}/!ticker@arr`;\n\t\t}\n\t}\n\n\tpublic cache(payload: any | any[]): any[] {\n\t\treturn Array.isArray(payload) ? payload : [payload];\n\t}\n\n\tpublic getPrices(cb: Function) {\n\t\tlet ticksToPrices = (tickers: Ticker[]) => {\n\t\t\tlet prices: Price[] = tickers.map(t => {\n\t\t\t\treturn t.toPrice();\n\t\t\t});\n\t\t\tcb(prices);\n\t\t};\n\n\t\tthis.getTickers(ticksToPrices);\n\t}\n\n\tpublic getTickers(cb: Function): any {\n\t\tlet tickers: Ticker[];\n\t\tlet w: ReconnectingWebSocket = this.openWebSocket(this._getTickerUrl(null));\n\t\tw.onmessage = msg => {\n\t\t\tlet res: IStreamTickerRaw[];\n\t\t\tres = JSON.parse(msg.data);\n\t\t\ttickers = res.map((raw: IStreamTickerRaw) => {\n\t\t\t\treturn new Ticker(raw);\n\t\t\t});\n\t\t\tcb(tickers);\n\t\t};\n\n\t\treturn (options) => this._cache.forEach(w => w.close(1000, 'Close handle was called'));\n\t}\n\n\tpublic getUser(): Promise<any> {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\tconst keepStreamAlive = (method, listenKey) => () => method({listenKey});\n\t\t\tthis.user = async cb => {\n\t\t\t\tthis.listenKey = await this.getDataStream();\n\t\t\t\tconst w = this.openWebSocket(`${this.base}/${this.listenKey}`);\n\t\t\t\tw.onmessage = (msg) => (this.userEventHandler(cb)(msg));\n\n\t\t\t\tconst int = setInterval(keepStreamAlive(this.keepDataStream, this.listenKey), 50e3);\n\t\t\t\tkeepStreamAlive(this.keepDataStream, this.listenKey)();\n\n\t\t\t\tlet result = async () => {\n\t\t\t\t\tclearInterval(int);\n\t\t\t\t\tawait this.closeDataStream();\n\t\t\t\t\tw.close(1000, 'Close handle was called');\n\t\t\t\t};\n\t\t\t\tresolve(result);\n\t\t\t}\n\t\t});\n\t}\n\n\t//Check for disconnected state\n\tprivate heartbeat(): void {\n\t\tsetInterval(async () => {\n\t\t\ttry {\n\t\t\t\tthis.isAlive = await this.ping();\n\t\t\t} catch (err) {\n\t\t\t\tlet error: HttpError = new HttpError({msg: 'DISCONNECTED', code: -1001});\n\t\t\t\tthis._ws.close(error.code, error.message);\n\t\t\t}\n\t\t}, 3000);\n\t}\n\n\tpublic openWebSocket(url): ReconnectingWebSocket {\n\t\tif (url) {\n\t\t\tthis.url = url;\n\t\t\tthis._ws = new ReconnectingWebSocket(this.url, undefined, this._reconOptions);\n\t\t\treturn this._ws;\n\t\t}\n\t}\n\n\tconstructor(options: iBinanceOptions) {\n\t\tsuper(options);\n\t\tthis.options = options;\n\t\tthis._reconOptions = <iReconWSOptions>{};\n\t\tthis._reconOptions.connectionTimeout = 4E3;\n\t\tthis._reconOptions.constructor = typeof window !== 'undefined' ? WSBinance : Html5WebSocket;\n\t\tthis._reconOptions.debug = false;\n\t\tthis._reconOptions.maxReconnectionDelay = 10E3;\n\t\tthis._reconOptions.maxRetries = Infinity;\n\t\tthis._reconOptions.minReconnectionDelay = 4E3;\n\t\tthis.heartbeat();\n\t}\n}"
  ]
}