"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const ReconnectingWebSocket_1=require("./ReconnectingWebSocket/ReconnectingWebSocket"),ticker_1=require("../ExchangeInfo/ticker"),Rest_1=require("../Rest/Rest"),Candle_1=require("../ExchangeInfo/Candle"),ExecutionReport_1=require("../Account/ExecutionReport"),OutboundAccountInfo_1=require("../Account/OutboundAccountInfo");class BotWebsocket extends Rest_1.Rest{constructor(e){super(e),this._reconOptions={},this._reconOptions={},this._reconOptions.connectionTimeout=4e3,this._reconOptions.constructor=BotWebsocket,this._reconOptions.debug=!1,this._reconOptions.maxReconnectionDelay=1e4,this._reconOptions.maxRetries=1/0,this._reconOptions.minReconnectionDelay=4e3}get url(){return this._url}set url(e){this._url=e}_getTickerUrl(e){return e&&null!==e?`${BotWebsocket.BASE}/${e.toLowerCase()}@ticker`:`${BotWebsocket.BASE}/!ticker@arr`}_getTickers(e){let t,n=this.openWebSocket(this._getTickerUrl(null));return n.onmessage=(n=>{let o;o=JSON.parse(n.data),t=o.map(e=>new ticker_1.Ticker(e)),e(t)}),e=>n.close(1e3,"Close handle was called")}balances(e){const t=this,n=(e,t)=>async()=>await e.apply(this,{listenKey:t});t.getDataStream().then(async o=>{const s=o.listenKey,c=this.openWebSocket(`${BotWebsocket.BASE}/${s}`);c.onmessage=(t=>{let n=JSON.parse(t.data);if("outboundAccountInfo"===n.e){let t;t=n;let o=OutboundAccountInfo_1.OutboundAccountInfo.fromBinanceStream(t);e(o.balances)}});const a=setInterval(n(t.keepDataStream,s),5e4);return n(t.keepDataStream,s)(),async()=>{clearInterval(a),await t.closeDataStream(),c.close(1e3,"Close handle was called")}})}candles(e,t,n){const o=e.map(e=>t.map(t=>{let o=this.openWebSocket(`${BotWebsocket.BASE}/${e.toLowerCase()}@kline_${t}`);return o.onmessage=(async e=>{let t,o;(t=JSON.parse(e.data)).k.x&&(o=Candle_1.Candle.fromWebsocket(t),n(o))}),o}));return e=>o.forEach(e=>e.forEach(e=>e.close(1e3,"Close handle was called")))}openWebSocket(e){if(e)return this.url=e,this._ws=new ReconnectingWebSocket_1.default(this.url,this._reconOptions),this._ws}orders(e){const t=this,n=(e,t)=>async()=>await e.apply(this,{listenKey:t});t.getDataStream().then(async o=>{const s=o.listenKey,c=this.openWebSocket(`${BotWebsocket.BASE}/${s}`);c.onmessage=(t=>{let n=JSON.parse(t.data);if("executionReport"===n.e){let t;t=n;let o=ExecutionReport_1.ExecutionReport.fromBinanceStream(t);e(o)}});const a=setInterval(n(t.keepDataStream,s),5e4);return n(t.keepDataStream,s)(),async()=>{clearInterval(a),await t.closeDataStream(),c.close(1e3,"Close handle was called")}})}prices(e){this._getTickers(t=>{let n=t.map(e=>e.toPrice());e(n)})}user(e){const t=this,n=(e,t)=>async()=>await e.call(this,{listenKey:t});t.getDataStream().then(async o=>{const s=o.listenKey,c=this.openWebSocket(`${BotWebsocket.BASE}/${s}`);c.onmessage=(t=>{let n=JSON.parse(t.data);if("executionReport"===n.e){let t;t=n;let o=ExecutionReport_1.ExecutionReport.fromBinanceStream(t);e(o)}else if("outboundAccountInfo"===n.e){let t;t=n;let o=OutboundAccountInfo_1.OutboundAccountInfo.fromBinanceStream(t);e(o)}});const a=setInterval(n(t.keepDataStream,s),5e4);return n(t.keepDataStream,s)(),async()=>{clearInterval(a),await t.closeDataStream(),c.close(1e3,"Close handle was called")}})}}BotWebsocket.BASE="wss://stream.binance.com:9443/ws",exports.BotWebsocket=BotWebsocket;